{"version":3,"sources":["components/Drawer.jsx","components/Header.jsx","utilities.js","components/ActionPumpForm.jsx","components/UnitCards.jsx","components/LogTable.jsx","components/ExperimentSummary.jsx","components/Chart.jsx","components/AllUnitsManagerCard.jsx","components/ClearChartButton.jsx","components/ClearLogButton.jsx","ExperimentOverview.jsx","DownloadData.jsx","components/CleaningScript.jsx","components/StartSensors.jsx","components/StartCalculations.jsx","StartNewExperiment.jsx","EditConfig.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SideDrawer","React","useState","isOpen","setIsOpen","isSelected","path","window","location","pathname","toggleDrawer","open","event","type","key","Fragment","IconButton","color","aria-label","edge","onClick","Drawer","anchor","onClose","onOpen","role","onKeyDown","alt","src","width","style","marginLeft","marginTop","List","ListItem","href","component","button","selected","ListItemIcon","ListItemText","primary","Divider","fontSize","useStyles","makeStyles","theme","root","flexGrow","title","Header","classes","className","AppBar","position","Toolbar","variant","Typography","Link","underline","height","target","rel","Button","textTransform","parseINIString","data","regex","section","param","comment","value","lines","split","forEach","line","test","match","length","actionTextField","padding","actionForm","actionToAct","ActionPumpForm","props","mL","setML","duration","setDuration","isMLDisabled","setIsMLDisabled","isDurationDisabled","setIsDurationDisabled","openSnackbar","setOpenSnackbar","id","action","TextField","name","size","label","disabled","onChange","e","preventDefault","params","ml","source_of_event","fetch","unitNumber","URLSearchParams","replace","Snackbar","anchorOrigin","vertical","horizontal","message","autoHideDuration","minWidth","content","paddingLeft","paddingRight","paddingTop","paddingBottom","unitTitle","unitTitleDialog","suptitle","disabledText","pos","marginBottom","footnote","paper","backgroundColor","border","overflowY","maxHeight","slider","margin","divider","textbox","display","alignLeft","flex","textAlign","alignRight","textField","maxWidth","textFieldCompact","spacing","marginRight","displaySettingsHidden","overflow","formControl","PatientButton","buttonText","setButtonText","useEffect","disableElevation","CircularProgress","UnitSettingDisplay","stateDisplay","state","msg","default","onConnect","bind","onMessageArrived","this","passChildData","client","Client","Math","random","connect","onSuccess","prevProps","isUnitActive","MQTTConnect","subscribe","unit","experiment","topic","join","qos","parsedFloat","parseFloat","payloadString","payload","isNaN","setState","updateParent","isStateSetting","displaySettings","fontFamily","toFixed","precision","measurementUnit","Component","SilentForm","defaults","defaultValue","InputProps","endAdornment","InputAdornment","PIDTurbidostatForm","volume","target_od","onSettingsChange","PIDMorbidostatForm","target_growth_rate","ButtonChangeIODialog","setOpen","io_algorithm","algoSettings","setAlgoSettings","isClicked","setIsClicked","setClient","console","log","updateFromChild","setting","prevState","currentIOAlgorithm","Dialog","aria-labelledby","PaperProps","DialogTitle","config","DialogContent","gutterBottom","FormControl","FormLabel","Select","native","mode","map","v","switchToForm","Message","JSON","stringify","destinationName","publish","ButtonSettingsDialog","defaultStirring","setDefaultStirring","snackbarOpen","setSnackbarOpen","setPioreactorJobState","job","sendMessage","String","setTimeout","startPioreactorJob","job_attr","then","res","setPioreactorJobAttr","setPioreactorJobAttrOnEnter","a","response","ok","text","Error","catch","error","fetchData","createUserButtonsBasedOnState","jobState","parentJob","odButtons","ODReadingJobState","grButtons","growthRateJobState","ioButtons","IOEventsJobState","stirringButtons","stirringState","ioAlgorithm","Slider","parseInt","stirringDCState","step","valueLabelDisplay","onChangeCommitted","marks","volumeState","onKeyPress","targetODState","durationState","targetGrowthRateState","ButtonActionDialog","isPlural","clsx","UnitCard","showingAllSettings","setShowingAllSettings","setStirringDCState","setStirringState","setODReadingJobState","setGrowthRateJobState","setIOEventsJobState","setTargetODState","setDurationState","setTargetGrowthRateState","setVolumeState","setIoAlgorithm","textSettingsClasses","Card","CardContent","CardActions","Grid","container","item","xs","md","lg","UnitCards","activeUnits","setActiveUnits","Object","entries","filter","units","includes","LogTable","listOfLogs","json","getData","pop","unshift","timestamp","moment","format","string","slice","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","colSpan","headerCell","tightCell","TableBody","i","smallText","renameUnit","withStyles","tightRight","cardContent","EditableDescription","handleChange","evt","desc","onBlur","originalDesc","method","body","description","headers","status","openSnackBar","handleSnackbarClose","reason","render","Box","fontWeight","innerRef","contentEditable","html","tagName","createRef","ExperimentSummary","experimentMetadata","startedAt","justifyContent","float","verticalAlign","diff","colors","Chart","createToolTip","d","datum","x","renameAndFormatSeries","childName","round","y","seriesMap","maxTimestamp","hiddenSeries","Set","lastMsgRecievedAt","names","legendEvents","minTimestamp","subtract","selectLegendData","selectVictoryLines","dataFile","initialSeriesMap","filterDataPoints","keys","mts","min","values","s","createLegendEvents","idx","eventKey","eventHandlers","mutation","delete","add","retained","currentTime","isODReading","push","newSeriesMap","results","index","sensor","breakString","totalLength","delta_ts","startValue","stopValue","cardinality","arr","linspace","startOf","mt","symbol","fill","has","interpolation","labels","stroke","strokeWidth","parent","VictoryVoronoiContainer","createContainer","axis_display_ts_format","ts","createXTickValues","domainPadding","left","right","bottom","top","events","responsive","VictoryTheme","material","containerComponent","voronoiBlacklist","labelComponent","cornerRadius","flyoutStyle","textAnchor","tickFormat","formatTs","tickValues","tickLabels","offsetY","orientation","crossAxis","dependentAxis","domain","yAxisLabel","axisLabelComponent","dy","symbolSpacer","itemsPerRow","borderPadding","cursor","gutter","dividerStyle","jobButton","ButtonAllUnitSettingsDialog","setJobState","setPioreactorJobStateOnEnter","aria-describedby","ButtonConfirmStopProcessDialog","handleClose","DialogContentText","DialogActions","autoFocus","VolumeThroughputTally","mediaThroughputPerUnit","altMediaThroughputPerUnit","mediaThroughput","altMediaThroughput","mediaRate","altMediaRate","getRecentRates","hash","object","hasOwnProperty","topicParts","objectRef","totalRef","addOrUpdate","total","reduce","b","AllUnitsManagerCard","ClearChartButton","jobName","reload","ClearLogButton","Overview","setExperimentMetadata","setConfig","getLatestExperiment","getConfig","justify","ExperimentSelection","experiments","setExperiments","inputProps","CheckboxesGroup","FormGroup","FormControlLabel","control","Checkbox","checked","isChecked","growth_rates","io_events","od_readings_raw","od_readings_filtered","logs","alt_media_fraction","io_algorithm_settings","DownloadDataFormContainer","isRunning","setIsRunning","isError","setIsError","errorMsg","setErrorMsg","experimentSelection","datasetCheckbox","runningFeedback","errorFeedbackOrDefault","some","link","document","createElement","setAttribute","appendChild","click","remove","DownloadData","actionsContainer","resetContainer","divInstructions","CycleLiquid","liquid","additionalMsg","duty_cycle","MediaFlush","isAlt","altMedia","AddFinalVolumeOfMedia","VerticalLinearStepper","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","Step","StepLabel","StepContent","getStepContent","Paper","square","elevation","StartStirringButton","StartODReading","StartSensors","direction","alignItems","fontScale","StartGrowthRate","snackbarMessage","setSnackbarMessage","r","StartCalculations","setExperiment","instructions","halfTextField","ExperimentSummaryForm","formError","setFormError","expName","setExpName","setTimestamp","setDescription","required","InputLabelProps","shrink","rowsMax","placeholder","multiline","fullWidth","publishExpNameToMQTT","StartNewExperimentContainer","skipped","setSkipped","optional","isStepOptional","isStepSkipped","stepProps","labelProps","completed","prevSkipped","newSkipped","scrollTo","StartNewExperiment","EditableCodeDiv","onSelectionChange","filename","getCodeFlaskRef","codeFlask","onTextChange","code","snackbarMsg","availableConfigs","saveCurrentCode","getListOfConfigFiles","letterSpacing","editorRef","language","EditConfigContainer","EditConfig","createMuiTheme","palette","background","main","App","CssBaseline","ExperimentOverview","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0da7a514.chunk.js","sourcesContent":["import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BatteryStdIcon from '@material-ui/icons/BatteryStd';\n\nexport default function SideDrawer() {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  function isSelected(path) {\n    return (window.location.pathname === path)\n  }\n\n\n\n  const toggleDrawer = (open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setIsOpen(open);\n  };\n\n  const list = () => (\n    <div\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <img alt=\"pioreactor logo\" src=\"grey_color.png\" width=\"40%\" style={{marginLeft: \"70px\", marginTop: \"5px\"}}/>\n      <List>\n\n        <ListItem href=\"/\" component=\"a\" button key={\"overview\"} selected={isSelected(\"/\") || isSelected(\"/overview\")}>\n          <ListItemIcon><DashboardIcon color={(isSelected(\"/\") || isSelected(\"/overview\")) ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Experiment Overview\"} />\n        </ListItem>\n\n        <ListItem href=\"/download-data\" component=\"a\" button key={\"download_data\"} selected={isSelected(\"/download-data\")}>\n          <ListItemIcon><SaveAltIcon color={isSelected(\"/download-data\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Download experiment data\"} />\n        </ListItem>\n\n      </List>\n      <Divider />\n      <List>\n        <ListItem button href=\"/edit-config\"  component=\"a\" key={\"edit_config\"} selected={isSelected(\"/edit-config\")}>\n          <ListItemIcon> <EditIcon color={isSelected(\"/edit-config\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Edit config.ini\"} />\n        </ListItem>\n        <ListItem button href=\"/calibrate\"  component=\"a\" key={\"calibrate\"} selected={isSelected(\"/calibrate\")}>\n          <ListItemIcon> <SettingsIcon color={isSelected(\"/calibrate\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Calibrate unit\"} />\n        </ListItem>\n\n        <ListItem button href=\"/add-new-pioreactor\"  component=\"a\" key={\"add-new-pioreactor\"} selected={isSelected(\"/add-new-pioreactor\")}>\n          <ListItemIcon> <BatteryStdIcon color={isSelected(\"/add-new-pioreactor\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Add new Pioreactor\"} />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem>\n          <ListItemText\n            primary={<span style={{fontSize: \".9em\"}}>Questions? Feedback? Email us at<br/><code><a href=\"mailto:support@pioreactor.com\">support@pioreactor.com</a></code></span>}\n          />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n      <React.Fragment key={\"leftDrawer\"}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={toggleDrawer(true)}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Drawer\n          anchor={\"left\"}\n          open={isOpen}\n          onClose={toggleDrawer(false)}\n          onOpen={toggleDrawer(true)}\n        >\n          {list()}\n        </Drawer>\n      </React.Fragment>\n  );\n}\n","import React from 'react'\nimport {AppBar, Toolbar, Typography, Link, Button} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/styles';\nimport SideDrawer from './Drawer'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nconst Header = () => {\n    const classes = useStyles();\n    return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <SideDrawer />\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link color=\"inherit\" underline=\"none\" href=\"/\" className={classes.title}> <img alt=\"pioreactor logo\" src=\"white_colour.png\" style={{width: \"120px\", height: \"29px\"}}/> </Link>\n          </Typography>\n          <Link color=\"inherit\" underline=\"none\" href=\"https://github.com/Pioreactor/pioreactor/wiki\" target=\"_blank\" rel=\"noopener\">\n            <Button color=\"inherit\" style={{textTransform: \"none\"}}>Help </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n    )\n}\n\nexport default Header;\n","\nexport function parseINIString(data){\n    var regex = {\n        section: /^\\s*\\[\\s*([^\\]]*)\\s*\\]\\s*$/,\n        param: /^\\s*([^=]+?)\\s*=\\s*(.*?)\\s*$/,\n        comment: /^\\s*;.*$/\n    };\n    var value = {};\n    var lines = data.split(/[\\r\\n]+/);\n    var section = null;\n    lines.forEach(function(line){\n        if(regex.comment.test(line)){\n            return;\n        }else if(regex.param.test(line)){\n            var match = line.match(regex.param);\n            if(section){\n                value[section][match[1]] = match[2];\n            }else{\n                value[match[1]] = match[2];\n            }\n        }else if(regex.section.test(line)){\n            var match = line.match(regex.section);\n            value[match[1]] = {};\n            section = match[1];\n        }else if(line.length === 0 && section){\n            section = null;\n        };\n    });\n    return value;\n}","import React, {useState} from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n  },\n  actionForm: {\n    padding: \"20px 0px 0px 0px\",\n  }\n});\n\n\nconst actionToAct = {\n  \"remove_waste\": \"Removing waste\",\n  \"add_media\": \"Adding media\",\n  \"add_alt_media\": \"Adding alt. media\",\n\n}\n\nexport default function ActionPumpForm(props) {\n  const emptyState = \"\";\n  const [mL, setML] = useState(emptyState);\n  const [duration, setDuration] = useState(emptyState);\n  const classes = useStyles();\n  const [isMLDisabled, setIsMLDisabled] = useState(false);\n  const [isDurationDisabled, setIsDurationDisabled] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (mL !== emptyState || duration !== emptyState) {\n      const params = mL !== \"\" ? { ml: mL, source_of_event: \"UI\"} : { duration: duration, source_of_event: \"UI\"};\n      fetch(\n        \"/run/\" +\n          props.action +\n          \"/\" +\n          props.unitNumber +\n          \"?\" +\n          new URLSearchParams(params)\n      );\n      setOpenSnackbar(true);\n    }\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false );\n  };\n\n  function handleMLChange(e) {\n    setML(e.target.value);\n    setIsDurationDisabled(true);\n    if (e.target.value === emptyState) {\n      setIsDurationDisabled(false);\n    }\n  }\n\n  function handleDurationChange(e) {\n    setDuration(e.target.value);\n    setIsMLDisabled(true);\n    if (e.target.value === emptyState) {\n      setIsMLDisabled(false);\n    }\n  }\n\n  return (\n    <form id={props.action} className={classes.actionForm}>\n      <TextField\n        name=\"mL\"\n        value={mL}\n        size=\"small\"\n        id={props.action + \"_mL\"}\n        label=\"mL\"\n        variant=\"outlined\"\n        disabled={isMLDisabled}\n        onChange={handleMLChange}\n        className={classes.actionTextField}\n      />\n      <TextField\n        name=\"duration\"\n        value={duration}\n        size=\"small\"\n        id={props.action + \"_duration\"}\n        label=\"seconds\"\n        variant=\"outlined\"\n        disabled={isDurationDisabled}\n        onChange={handleDurationChange}\n        className={classes.actionTextField}\n      />\n      <br />\n      <br />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        onClick={onSubmit}\n      >\n        {props.action.replace(/_/g, \" \")}\n      </Button>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={actionToAct[props.action] + \" for \" + (duration !== emptyState ? (duration + \" seconds\") : (mL + \"mL\"))}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unitNumber + props.action}\n      />\n    </form>\n  );\n}","import React, { useState, useEffect } from \"react\";\n\nimport clsx from 'clsx';\n\nimport { Client, Message } from \"paho-mqtt\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport {parseINIString} from \"../utilities\"\nimport ActionPumpForm from \"./ActionPumpForm\"\n\nconst onlineGreen = \"#4caf50\"\nconst offlineGrey = \"grey\"\nconst errorRed = \"#DE3618\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 100,\n    marginTop: \"15px\",\n  },\n  content: {\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"10px\",\n    paddingBottom: \"0px\",\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n  disabledText: {\n    color: \"rgba(0, 0, 0, 0.38)\",\n  },\n  pos: {\n    marginBottom: 0,\n    fontSize: 15,\n  },\n  footnote: {\n    marginBottom: 0,\n    fontSize: 12,\n  },\n  paper: {\n    position: \"absolute\",\n    width: 650,\n    backgroundColor: \"white\",\n    border: \"2px solid #000\",\n    padding: 15,\n    overflowY: \"scroll\",\n    maxHeight: \"80%\",\n  },\n  slider: {\n    width: \"70%\",\n    margin: \"40px auto 0px auto\",\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n  textbox: {\n    display: \"flex\",\n    fontSize: 13,\n  },\n  alignLeft: {\n    flex: 1,\n    textAlign: \"left\",\n    fontSize: 13,\n  },\n  alignRight: {\n    flex: 1,\n    textAlign: \"right\",\n  },\n  textField: {\n    marginTop: \"15px\",\n    maxWidth: \"180px\",\n  },\n  textFieldCompact: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n    width: \"30ch\",\n  },\n  displaySettingsHidden: {\n    height: \"60px\",\n    overflow: \"hidden\",\n  },\n  formControl: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\n\nfunction PatientButton(props) {\n  const [buttonText, setButtonText] = useState(props.buttonText)\n\n  useEffect(\n    () => {\n      setButtonText(props.buttonText)\n    }\n  , [props.buttonText])\n\n  function wrappingOnClick() {\n    function f() {\n      setButtonText(<CircularProgress color=\"inherit\" size={22}/>)\n      props.onClick()\n    }\n    return f\n  }\n\n  return (\n    <Button\n      disableElevation\n      style={{width: \"70px\", marginTop: \"5px\"}}\n      color={props.color}\n      variant={props.variant}\n      size=\"small\"\n      onClick={wrappingOnClick()}\n    >\n      {buttonText}\n    </Button>\n  )\n}\n\n\n\nclass UnitSettingDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { msg: this.props.default };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  updateParent(data) {\n    try {\n      this.props.passChildData(data);\n    } catch (e) {}\n  }\n\n  MQTTConnect() {\n    // need to have unique clientIds\n    this.client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"webui\" + Math.random()\n    );\n    this.client.connect({ onSuccess: this.onConnect});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.isUnitActive !== prevProps.isUnitActive) // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n    {\n      this.MQTTConnect();\n    }\n  }\n\n  onConnect() {\n    this.client.subscribe(\n      [\n        \"pioreactor\",\n        this.props.unit,\n        this.props.experiment,\n        this.props.topic,\n      ].join(\"/\"),\n      { qos: 1 }\n    );\n  }\n\n  stateDisplay = {\n    \"init\":         {message: \"\", display: \"Starting\", color: onlineGreen},\n    \"ready\":        {message: \"\", display: \"On\", color: onlineGreen},\n    \"sleeping\":     {message: \"\", display: \"Paused\", color: offlineGrey},\n    \"disconnected\": {message: \"\", display: \"Off\", color: offlineGrey},\n    \"lost\":         {message: \"Check logs for errors.\", display: \"Error\", color: errorRed},\n  }\n\n  onMessageArrived(message) {\n    var parsedFloat = parseFloat(message.payloadString);\n    var payload = isNaN(parsedFloat) ? message.payloadString : parsedFloat\n    this.setState({\n      msg: payload,\n    });\n    this.updateParent(payload);\n  }\n\n  render() {\n    if (this.props.isStateSetting) {\n      if (!this.props.isUnitActive) {\n        return <div style={{ color: offlineGrey}}> Off </div>;\n      } else {\n        var displaySettings = this.stateDisplay[this.state.msg]\n        return (\n          <div style={{ color: displaySettings.color}}>\n            <span title={displaySettings.message} className={displaySettings.message ? \"underlineSpan\" : \"\"}>{displaySettings.display}</span>\n          </div>\n      )}\n    } else {\n      if (!this.props.isUnitActive || this.state.msg === \"-\" || this.state.msg === \"\") {\n        return <div style={{ color: offlineGrey}}> {this.props.default} </div>;\n      } else {\n        return (\n          <div style={{ color: \"rgba(0, 0, 0, 0.54)\", fontFamily: \"courier\", fontSize: \"13px\" }}>\n            {(typeof this.state.msg === \"string\"\n              ? this.state.msg\n              : +this.state.msg.toFixed(this.props.precision)) +\n              (this.props.measurementUnit ? this.props.measurementUnit : \"\")}\n          </div>\n        );\n      }\n    }\n  }\n}\n\nfunction SilentForm(props){\n  const classes = useStyles();\n  const defaults = {duration: 60}\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [])\n\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n\n  return (\n      <TextField\n        size=\"small\"\n        id=\"duration\"\n        label=\"Duration between events\"\n        defaultValue={defaults.duration}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n        }}\n        variant=\"outlined\"\n        onChange={onSettingsChange}\n        className={classes.textFieldCompact}\n      />\n)}\n\nfunction PIDTurbidostatForm(props){\n  const classes = useStyles();\n  const defaults = {duration: 30, volume: 0.75, target_od: 1.5}\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [])\n\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: parseFloat(e.target.value)})\n  }\n\n  return (\n      <div>\n        <TextField\n          size=\"small\"\n          id=\"duration\"\n          defaultValue={defaults.duration}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n          label=\"Duration between events\"\n        />\n        <TextField\n          size=\"small\"\n          id=\"volume\"\n          label=\"Max volume\"\n          defaultValue={defaults.volume}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n        <TextField\n          size=\"small\"\n          id=\"target_od\"\n          label=\"Target OD\"\n          defaultValue={defaults.target_od}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">AU</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n    </div>\n)}\n\nfunction PIDMorbidostatForm(props){\n  const classes = useStyles();\n  const defaults = {duration: 60, target_growth_rate: 0.1, target_od: 1.5}\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [])\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n\n  return (\n      <div>\n        <TextField\n          size=\"small\"\n          id=\"duration\"\n          label=\"Duration between events\"\n          defaultValue={defaults.duration}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n        <TextField\n          size=\"small\"\n          id=\"target_od\"\n          label=\"Target OD\"\n          defaultValue={defaults.target_od}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">AU</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n        <TextField\n          size=\"small\"\n          id=\"target_growth_rate\"\n          label=\"Target growth rate\"\n          defaultValue={defaults.target_growth_rate}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">h⁻¹</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n    </div>\n)}\n\n\n\nfunction ButtonChangeIODialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [algoSettings, setAlgoSettings] = useState({io_algorithm: \"silent\"})\n  const [isClicked, setIsClicked] = useState(false)\n  const [client, setClient] = useState(null)\n\n  const algos = [\n    {name: \"Silent\", key: \"silent\"},\n    {name: \"PID Morbidostat\",  key: \"pid_morbidostat\"},\n    {name: \"PID Turbidostat\",  key: \"pid_turbidostat\"},\n    {name: \"Chemostat\", key: \"chemostat\"},\n  ]\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    const client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"webui\" + Math.random()\n    );\n    client.connect({onSuccess: () => {console.log(\"connected\")}});\n    setClient(client)\n  },[])\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAlgoSelectionChange = (e) => {\n    setAlgoSettings({io_algorithm: e.target.value})\n  }\n\n  const updateFromChild = (setting) => {\n    setAlgoSettings(prevState => ({...prevState, ...setting}))\n  }\n\n  const switchToForm = () => {\n    switch(algoSettings.io_algorithm) {\n      case \"silent\":\n        return <SilentForm updateParent={updateFromChild}/>\n      case \"pid_turbidostat\":\n        return <PIDTurbidostatForm updateParent={updateFromChild}/>\n      case \"pid_morbidostat\":\n        return <PIDMorbidostatForm updateParent={updateFromChild}/>\n      default:\n        return <div><p>Not implemented</p></div>\n    }\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setIsClicked(true)\n    var message = new Message(JSON.stringify(algoSettings));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      \"algorithm_controlling\",\n      \"io_algorithm\",\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    try{\n      client.publish(message);\n    }\n    catch (e){\n      console.log(e)\n    }\n    setOpen(false);\n  }\n\n  return (\n    <div>\n    <Button\n      style={{marginTop: \"10px\"}}\n      size=\"small\"\n      color=\"primary\"\n      disabled={!props.currentIOAlgorithm}\n      onClick={handleClickOpen}\n    >\n      {\"Change IO algorithm\"}\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {height: \"100%\"}}}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          {props.title || ((props.config['dashboard.rename'] && props.config['dashboard.rename'][props.unit]) ? `${props.config['dashboard.rename'][props.unit]} (${props.unit})` : `${props.unit}`)}\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          IO Algorithm\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          IO algorithms control when and how much media to add to the Pioreactor. The settings below can be changed later. Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/io-algorithms\">IO algorithms</a>.\n        </Typography>\n\n        <form>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Algorithm</FormLabel>\n            <Select\n              native\n              value={algoSettings.mode}\n              onChange={handleAlgoSelectionChange}\n              style={{maxWidth: \"200px\"}}\n            >\n              {algos.map((v) => {\n                return <option id={v.key} value={v.key} key={\"change-io\" + v.key}>{v.name}</option>\n                }\n              )}\n            </Select>\n            {switchToForm()}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color={isClicked ? \"default\" : \"primary\" }\n              onClick={onSubmit}\n              style={{width: \"120px\", marginTop: \"20px\"}}\n            >\n              Submit\n            </Button>\n          </FormControl>\n        </form>\n\n\n      </DialogContent>\n    </Dialog>\n    </div>\n)}\n\nfunction ButtonSettingsDialog(props) {\n  const classes = useStyles();\n  const [defaultStirring, setDefaultStirring] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [client, setClient] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetch(\"/get_config/config_\" + props.unit + \".ini\")\n        .then((response) => {\n            if (response.ok) {\n              return response.text();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((config) => {\n          config = parseINIString(config);\n          setDefaultStirring(\n            config[\"stirring\"][\"duty_cycle_\" + props.unit]\n          );\n        })\n        .catch((error) => {})\n    }\n    if (!props.disabled) {\n      fetchData();\n    }\n  }, [props.disabled, props.unit]);\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    const client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"webui\" + Math.random()\n    );\n    client.connect();\n    setClient(client)\n  },[])\n\n\n  function setPioreactorJobState(job, state) {\n    return function sendMessage() {\n      var message = new Message(String(state));\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        props.experiment,\n        job,\n        \"$state\",\n        \"set\",\n      ].join(\"/\");\n      message.qos = 1;\n      try{\n        client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(function(){sendMessage()}, 750)\n      }\n    };\n  }\n\n  function startPioreactorJob(job_attr){\n    return function() {\n      fetch(\"/run/\" + job_attr + \"/\" + props.unit).then(res => {\n      })\n    }\n  }\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 1;\n    try{\n      client.publish(message);\n    }\n    catch (e) {\n      console.log(e)\n      client.connect({onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n  function setPioreactorJobAttrOnEnter(e) {\n    if (e.key === \"Enter\") {\n      setPioreactorJobAttr(e.target.id, e.target.value);\n      setSnackbarOpen(true)\n    }\n  }\n\n  function setPioreactorStirring(e, value) {\n    setPioreactorJobAttr(\"stirring/duty_cycle\", value);\n  }\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n\n  function createUserButtonsBasedOnState(jobState, job, parentJob=null){\n\n    parentJob = parentJob || job\n    switch (jobState){\n      case \"lost\":\n      case \"disconnected\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"init\":\n      case \"ready\":\n        return (<div>\n          <PatientButton\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={setPioreactorJobState(job, \"sleeping\")}\n            buttonText=\"Pause\"\n          />\n          <PatientButton\n            color=\"secondary\"\n            onClick={setPioreactorJobState(parentJob, \"disconnected\")}\n            buttonText=\"Stop\"\n          />\n        </div>)\n      case \"sleeping\":\n        return (\n          <div>\n            <PatientButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={setPioreactorJobState(job, \"ready\")}\n              buttonText=\"Resume\"\n            />\n            <PatientButton\n              color=\"secondary\"\n              onClick={setPioreactorJobState(parentJob, \"disconnected\")}\n              buttonText=\"Stop\"\n            />\n          </div>\n          )\n      default:\n        return(<div>here</div>)\n    }\n   }\n\n  const odButtons = createUserButtonsBasedOnState(props.ODReadingJobState, \"od_reading\")\n  const grButtons = createUserButtonsBasedOnState(props.growthRateJobState, \"growth_rate_calculating\")\n  const ioButtons = createUserButtonsBasedOnState(props.IOEventsJobState, \"io_controlling\", \"algorithm_controlling\")\n  const stirringButtons = createUserButtonsBasedOnState(props.stirringState, \"stirring\")\n\n  return (\n    <div>\n    <Button\n      size=\"small\"\n      color=\"primary\"\n      onClick={handleClickOpen}\n      disabled={props.disabled}\n    >\n      Settings\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          {(props.config['dashboard.rename'] &&  props.config['dashboard.rename'][props.unit]) ? `${props.config['dashboard.rename'][props.unit]} (${props.unit})` : `${props.unit}`}\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          Settings\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography gutterBottom>\n          Stirring\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Start, stop or pause the stirring on the Pioreactor. Stirring is needed for homogenous mixing.\n        </Typography>\n\n        {stirringButtons}\n\n        <Divider className={classes.divider} />\n        <Typography gutterBottom>\n          Optical density reading\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Pausing the optical density readings will also pause\n          downstream jobs that rely on optical density readings, like growth\n          rates.\n        </Typography>\n\n        {odButtons}\n\n        <Divider className={classes.divider} />\n        <Typography  gutterBottom>\n          Growth rate calculating\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Pausing the growth rate calculating will also pause\n          downstream jobs that rely on it, like IO events.\n        </Typography>\n\n        {grButtons}\n\n        <Divider className={classes.divider} />\n        <Typography  gutterBottom>\n          Input/Output events\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          {props.IOEventsJobState !== \"disconnected\" &&\n            <>\n            Currently running IO algorithm <code>{props.ioAlgorithm}</code>.\n            Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/io-algorithms\">IO algorithms</a>.\n            </>\n          }\n          {props.IOEventsJobState === \"disconnected\" &&\n\n            <>\n            IO events will initially start in <span className={\"underlineSpan\"} title=\"silent mode performs no IO operations.\"><code>silent</code></span> mode, and can be changed after.\n            Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/io-algorithms\">IO algorithms</a>.\n            </>\n          }\n        </Typography>\n\n          {ioButtons}\n\n        <ButtonChangeIODialog\n          unit={props.unit}\n          config={props.config}\n          experiment={props.experiment}\n          currentIOAlgorithm={props.ioAlgorithm}\n        />\n        <Divider className={classes.divider} />\n        <Typography  gutterBottom>\n          Stirring\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Modify the stirring speed (arbitrary units). This will effect the\n          optical density reading. Too low and the fan may completely stop.\n        </Typography>\n        <div className={classes.slider}>\n          <Slider\n            defaultValue={parseInt(props.stirringDCState)}\n            aria-labelledby=\"discrete-slider-custom\"\n            step={1}\n            valueLabelDisplay=\"on\"\n            id={\"stirring/duty_cycle_\" + props.unit}\n            key={\"stirring/duty_cycle_\" + props.unit}\n            onChangeCommitted={setPioreactorStirring}\n            marks={[\n              { value: 0, label: \"0\", key: \"slider-0\" },\n              { value: defaultStirring, label: \"Default: \" + defaultStirring, key: \"slider-default\"},\n              { value: 100, label: \"100\", key: \"slider-100\" },\n            ]}\n          />\n        </div>\n        <Typography className={classes.footnote} color=\"textSecondary\">\n          Default values are defined in the unit's <code>config.ini</code> file.\n        </Typography>\n        <Divider className={classes.divider} />\n        <Typography gutterBottom>\n          Volume per dilution\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Change the volume per dilution. Typical values are between 0.0mL and\n          1.0mL.\n        </Typography>\n        <TextField\n          size=\"small\"\n          id=\"io_controlling/volume\"\n          label=\"Volume per dilution\"\n          defaultValue={props.volumeState}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onKeyPress={setPioreactorJobAttrOnEnter}\n          className={classes.textField}\n        />\n\n        <Divider className={classes.divider} />\n        <Typography  gutterBottom>\n          Target optical density\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Change the target optical density. Typical values are between 1.0 and\n          2.5 (arbitrary units)\n        </Typography>\n        <TextField\n          size=\"small\"\n          id=\"io_controlling/target_od\"\n          label=\"Target optical density\"\n          defaultValue={props.targetODState}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">AU</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onKeyPress={setPioreactorJobAttrOnEnter}\n          className={classes.textField}\n        />\n\n        <Divider className={classes.divider} />\n        <Typography  gutterBottom>\n          Duration between dilutions\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Change how long to wait between dilutions. Typically between 5 and 90 minutes.\n        </Typography>\n        <TextField\n          size=\"small\"\n          id=\"io_controlling/duration\"\n          label=\"Duration\"\n          defaultValue={props.durationState}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onKeyPress={setPioreactorJobAttrOnEnter}\n          className={classes.textField}\n        />\n\n        <Divider className={classes.divider} />\n        <Typography  gutterBottom>\n          Target growth rate\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Change the target hourly growth rate - only applicable in{\" \"}\n          <code>morbidostat</code> mode. Typical values are between 0.05h⁻¹ and\n          0.4h⁻¹.\n        </Typography>\n        <TextField\n          size=\"small\"\n          id=\"io_controlling/target_growth_rate\"\n          label=\"Target growth rate\"\n          defaultValue={props.targetGrowthRateState}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">h⁻¹</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onKeyPress={setPioreactorJobAttrOnEnter}\n          className={classes.textField}\n        />\n        <Divider className={classes.divider} />\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={\"Updated\"}\n      autoHideDuration={7000}\n      key={\"snackbar\" + props.unit + \"settings\"}\n    />\n    </div>\n  );\n}\n\n\nfunction ButtonActionDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const unit = props.unit\n  const isPlural = props.isPlural\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const title = props.title ? props.title :\n    (props.config['dashboard.rename'] &&  props.config['dashboard.rename'][props.unit]) ? `${props.config['dashboard.rename'][props.unit]} (${props.unit})` : `${props.unit}`\n\n  return (\n    <div>\n      <Button\n        onClick={handleClickOpen}\n        disabled={props.disabled}\n        size=\"small\"\n        color=\"primary\">\n      Actions\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {title}\n          </Typography>\n          <Typography className={classes.unitTitleDialog}>\n            Actions\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the media pump{isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionPumpForm action=\"add_media\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the alternative media pump{isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set\n            volume (mL).\n          </Typography>\n          <ActionPumpForm action=\"add_alt_media\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the waste pump{isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionPumpForm action=\"remove_waste\" unit={unit} />\n          <Divider className={classes.divider} />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\n\nfunction UnitCard(props) {\n  const classes = useStyles();\n  const unit = props.unit;\n  const isUnitActive = props.isUnitActive;\n  const experiment = props.experiment;\n\n  const [showingAllSettings, setShowingAllSettings] = useState(false);\n\n  const [stirringDCState, setStirringDCState] = useState(0);\n  const [stirringState, setStirringState] = useState(\"disconnected\");\n  const [ODReadingJobState, setODReadingJobState] = useState(\"disconnected\");\n  const [growthRateJobState, setGrowthRateJobState] = useState(\"disconnected\");\n  const [IOEventsJobState, setIOEventsJobState] = useState(\"disconnected\");\n  const [targetODState, setTargetODState] = useState(0);\n  const [durationState, setDurationState] = useState(0);\n  const [targetGrowthRateState, setTargetGrowthRateState] = useState(0);\n  const [volumeState, setVolumeState] = useState(0);\n  const [ioAlgorithm, setIoAlgorithm] = useState(null);\n\n\n  const handleShowAllSettingsClick = () => {\n    setShowingAllSettings(!showingAllSettings);\n  };\n\n  var textSettingsClasses = clsx(classes.alignLeft, {[classes.disabledText]: !isUnitActive})\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.content}>\n\n\n        <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n          {(props.config['dashboard.rename'] && props.config['dashboard.rename'][unit]) ? unit : \"\"}\n        </Typography>\n        <Typography className={clsx(classes.unitTitle, {[classes.disabledText]: !isUnitActive})} gutterBottom>\n          {(props.config['dashboard.rename'] && props.config['dashboard.rename'][unit]) ? props.config['dashboard.rename'][unit] : unit }\n        </Typography>\n\n\n        <div\n          id=\"displaySettings\"\n          className={\n            showingAllSettings\n              ? classes.displaySettings\n              : classes.displaySettingsHidden\n          }\n        >\n\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              Optical density job:\n            </Typography>\n            <UnitSettingDisplay\n              passChildData={setODReadingJobState}\n              experiment={experiment}\n              isUnitActive={isUnitActive}\n              default={\"disconnected\"}\n              className={classes.alignRight}\n              isStateSetting\n              topic=\"od_reading/$state\"\n              unit={unit}\n            />\n          </div>\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              Growth rate job:\n            </Typography>\n            <UnitSettingDisplay\n              passChildData={setGrowthRateJobState}\n              experiment={experiment}\n              isUnitActive={isUnitActive}\n              default={\"disconnected\"}\n              className={classes.alignRight}\n              isStateSetting\n              topic=\"growth_rate_calculating/$state\"\n              unit={unit}\n            />\n          </div>\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              IO events job:\n            </Typography>\n            <UnitSettingDisplay\n              passChildData={setIOEventsJobState}\n              experiment={experiment}\n              isUnitActive={isUnitActive}\n              default={\"disconnected\"}\n              className={classes.alignRight}\n              isStateSetting\n              topic=\"io_controlling/$state\"\n              unit={unit}\n            />\n          </div>\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              Stirring:\n            </Typography>\n            <UnitSettingDisplay\n              passChildData={setStirringState}\n              experiment={experiment}\n              isUnitActive={isUnitActive}\n              default={\"disconnected\"}\n              className={classes.alignRight}\n              topic=\"stirring/$state\"\n              isStateSetting\n              unit={unit}\n            />\n          </div>\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              Stirring speed:\n            </Typography>\n            <UnitSettingDisplay\n              passChildData={setStirringDCState}\n              experiment={experiment}\n              isUnitActive={isUnitActive}\n              default={\"-\"}\n              className={classes.alignRight}\n              topic=\"stirring/duty_cycle\"\n              unit={unit}\n            />\n          </div>\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              {\" \"}\n              Target optical density:\n            </Typography>\n            <UnitSettingDisplay\n              precision={2}\n              experiment={experiment}\n              passChildData={setTargetODState}\n              isUnitActive={isUnitActive}\n              default={\"-\"}\n              className={classes.alignRight}\n              topic=\"io_controlling/target_od\"\n              unit={unit}\n            />\n          </div>\n\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              Target growth rate:{\" \"}\n            </Typography>\n            <UnitSettingDisplay\n              precision={2}\n              measurementUnit=\"h⁻¹\"\n              experiment={experiment}\n              passChildData={setTargetGrowthRateState}\n              isUnitActive={isUnitActive}\n              default={\"-\"}\n              className={classes.alignRight}\n              topic=\"io_controlling/target_growth_rate\"\n              unit={unit}\n            />\n          </div>\n\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              Volume/dilution:{\" \"}\n            </Typography>\n            <UnitSettingDisplay\n              precision={2}\n              measurementUnit=\"mL\"\n              experiment={experiment}\n              passChildData={setVolumeState}\n              isUnitActive={isUnitActive}\n              default={\"-\"}\n              className={classes.alignRight}\n              topic=\"io_controlling/volume\"\n              unit={unit}\n            />\n          </div>\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>\n              {\" \"}\n              Duration:\n            </Typography>\n            <UnitSettingDisplay\n              precision={0}\n              measurementUnit=\"m\"\n              experiment={experiment}\n              passChildData={setDurationState}\n              isUnitActive={isUnitActive}\n              default={\"-\"}\n              className={classes.alignRight}\n              topic=\"io_controlling/duration\"\n              unit={unit}\n            />\n          </div>\n\n          <div className={classes.textbox}>\n            <Typography className={textSettingsClasses}>IO:</Typography>\n            <UnitSettingDisplay\n              experiment={experiment}\n              passChildData={setIoAlgorithm}\n              isUnitActive={isUnitActive}\n              default={\"-\"}\n              className={classes.alignRight}\n              topic=\"algorithm_controlling/io_algorithm\"\n              unit={unit}\n            />\n          </div>\n\n        </div>\n      </CardContent>\n      <CardActions>\n        <Grid container>\n          <Grid item xs={2} md={12} lg={2}>\n            <IconButton edge=\"end\" size=\"small\" onClick={handleShowAllSettingsClick}>\n              {showingAllSettings ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n            </IconButton>\n          </Grid>\n\n          <Grid item xs={5} md={12} lg={5}>\n            <ButtonSettingsDialog\n              config={props.config}\n              stirringDCState={stirringDCState}\n              ODReadingJobState={ODReadingJobState}\n              growthRateJobState={growthRateJobState}\n              stirringState={stirringState}\n              IOEventsJobState={IOEventsJobState}\n              targetGrowthRateState={targetGrowthRateState}\n              volumeState={volumeState}\n              durationState={durationState}\n              targetODState={targetODState}\n              ioAlgorithm={ioAlgorithm}\n              experiment={experiment}\n              unit={unit}\n              disabled={!isUnitActive}\n            />\n          </Grid>\n          <Grid item xs={5} md={12} lg={5}>\n\n            <ButtonActionDialog\n              config={props.config}\n              unit={unit}\n              disabled={!isUnitActive}\n            />\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction UnitCards(props) {\n  const [activeUnits, setActiveUnits] = useState([])\n\n  useEffect(() => {\n    if (props.config['inventory']){\n      setActiveUnits(\n        Object.entries(props.config['inventory']).filter(([key, value]) => value === \"1\").map(([key, value]) => key)\n      );\n    }\n  }, [props.config]);\n\n\n  return (\n    <div>\n      {props.units.map((unit) => (\n        <UnitCard\n          config={props.config}\n          key={\"unitCardPioreactor\" + unit}\n          unit={unit}\n          isUnitActive={activeUnits.includes(unit)}\n          experiment={props.experiment}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport {UnitCards, ButtonActionDialog, ButtonChangeIODialog};\n","import React from 'react'\n\nimport clsx from 'clsx';\nimport {Client} from 'paho-mqtt';\nimport moment from 'moment';\n\n\nimport {withStyles} from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"8px 2px 6px 4px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n});\n\nclass LogTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {listOfLogs: []};\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getData() {\n    await fetch(\"./data/all_pioreactor.log.json\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({listOfLogs: data});\n      });\n  }\n\n  componentDidMount() {\n    this.getData()\n    this.client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"client-log-table\");\n    this.client.connect({'onSuccess': this.onConnect});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  onConnect() {\n      this.client.subscribe([\"pioreactor\", \"+\", \"+\", \"log\"].join(\"/\"))\n  }\n\n  onMessageArrived(message) {\n    if (this.state.listOfLogs.length > 50){\n      this.state.listOfLogs.pop()\n    }\n    const unit = message.topic.split(\"/\")[1]\n    this.state.listOfLogs.unshift({timestamp: moment().format(\"x\"), unit: unit, message: message.payloadString})\n    this.setState({\n      listOfLogs: this.state.listOfLogs\n    });\n  }\n\n  breakString(string){\n    if (string.length > 5){\n      return string.slice(0, 4) + \"...\"\n    }\n    return string\n  }\n\n  renameUnit(name){\n    if (!this.props.config['dashboard.rename']){\n      return name\n    }\n    return (this.props.config['dashboard.rename'][name]) || name\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <Card>\n        <TableContainer style={{ height: \"700px\", width: \"100%\", overflowY: \"scroll\"}}>\n          <Table stickyHeader size=\"small\" aria-label=\"log table\">\n             <TableHead>\n              <TableRow>\n                <TableCell align=\"center\" colSpan={3} className={[classes.headerCell, classes.tightCell].join(\" \")}> Event logs </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className={clsx(classes.headerCell, classes.tightCell)}>Timestamp</TableCell>\n                <TableCell className={clsx(classes.headerCell, classes.tightCell)}>Message</TableCell>\n                <TableCell className={clsx(classes.headerCell, classes.tightCell)}>Unit</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {this.state.listOfLogs.map((log, i) => (\n                <TableRow key={i}>\n                  <TableCell className={clsx(classes.tightCell, classes.smallText)}> {moment(log.timestamp, 'x').format('HH:mm:ss')} </TableCell>\n                  <TableCell className={clsx(classes.tightCell, classes.smallText)}> {log.message} </TableCell>\n                  <TableCell className={clsx(classes.tightCell, classes.smallText)}>{this.renameUnit(log.unit)}</TableCell>\n                </TableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Card>\n  )}\n}\n\n\n\nexport default withStyles(useStyles)(LogTable);\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport moment from \"moment\";\nimport Box from '@material-ui/core/Box';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ContentEditable from 'react-contenteditable'\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n});\n\n\n\nclass EditableDescription extends React.Component {\n  constructor(props) {\n    super(props)\n    this.contentEditable = React.createRef();\n    this.state = {desc: \"\", openSnackBar: false, originalDesc: \"\"};\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({desc: `${this.props.description}`, originalDesc: `${this.props.description}`})\n    }\n  }\n\n  handleChange = evt => {\n    this.setState({desc: evt.target.value});\n  };\n\n  onBlur = evt => {\n    if (this.state.desc !== this.state.originalDesc) {\n      this.setState({originalDesc: this.state.desc})\n      return fetch('update_experiment_desc', {\n          method: \"POST\",\n          body: JSON.stringify({experiment : this.props.experiment, description: this.state.desc}),\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          if (res.status === 200){\n            this.setState({openSnackBar: true});\n          }\n        })\n    }\n  };\n\n  handleSnackbarClose = (e, reason) => {\n    if (reason !== \"clickaway\"){\n      this.setState({openSnackBar: false});\n    }\n  };\n\n  render = () => {\n    return (\n      <div style={{\"padding\": \"0px 5px 0px 5px\"}}>\n        <Box fontWeight=\"fontWeightBold\">\n          Description:\n        </Box>\n        <ContentEditable\n            innerRef={this.contentEditable}\n            html={this.state.desc} // innerHTML of the editable div\n            disabled={false}       // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            onBlur={this.onBlur}\n            tagName=\"p\"\n            style={{\"padding\": \"3px 3px 3px 2px\"}}\n          />\n          <Snackbar\n            anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n            open={this.state.openSnackBar}\n            onClose={this.handleSnackbarClose}\n            message={\"Updated description\"}\n            autoHideDuration={2500}\n            key={\"snackbarEditDesc\"}\n          />\n      </div>\n    )\n  };\n};\n\n\nfunction ExperimentSummary(props){\n  const classes = useStyles();\n  const experiment = props.experimentMetadata.experiment || \"\"\n  const startedAt = props.experimentMetadata.timestamp || moment()\n  const desc = props.experimentMetadata.description || \"\"\n\n  return(\n    <>\n      <div>\n        <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              {experiment}\n            </Box>\n          </Typography>\n          <div >\n            <Button href=\"/download-data\" style={{textTransform: 'none', marginRight: \"10px\", float: \"right\"}} color=\"primary\">\n              <GetAppIcon style={{ fontSize: 15, verticalAlign: \"middle\" }}/> Download experiment data\n            </Button>\n            <Button href=\"/start-new-experiment\" style={{textTransform: 'none', float: \"right\", marginRight: \"10px\"}} color=\"primary\">\n              <AddIcon style={{ fontSize: 15, verticalAlign: \"middle\" }}/> New Experiment\n            </Button>\n          </div>\n        </div>\n\n        <Divider/>\n        <Typography variant=\"subtitle2\">\n          <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n            <CalendarTodayIcon style={{ fontSize: 12, verticalAlign: \"middle\" }}/> Experiment Started:\n          </Box>\n          <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n            <span title={moment(startedAt).format(\"YYYY-MM-DD HH:mm:ss\")}>{moment(startedAt).format(\"dddd, MMMM D YYYY\")}</span>\n          </Box>\n          <Box fontWeight=\"fontWeightBold\" style={{display:\"inline-block\", margin: \"10px 2px 10px 0px\"}}>\n            <TimelapseIcon style={{ fontSize: 12, verticalAlign: \"middle\"  }}/>Time Elapsed:\n          </Box>\n          <Box fontWeight=\"fontWeightRegular\" style={{display:\"inline-block\"}}>\n           {(moment().diff(moment(startedAt), 'H'))}h\n          </Box>\n        </Typography>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <EditableDescription experiment={experiment} description={desc} />\n        </CardContent>\n      </Card>\n    </>\n  )\n}\n\n\nexport default ExperimentSummary;\n","import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport {\n  VictoryChart,\n  VictoryLabel,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLine,\n  VictoryLegend,\n  createContainer,\n  VictoryTooltip,\n} from \"victory\";\nimport moment from \"moment\";\nimport Card from \"@material-ui/core/Card\";\n\nconst colors = {\n  \"pioreactor1\": \"#9C6ADE\",\n  \"pioreactor1-A\": \"#9C6ADE\",\n  \"pioreactor1-D\": \"#E3D0FF\",\n  \"pioreactor1-C\": \"#50248F\",\n  \"pioreactor1-B\": \"#230051\",\n\n  \"pioreactor2\": \"#47C1BF\",\n  \"pioreactor2-A\": \"#47C1BF\",\n  \"pioreactor2-D\": \"#B7ECEC\",\n  \"pioreactor2-C\": \"#00848E\",\n  \"pioreactor2-B\": \"#003135\",\n\n\n  \"pioreactor3\": \"#F49342\",\n  \"pioreactor3-A\": \"#F49342\",\n  \"pioreactor3-D\": \"#FFC58B\",\n  \"pioreactor3-C\": \"#C05717\",\n  \"pioreactor3-B\": \"#4A1504\",\n\n  \"pioreactor4\": \"#50B83C\",\n  \"pioreactor4-A\": \"#50B83C\",\n  \"pioreactor4-B\": \"#173630\",\n  \"pioreactor4-C\": \"#108043\",\n  \"pioreactor4-D\": \"#BBE5B3\",\n\n};\n\nfunction linspace(startValue, stopValue, cardinality) {\n  var arr = [];\n  var step = (stopValue - startValue) / (cardinality - 1);\n  for (var i = 0; i < cardinality; i++) {\n    arr.push(startValue + step * i);\n  }\n  return arr;\n}\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seriesMap: {},\n      maxTimestamp: parseInt(moment().format(\"x\")),\n      hiddenSeries: new Set(),\n      lastMsgRecievedAt: parseInt(moment().format(\"x\")),\n      names: [],\n      legendEvents: [],\n      minTimestamp: parseInt(moment().subtract(30, 'seconds').format(\"x\")),\n    };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n    this.selectLegendData = this.selectLegendData.bind(this);\n    this.selectVictoryLines = this.selectVictoryLines.bind(this);\n\n  }\n\n  onConnect() {\n    this.client.subscribe(\n      [\"pioreactor\", \"+\", this.props.experiment, this.props.topic].join(\"/\")\n    );\n  }\n\n  componentDidMount() {\n    this.getData();\n    this.client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"client\" + Math.random()\n    );\n\n\n    this.client.connect({ onSuccess: this.onConnect });\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  async getData() {\n    await fetch(this.props.dataFile)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let initialSeriesMap = {};\n        for (const [i, v] of data[\"series\"].entries()) {\n          if (data[\"data\"][i].length > 0) {\n            initialSeriesMap[v] = {\n              data: (data[\"data\"][i]).filter(this.filterDataPoints(data[\"data\"][i].length)),\n              name: v,\n              color: colors[v],\n            };\n          }\n        }\n        let names = Object.keys(initialSeriesMap);\n        let mts = Math.min(\n          ...Object.values(initialSeriesMap).map((s) => parseInt(s.data[0].x))\n        );\n        this.setState({\n          seriesMap: initialSeriesMap,\n          legendEvents: this.createLegendEvents(names),\n          names: names,\n          minTimestamp: mts,\n        });\n      });\n  }\n\n  createLegendEvents(names) {\n    return names.map((name, idx) => {\n      return {\n        childName: [\"legend\"],\n        target: \"data\",\n        eventKey: String(idx),\n        eventHandlers: {\n          onClick: () => {\n            return [\n              {\n                childName: [\"line-\" + name],\n                target: \"data\",\n                mutation: () => {\n                  if (!this.state.hiddenSeries.delete(name)) {\n                    // Was not already hidden => add to set\n                    this.state.hiddenSeries.add(name);\n                  }\n                  this.setState({\n                    hiddenSeries: new Set(this.state.hiddenSeries),\n                  });\n                  return null;\n                },\n              },\n            ];\n          },\n        },\n      };\n    });\n  }\n\n  onMessageArrived(message) {\n    if (message.retained){\n      return\n    }\n    const currentTime = parseInt(moment().format(\"x\"));\n\n    var key = this.props.isODReading\n      ? message.topic.split(\"/\")[1] + \"-\" + message.topic.split(\"/\")[5]\n      : message.topic.split(\"/\")[1];\n\n    try {\n      if (!(key in this.state.seriesMap)){\n        const newSeriesMap = {...this.state.seriesMap, [key]:  {\n          data: [{x: currentTime, y: parseFloat(message.payloadString)}],\n          name: key,\n          color: colors[key]\n        }}\n\n        this.setState({ seriesMap: newSeriesMap })\n        this.setState({\n          names: [...this.state.names, key]\n        })\n      } else {\n        // .push seems like bad state management, and maybe a hit to performance...\n        this.state.seriesMap[key].data.push({\n          x: currentTime,\n          y: parseFloat(message.payloadString),\n        });\n        this.setState({ seriesMap: this.state.seriesMap })\n      }\n\n      this.setState({\n        maxTimestamp: currentTime,\n        lastMsgRecievedAt: currentTime,\n      });\n    }\n    catch (error) {\n      console.log(error)\n    }\n    return;\n  }\n\n  breakString(string){\n    if (string.length > 7){\n      return string.slice(0, 5) + \"...\" + string.slice(string.length-2, string.length)\n    }\n    return string\n  }\n\n  renameAndFormatSeries(name){\n    if (!this.props.config['dashboard.rename']){\n      return name\n    }\n\n    if (name.match(/(.*)-([ABCD])/g)){\n      const results = name.match(/(.*)-([ABCD])/);\n      const index = results[1];\n      const sensor = results[2];\n      return this.breakString(this.props.config['dashboard.rename'][index] || index) + sensor\n    }\n    else {\n      return this.breakString(this.props.config['dashboard.rename'][name] || name)\n    }\n  }\n\n\n  filterDataPoints(totalLength){\n    return function(value, index){\n      if (totalLength < 500){\n        return true\n      }\n      if ((index === 0) || (index === (totalLength - 1))){\n        return true\n      }\n      else if (index % Math.round(totalLength/500) === 0){\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n\n  createXTickValues(minTimestamp, maxTimestamp){\n    const delta_ts = moment(maxTimestamp, \"x\").diff(\n      moment(minTimestamp, \"x\"),\n      \"hours\"\n    );\n    const v = linspace(\n      minTimestamp,\n      maxTimestamp + 100000,\n      7\n    ).map((x) =>\n      moment(Math.round(x), \"x\").startOf(delta_ts >= 16 ? \"hour\" : \"minute\")\n    );\n    return v\n\n  }\n\n  createToolTip = (d) => {\n      return `${moment(d.datum.x, 'x').format(\"dd HH:mm\")}\n${this.renameAndFormatSeries(d.datum.childName)}: ${Math.round(d.datum.y * 1000) / 1000}`\n  }\n\n  formatTs(format){\n    return function(mt){\n      return mt.format(format)\n  }}\n\n  selectLegendData(name){\n    if (!this.state.seriesMap) {\n      return {}\n    }\n    const line = this.state.seriesMap[name];\n    const item = {\n      name: this.renameAndFormatSeries(line.name),\n      symbol: { fill: line.color },\n    };\n    if (this.state.hiddenSeries.has(name)) {\n      return { ...item, symbol: { fill: \"white\" } };\n    }\n    return item;\n  }\n\n  selectVictoryLines(name) {\n    if (this.state.hiddenSeries.has(name)) {\n      return undefined;\n    }\n    return (\n      <VictoryLine\n        interpolation={this.props.interpolation}\n        key={\"line-\" + name + this.props.title}\n        name={name}\n        style={{\n          labels: {fill: this.state.seriesMap[name].color},\n          data: {\n            stroke: this.state.seriesMap[name].color,\n            strokeWidth: 2,\n          },\n          parent: { border: \"1px solid #ccc\" },\n        }}\n        data={this.state.seriesMap[name].data}\n        x=\"x\"\n        y=\"y\"\n      />\n    );\n  }\n\n  render() {\n    const delta_ts = moment(this.state.maxTimestamp, \"x\").diff(\n      moment(this.state.minTimestamp, \"x\"),\n      \"hours\"\n    );\n    const VictoryVoronoiContainer = createContainer(\"voronoi\");\n    const axis_display_ts_format =\n      delta_ts >= 16 ? (delta_ts >= 5 * 24 ? \"MMM DD\" : \"dd HH:mm\") : \"H:mm\";\n    const ts = this.createXTickValues(this.state.minTimestamp, this.state.maxTimestamp)\n    return (\n      <Card style={{ maxHeight: \"100%\"}}>\n        <VictoryChart\n          title={this.props.title}\n          domainPadding={10}\n          padding={{ left: 70, right: 50, bottom: 80, top: 50 }}\n          events={this.state.legendEvents}\n          responsive={true}\n          width={600}\n          height={315}\n          theme={VictoryTheme.material}\n          containerComponent={\n            <VictoryVoronoiContainer\n              voronoiBlacklist={['parent']}\n              labels={this.createToolTip}\n              labelComponent={\n                <VictoryTooltip\n                  cornerRadius={0}\n                  flyoutStyle={{\n                    fill: \"white\",\n                    stroke: \"#90a4ae\",\n                    strokeWidth: 1.5,\n                  }}\n                />\n              }\n            />\n          }\n        >\n          <VictoryLabel\n            text={this.props.title}\n            x={300}\n            y={30}\n            textAnchor=\"middle\"\n            style={{\n              fontSize: 15,\n              fontFamily: \"inherit\",\n            }}\n          />\n          <VictoryAxis\n            tickFormat={this.formatTs(axis_display_ts_format)}\n            tickValues={ts}\n            style={{\n              tickLabels: {\n                fontSize: 13,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n            offsetY={80}\n            orientation=\"bottom\"\n          />\n          <VictoryAxis\n            crossAxis={false}\n            dependentAxis\n            domain={this.props.domain}\n            label={this.props.yAxisLabel}\n            axisLabelComponent={\n              <VictoryLabel\n                dy={-40}\n                style={{\n                  fontSize: 15,\n                  padding: 10,\n                  fontFamily: \"inherit\",\n                }}\n              />\n            }\n            style={{\n              tickLabels: {\n                fontSize: 13,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n          />\n          <VictoryLegend\n            x={60}\n            y={267}\n            symbolSpacer={10}\n            itemsPerRow={6}\n            name={\"legend\"}\n            borderPadding={{ right: 8 }}\n            orientation=\"horizontal\"\n            cursor={\"pointer\"}\n            gutter={15}\n            style={{\n              labels: { fontSize: 12 },\n              data: { stroke: \"#485157\", strokeWidth: 1, size: 6 },\n            }}\n            data={this.state.names.map(this.selectLegendData)}\n          />\n          {Object.keys(this.state.seriesMap).map(this.selectVictoryLines)}\n        </VictoryChart>\n      </Card>\n    );\n  }\n}\n\nexport default Chart;\n","import React, {useState, useEffect} from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from '@material-ui/core/Button';\nimport {Client, Message} from 'paho-mqtt';\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {ButtonActionDialog, ButtonChangeIODialog} from \"./UnitCards\"\n\nconst dividerStyle = {\n  marginTop: 4,\n  marginBottom: 4,\n};\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 100,\n    marginTop: \"15px\",\n  },\n  content: {\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"10px\",\n    paddingBottom: \"0px\",\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.88)\",\n  },\n  unitTitleDialog: {\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.88)\",\n  },\n  textbox: {\n    display: \"flex\",\n    fontSize: 13,\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n  actionForm: {\n    padding: \"20px 0px 0px 0px\",\n  },\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n  jobButton:{\n    width: \"70px\",\n    marginTop: \"5px\"\n  }\n})\n\n\nfunction ButtonAllUnitSettingsDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [client, setClient] = useState(null);\n\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    const client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"webui\" + Math.random()\n    );\n    client.connect();\n    setClient(client)\n  },[])\n\n  function setJobState(job, state) {\n    return function sendMessage() {\n      var message = new Message(String(state));\n      message.destinationName = [\n        \"pioreactor\",\n        props.unitNumber,\n        props.experiment,\n        job,\n        \"$state\",\n        \"set\",\n      ].join(\"/\");\n      message.qos = 1;\n      try{\n        client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => sendMessage(), 750)\n      }\n    };\n  }\n\n  function setPioreactorJobState(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unitNumber,\n      props.experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    client.publish(message);\n  }\n\n  function setPioreactorJobStateOnEnter(e) {\n    if (e.key === \"Enter\") {\n      setPioreactorJobState(e.target.id, e.target.value);\n      e.target.value = \"\";\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function startPioreactorJob(job_attr){\n    return function() {\n      fetch(\"/run/\" + job_attr + \"/\" + props.unitNumber).then(res => {\n      })\n    }\n  }\n\n  function createUserButtonsBasedOnState(job, parentJob=null){\n    parentJob = parentJob || job\n    return (<div>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={startPioreactorJob(job)}\n        >\n          Start\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setJobState(job, \"sleeping\")}\n        >\n          Pause\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setJobState(job, \"ready\")}\n        >\n          Resume\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"secondary\"\n          onClick={setJobState(parentJob, \"disconnected\")}\n        >\n          Stop\n        </Button>\n      </div>\n  )}\n\n  const odButtons = createUserButtonsBasedOnState(\"od_reading\")\n  const grButtons = createUserButtonsBasedOnState(\"growth_rate_calculating\")\n  const ioButtons = createUserButtonsBasedOnState(\"io_controlling\", \"algorithm_controlling\")\n  const stirringButtons = createUserButtonsBasedOnState(\"stirring\")\n\n\n  return (\n    <div>\n      <Button color=\"primary\" size=\"small\" onClick={handleClickOpen}>\n        Settings\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle>\n          <Typography className={classes.suptitle} color=\"textSecondary\">\n            All units\n          </Typography>\n          <Typography className={classes.unitTitleDialog}>\n            Settings\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Typography gutterBottom>\n            Stirring\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Start, stop or pause the stirring on the Pioreactor. Stirring is needed for homogenous mixing.\n\n          </Typography>\n\n          {stirringButtons}\n\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Optical density reading\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Pause or restart the optical density reading. This will also pause\n            downstream jobs that rely on optical density readings, like growth\n            rates.\n          </Typography>\n\n          {odButtons}\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Growth rate calculating\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Pause or start the calculating the implied growth rate and smooted\n            optical densities.\n          </Typography>\n\n          {grButtons}\n\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Input/output events\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Pause media input/output events from occuring, or restart them.\n          </Typography>\n\n          {ioButtons}\n\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Volume per dilution\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the volume per dilution. Typical values are between 0.0mL and\n            1.5mL.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"io_controlling/volume\"\n            label=\"Volume per dilution\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobStateOnEnter}\n            className={classes.textField}\n          />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Target optical density\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the target optical density. Typical values are between 1.0 and\n            2.5 (arbitrary units)\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"io_controlling/target_od\"\n            label=\"Target optical density\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">AU</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobStateOnEnter}\n            className={classes.textField}\n          />\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Duration between dilutions\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change how long to wait between dilutions. Typically between 5 and 90 minutes.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"io_controlling/duration\"\n            label=\"Duration\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobStateOnEnter}\n            className={classes.textField}\n          />\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Target growth rate\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the target hourly growth rate - only applicable in{\" \"}\n            <code>morbidostat</code> mode. Typical values are between 0.05h⁻¹ and\n            0.4h⁻¹.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"io_controlling/target_growth_rate\"\n            label=\"Target growth rate\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">h⁻¹</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobStateOnEnter}\n            className={classes.textField}\n          />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            IO algorithm\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change which IO algorithm is running on this unit, and set the initial settings.\n          </Typography>\n\n          <ButtonChangeIODialog\n            unitNumber={'$broadcast'}\n            title=\"All units\"\n            config={{}}\n            currentIOAlgorithm={true}\n            experiment={props.experiment}\n          />\n          <Divider className={classes.divider} />\n      </DialogContent>\n    </Dialog>\n  </div>\n  );\n}\n\n\n function ButtonConfirmStopProcessDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const onConfirm = () => {\n      fetch(\"/stop\")\n      handleClose()\n  }\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color=\"secondary\" size=\"small\" onClick={handleClickOpen}>\n        Stop all activity\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Stop all pioreactor activity?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will stop stirring, optical density measuring, and IO events from occurring in <b>all</b> Pioreactor units. It may take a moment to\n            take effect.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onConfirm} color=\"primary\">\n            OK\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n\n\nclass VolumeThroughputTally extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mediaThroughputPerUnit: {},\n        altMediaThroughputPerUnit: {},\n        mediaThroughput: 0,\n        altMediaThroughput: 0,\n        mediaRate: 0,\n        altMediaRate: 0,\n      };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getRecentRates() {\n     await fetch(\"/recent_media_rates/\" + this.props.experiment)\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      this.setState(data)\n    });\n  }\n\n  componentDidMount() {\n    this.client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"client-throughput\");\n    this.client.connect({'onSuccess': this.onConnect});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getRecentRates()\n     }\n  }\n\n  onConnect() {\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"throughput_calculating\", \"alt_media_throughput\"].join(\"/\"))\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"throughput_calculating\", \"media_throughput\"].join(\"/\"))\n  }\n\n  addOrUpdate(hash, object, value) {\n      if (Object.hasOwnProperty(hash)){\n        object[hash] = value + object[hash]\n      }\n      else{\n        object[hash] = value\n      }\n      return object\n  }\n\n  onMessageArrived(message) {\n    const topic = message.destinationName\n    const topicParts = topic.split(\"/\")\n    const payload = parseFloat(message.payloadString)\n    const unit = topicParts[1]\n    const objectRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughputPerUnit\"  : \"mediaThroughputPerUnit\"\n    const totalRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughput\"  : \"mediaThroughput\"\n\n    this.setState({\n      [objectRef]: this.addOrUpdate(unit, this.state[objectRef], payload)\n    });\n\n    var total = Object.values(this.state[objectRef]).reduce((a, b) => a + b, 0)\n\n    this.setState({\n      [totalRef]: total\n    })\n\n  }\n  render(){\n    return (\n    <div>\n        <Divider style={dividerStyle}/>\n        <div style={{display: \"flex\", \"fontSize\": 14}}>\n          <Typography style={{display: \"flex\", \"fontSize\": 14, flex: 1, textAlign: \"left\"}}>\n            Media throughput:\n          </Typography>\n          <span style={{fontFamily: \"courier\", flex: 1, textAlign: \"right\"}}>\n            {Math.round(this.state.mediaThroughput)}mL (<span className={\"underlineSpan\"} title=\"Last 6 hour average, automated IO sources\">～{this.state.mediaRate.toFixed(1)}mL/h</span>)\n          </span>\n        </div>\n        <Divider style={dividerStyle}/>\n        <div style={{display: \"flex\", \"fontSize\": 14}}>\n          <Typography style={{display: \"flex\", \"fontSize\": 14, flex: 1, textAlign: \"left\"}}>\n            Alt. Media throughput:\n          </Typography>\n          <span style={{fontFamily: \"courier\", flex: 1, textAlign: \"right\"}}>{Math.round(this.state.altMediaThroughput)}mL (<span className={\"underlineSpan\"} title=\"Last 12 hour average, automated IO sources\">～{this.state.altMediaRate.toFixed(1)}mL/h</span>)</span>\n        </div>\n      <Divider style={dividerStyle}/>\n    </div>\n  )}\n}\n\n\nconst AllUnitsManagerCard = (props) => {\n    const classes = useStyles();\n    return (\n      <Card>\n        <CardContent>\n          <Typography className={classes.unitTitle}>\n            All Units\n          </Typography>\n          <VolumeThroughputTally experiment={props.experiment}/>\n        </CardContent>\n        <CardActions>\n          <ButtonAllUnitSettingsDialog disabled={false} unitNumber={\"$broadcast\"} experiment={props.experiment}/>\n          <ButtonActionDialog\n            disabled={false}\n            unitNumber={\"$broadcast\"}\n            title=\"All units\"\n            isPlural={true}\n            config={{}}\n            />\n          <ButtonConfirmStopProcessDialog/>\n        </CardActions>\n      </Card>\n    )\n}\n\nexport default AllUnitsManagerCard;\n","import React from \"react\";\nimport { Client, Message } from \"paho-mqtt\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nfunction ClearChartButton(props){\n\n\n  function onClick() {\n    var client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"client\" + Math.random()\n    );\n    client.connect({onSuccess: () => {\n      for (var jobName of ['od_raw', 'od_filtered', 'growth_rate', 'alt_media_fraction']) {\n        var message = new Message(\"\");\n\n        message.destinationName = [\n          \"pioreactor\",\n          \"leader\",\n          \"$experiment\",\n          `${jobName}_time_series_aggregating`,\n          \"aggregated_time_series\",\n          \"set\",\n        ].join(\"/\");\n\n        message.qos = 1;\n        client.publish(message);\n      }\n\n      window.location.reload();\n      return false\n    }});\n  }\n\n  return (\n    <Button onClick={onClick}> Clear chart data </Button>\n)}\n\n\nexport default ClearChartButton;\n","import React from \"react\";\nimport { Client, Message } from \"paho-mqtt\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nfunction ClearLogButton(props){\n\n\n  function onClick() {\n    var client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"client\" + Math.random()\n    );\n    client.connect({onSuccess: () => {\n      var message = new Message(\"\");\n      message.destinationName = [\n        \"pioreactor\",\n        \"leader\",\n        \"$experiment\",\n        \"log_aggregating\",\n        \"aggregated_log_table\",\n        \"set\",\n      ].join(\"/\");\n      message.qos = 2;\n      client.publish(message);\n      window.location.reload();\n      return false\n    }});\n  }\n\n  return (\n    <Button onClick={onClick}> Clear log table </Button>\n)}\n\n\nexport default ClearLogButton;\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Header from \"./components/Header\";\nimport {UnitCards} from \"./components/UnitCards\";\nimport LogTable from \"./components/LogTable\";\nimport ExperimentSummary from \"./components/ExperimentSummary\";\nimport Chart from \"./components/Chart\";\nimport AllUnitsManagerCard from \"./components/AllUnitsManagerCard\";\nimport ClearChartButton from \"./components/ClearChartButton\";\nimport ClearLogButton from \"./components/ClearLogButton\";\nimport {parseINIString} from \"./utilities\"\n\n\nfunction Overview() {\n\n  const [experimentMetadata, setExperimentMetadata] = React.useState({})\n  const [config, setConfig] = React.useState({})\n\n  React.useEffect(() => {\n    async function getLatestExperiment() {\n         await fetch(\"/get_latest_experiment\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperimentMetadata(data)\n        });\n      }\n\n    async function getConfig() {\n      await fetch(\"/get_config/config.ini\")\n        .then((response) => {\n            if (response.ok) {\n              return response.text();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((config) => {\n          setConfig(parseINIString(config)); // TODO: parse on server side and send a json object\n        })\n        .catch((error) => {})\n    }\n    getLatestExperiment()\n    getConfig();\n  }, [])\n\n  const keys = (a) => Object.keys(a)\n\n  return (\n      <>\n        <Grid container spacing={2} justify=\"space-between\">\n          <Grid item xs={12} style={{paddingRight: \"0px\"}}>\n            <Header />\n          </Grid>\n          <Grid item xs={1} md={12}/>\n          <Grid item xs={1} md={12}/>\n\n\n          <Grid item xs={12} md={1}/>\n          <Grid item xs={12} md={10}>\n            <ExperimentSummary experimentMetadata={experimentMetadata}/>\n          </Grid>\n          <Grid item xs={12} md={1}/>\n\n\n          <Grid item xs={12} md={1}/>\n          <Grid item xs={12} md={6} container spacing={2} justify=\"flex-start\" style={{paddingLeft: 0, height: \"100%\"}}>\n\n\n            {( config['dashboard.charts'] && (config['dashboard.charts']['implied_growth_rate'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={config}\n                dataFile={\"./data/growth_rate_time_series_aggregating.json\"}\n                title=\"Implied growth rate\"\n                topic=\"growth_rate\"\n                yAxisLabel=\"Growth rate, h⁻¹\"\n                experiment={experimentMetadata.experiment}\n                interpolation=\"stepAfter\"\n              />\n            </Grid>\n            }\n\n            {( config['dashboard.charts'] && (config['dashboard.charts']['fraction_of_volume_that_is_alternative_media'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={config}\n                domain={[0, 1]}\n                dataFile={\"./data/alt_media_fraction_time_series_aggregating.json\"}\n                interpolation=\"stepAfter\"\n                title=\"Fraction of volume that is alternative media\"\n                topic=\"alt_media_calculating/alt_media_fraction\"\n                yAxisLabel=\"Fraction\"\n                experiment={experimentMetadata.experiment}\n              />\n            </Grid>\n            }\n\n            {( config['dashboard.charts'] && (config['dashboard.charts']['normalized_135_optical_density'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={config}\n                isODReading={true}\n                dataFile={\"./data/od_filtered_time_series_aggregating.json\"}\n                title=\"Normalized 135° optical density\"\n                topic=\"od_filtered/135/+\"\n                yAxisLabel=\"Current OD / initial OD\"\n                experiment={experimentMetadata.experiment}\n                interpolation=\"stepAfter\"\n              />\n            </Grid>\n            }\n\n            {( config['dashboard.charts'] && (config['dashboard.charts']['raw_135_optical_density'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={config}\n                isODReading={true}\n                dataFile={\"./data/od_raw_time_series_aggregating.json\"}\n                title=\"Raw 135° optical density\"\n                topic=\"od_raw/135/+\"\n                yAxisLabel=\"Voltage\"\n                experiment=\"+\"\n                interpolation=\"stepAfter\"\n              />\n            </Grid>\n           }\n            <Grid item xs={12}> <ClearChartButton experiment={experimentMetadata.experiment}/> </Grid>\n          </Grid>\n\n          <Grid item xs={12} md={4} container spacing={2} justify=\"flex-end\" style={{height: \"100%\"}}>\n            <Grid item xs={12} style={{padding: \"10px 0px\"}}>\n              <AllUnitsManagerCard experiment={experimentMetadata.experiment}/>\n            </Grid>\n\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <UnitCards experiment={experimentMetadata.experiment} config={config} units={config['inventory'] ? keys(config['inventory']).filter((e, i) => (i % 2) === 0) : [] }/>\n              </Grid>\n              <Grid item xs={6}>\n                <UnitCards experiment={experimentMetadata.experiment} config={config} units={config['inventory'] ? keys(config['inventory']).filter((e, i) => (i % 2) === 1)  : [] }/>\n              </Grid>\n            </Grid>\n\n\n            <Grid item xs={12} style={{padding: \"10px 0px\"}}>\n              <LogTable config={config}/>\n            </Grid>\n            <Grid item xs={12}> <ClearLogButton /> </Grid>\n          </Grid>\n\n          <Grid item xs={1} md={1}/>\n        </Grid>\n      </>\n  );\n}\nexport default Overview;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Header from \"./components/Header\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n}));\n\n\n\nfunction ExperimentSelection(props) {\n  const classes = useStyles();\n\n  const [experiments, setExperiments] = React.useState([])\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_experiments\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperiments(data)\n          props.handleChange(data[0].experiment)\n        });\n      }\n      getData()\n  }, [])\n\n  const handleExperimentSelectionChange = (e) => {\n    props.handleChange(e.target.value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n\n      <FormLabel component=\"legend\">Experiment</FormLabel>\n        <Select\n          native\n          value={props.ExperimentSelection}\n          onChange={handleExperimentSelectionChange}\n          inputProps={{\n            name: 'experiment',\n            id: 'experiment',\n          }}\n        >\n          {experiments.map((v) => {\n            return <option value={v.experiment}>{`${v.experiment} (started ${moment(v.timestamp).format(\"MMMM D, YYYY\")})`}</option>\n            }\n          )}\n        </Select>\n      </FormControl>\n\n    </div>\n  )\n}\n\n\n\nconst CheckboxesGroup = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Datasets</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.growth_rates} onChange={props.handleChange} name=\"growth_rates\" />}\n            label=\"Implied growth rate\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.io_events} onChange={props.handleChange} name=\"io_events\" />}\n            label=\"Input/output (dosing) events log\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.experiments} onChange={props.handleChange} name=\"experiments\" />}\n            label=\"Experiment description\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_raw} onChange={props.handleChange} name=\"od_readings_raw\" />}\n            label=\"Raw optical density\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_filtered} onChange={props.handleChange} name=\"od_readings_filtered\" />}\n            label=\"Normalized optical density\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.logs} onChange={props.handleChange} name=\"logs\" />}\n            label=\"Logs\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.alt_media_fraction} onChange={props.handleChange} name=\"alt_media_fraction\" />}\n            label=\"Alternative media fraction\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.io_algorithm_settings} onChange={props.handleChange} name=\"io_algorithm_settings\" />}\n            label=\"IO algorithm change log\"\n          />\n        </FormGroup>\n      </FormControl>\n    </div>\n)}\n\n\nfunction DownloadDataFormContainer() {\n  const classes = useStyles();\n  const [isRunning, setIsRunning] = React.useState(false)\n  const [isError, setIsError] = React.useState(false)\n  const [errorMsg, setErrorMsg] = React.useState(\"\")\n  const [state, setState] = React.useState({\n    experimentSelection: \"\",\n    datasetCheckbox: {\n      growth_rates: false,\n      io_events: false,\n      experiments: false,\n      od_readings_raw: false,\n      od_readings_filtered: false,\n      logs: false,\n      alt_media_fraction: false,\n      io_algorithm_settings: false,\n    }\n  });\n\n  const onSubmit = (event) =>{\n    event.preventDefault()\n\n    if (!Object.values(state['datasetCheckbox']).some((e) => e)) {\n      setIsError(true)\n      setErrorMsg(\"At least one dataset must be selected.\")\n      return\n    }\n\n    setIsRunning(true)\n    fetch('query_datasets',{\n        method: \"POST\",\n        body: JSON.stringify(state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    }).then(res => res.json())\n      .then(res => {\n      var link = document.createElement(\"a\");\n      link.setAttribute('download', res['filename']);\n      link.href = \"/static/exports/\" + res['filename'];\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setIsRunning(false)\n    }).catch(e => {\n      setIsRunning(false)\n      setIsError(true)\n      setErrorMsg(\"Server error occurred. Check logs.\")\n    });\n  }\n\n  const handleCheckboxChange = (event) => {\n    setState(prevState => ({\n      ...prevState,\n      datasetCheckbox: {...state.datasetCheckbox, [event.target.name]: event.target.checked }\n    }));\n  };\n\n  function handleExperimentSelectionChange(value) {\n    setState(prevState => ({\n      ...prevState,\n      experimentSelection: value\n    }));\n  };\n\n  const runningFeedback = isRunning ? <CircularProgress color=\"white\" size={20}/> : \"Download\"\n  const errorFeedbackOrDefault = isError ? errorMsg : \"Querying large tables may take up to a minute or so.\"\n  return (\n    <>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Download Experiment Data\n            </Box>\n          </Typography>\n        </div>\n\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <form>\n            <Grid container spacing={1}>\n              <Grid item xs={12} md={12}>\n                <ExperimentSelection\n                experimentSelection={state.experimentSelection}\n                handleChange={handleExperimentSelectionChange}\n                />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <CheckboxesGroup\n                isChecked={state.datasetCheckbox}\n                handleChange={handleCheckboxChange}\n                />\n              </Grid>\n\n              <Grid item xs={0}/>\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  style={{width: \"120px\", marginLeft: 24}}\n                >\n                  {runningFeedback}\n                </Button>\n                <p style={{marginLeft: 24}}>{errorFeedbackOrDefault}</p>\n\n              </Grid>\n              <Grid item xs={12}/>\n            </Grid>\n          </form>\n        </CardContent>\n      </Card>\n  </>\n  )\n}\n\n\nfunction DownloadData() {\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12}><Header /></Grid>\n          <Grid item xs={12} />\n          <Grid item xs={12} />\n\n          <Grid item md={1} xs={1}/>\n          <Grid item md={10} xs={12}>\n            <DownloadDataFormContainer/>\n          </Grid>\n          <Grid item md={1} xs={1}/>\n\n        </Grid>\n    )\n}\n\nexport default DownloadData;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  divInstructions: {\n    marginBottom: theme.spacing(3),\n  }\n}));\n\n\n\nfunction CycleLiquid(props) {\n  const classes = useStyles();\n  const liquid = props.liquid\n  const [isClicked, setIsClicked] = React.useState(false)\n\n  const onSubmit = () => {\n    fetch(\"/run/remove_waste/$broadcast?\" + new URLSearchParams({duration: 90, duty_cycle: 100}));\n    fetch(\"/run/add_media/$broadcast?\" + new URLSearchParams({duration: 50, duty_cycle: 25}));\n    fetch(\"/run/add_alt_media/$broadcast?\" + new URLSearchParams({duration: 50, duty_cycle: 25}));\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p>{props.additionalMsg}</p>\n      <p>Add <b>{liquid}</b> to the non-waste containers. We will cycle this solution through our system. Click the button below once the {liquid} is in place.</p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Cycle {liquid}</Button>\n    </div>\n    )\n}\n\n\nfunction MediaFlush(props) {\n  const classes = useStyles();\n  const isAlt = props.altMedia\n  const [isClicked, setIsClicked] = React.useState(false)\n\n  const onSubmit = () => {\n    fetch(\"/run/remove_waste/$broadcast?\" + new URLSearchParams({duration: 60, duty_cycle: 100}));\n    if (isAlt){\n      fetch(\"/run/add_alt_media/$broadcast?\" + new URLSearchParams({duration: 15, duty_cycle: 25}));\n    } else {\n      fetch(\"/run/add_media/$broadcast?\" + new URLSearchParams({duration: 15, duty_cycle: 25}));\n    }\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p>Next, we will prime the {isAlt ? \"alt-\" : \"\"}media tubes with our {isAlt ? \"alt-\" : \"\"}media.</p>\n      <p>Replace the container attached to the {isAlt ? \"alt-\" : \"\"}media outflow tubes with the sterlized {isAlt ? \"alt-\" : \"\"}media container. Remember to use proper sanitation techniques!</p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Run {isAlt ? \"alt-\" : \"\"}media and waste pumps</Button>\n    </div>\n    )\n}\n\nfunction AddFinalVolumeOfMedia(props) {\n  const classes = useStyles();\n  const [isClicked, setIsClicked] = React.useState(false)\n\n\n  const onSubmit = () => {\n    fetch(\"/run/add_media/$broadcast?\" + new URLSearchParams({ml: 12}));\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p> Finally, we will add fresh media to our vials </p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Add 12mL of media</Button>\n    </div>\n    )\n}\n\n\nfunction getSteps() {\n  return [\n    'Setup inflow and outflow tubes',\n    '10% bleach cycling',\n    '70% alcohol cycling',\n    'Distilled water cycling',\n    'Media preparation',\n    'Alt media preparation',\n    'Replace vials',\n    'Add initial media to vials'];\n}\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return `For each pioreactor unit, connect the media inflow, alt-media inflow, and waste out flow tubes to an empty\n      vial with hat. Connect the all the media outflow tubes to a single empty container, all the alt-media outflow tubes to a single empty container, and\n      all the waste inflow tubes to a single, empty, large container.`;\n    case 1:\n      return <CycleLiquid liquid={\"10% bleach solution\"}/>;\n    case 2:\n      return <CycleLiquid additionalMsg={\"Remove any excess bleach from the containers, and empty the waste container. Bleach and alcohol should not mix.\"} liquid={\"70% alcohol\"}/>;\n    case 3:\n      return <CycleLiquid liquid={\"distilled water\"}/>;\n    case 4:\n      return <MediaFlush />;\n    case 5:\n      return <MediaFlush altMedia={true}/>;\n    case 6:\n      return `Using proper sanitation techniques, replace the pioreactor vials - now full of water and media - with the empty-but-innocculated vials`;\n    case 7:\n      return <AddFinalVolumeOfMedia/>;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function VerticalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All cleaning and preparation steps completed!</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}","import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Chart from \"./Chart\";\n\n\n\nfunction StartStirringButton(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const onClick = (e) => {\n    setIsClicked(true)\n    fetch(\"/run/stirring/$broadcast\").then(res => {\n      if (res.status === 200){\n        setOpenSnackbar(true);\n      }\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p> To get an accurate reading, we need to start start the stirring. This also provides gas transfer and keeps the cells in suspension.</p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start stirring </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={\"Stirring starting\"}\n      autoHideDuration={7000}\n      key={\"snackbarStirring\"}\n    />\n  </div>\n  )\n}\n\n\nfunction StartODReading(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const onClick = (e) => {\n    setIsClicked(true)\n    fetch(\"/run/od_reading/$broadcast\").then(res => {\n      if (res.status === 200){\n        setOpenSnackbar(true);\n      }\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p> Next, we will turn on the optical density reading. We also call this <em>OD readings</em>. This will provide us with a measure of cell density. After a minute or so, you should see the data in the chart below. </p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start OD readings </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={\"OD reading starting\"}\n      autoHideDuration={7000}\n      key={\"snackbarOD\"}\n    />\n  </div>\n  )\n}\n\n\nfunction StartSensors(props){\n\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={2}/>\n      <Grid item xs={10}><StartStirringButton/></Grid>\n      <Grid item xs={10}><StartODReading/></Grid>\n      <Grid item xs={12}>\n        <Chart\n          config={{}}\n          isODReading={true}\n          fontScale={1.0}\n          interpolation=\"stepAfter\"\n          title=\"Raw 135° optical density\"\n          topic=\"od_raw/135/+\"\n          yAxisLabel=\"Voltage\"\n          experiment=\"+\"\n        />\n      </Grid>\n      <Grid item xs={2}/>\n    </Grid>\n)}\n\n\nexport default StartSensors;\n","import { Client } from \"paho-mqtt\";\n\nimport React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Chart from \"./Chart\";\n\n\n\nfunction StartGrowthRate(props){\n\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\n  const [isClicked, setIsClicked] = React.useState(false);\n\n\n  React.useEffect(() => {\n\n    function onConnect(experiment) {\n      function onConnectWithExp() {\n        client.subscribe([\"pioreactor\", \"+\", experiment, \"od_normalization\", \"variance\"].join(\"/\"))\n      }\n      return onConnectWithExp\n    }\n\n    function onMessageArrived(msg) {\n      setSnackbarMessage(\"OD normalization complete\")\n      setOpenSnackbar(true)\n    }\n\n    var client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"webui\" + Math.random()\n    );\n    client.onMessageArrived = onMessageArrived\n    client.connect({ onSuccess: onConnect(props.experiment) });\n\n  }, [props.experiment]);\n\n\n  const onClick = (e) => {\n    fetch(\"/run/growth_rate_calculating/$broadcast\").then(r => {\n      setSnackbarMessage(\"Growth rate calculating starting\")\n      setOpenSnackbar(true)\n      setIsClicked(true)\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p>Because of the varying strength & quality of the electronics, not all readings look the same - even for the same density of cells. So we compute a baseline measurement from the OD readings, and measure all growth against that baseline. </p>\n      <p>From the (normalized) OD readings, we can calculate the <em>implied hourly growth rate</em>, which is our measure of growth. </p>\n      <p>Let's start the growth rate calculations. This first computes the normalization constants, <b>which can take up to two minutes to complete</b>. After that, the graph below should start to populate.</p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start growth rate calculations </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      key={\"snackbarGR\"}\n      />\n  </div>\n  )\n}\n\n\n\n\nfunction StartCalculations(props){\n  const [experiment, setExperiment] = React.useState(\"null_exp\")\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_latest_experiment\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperiment(data.experiment)\n        });\n      }\n      getData()\n  }, [])\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={2}/>\n      <Grid item xs={10}><StartGrowthRate experiment={experiment}/></Grid>\n      <Grid item xs={12}>\n      <Chart\n        config={{}}\n        interpolation=\"stepAfter\"\n        fontScale={1}\n        title=\"Implied growth rate\"\n        topic=\"growth_rate\"\n        yAxisLabel=\"Growth rate, h⁻¹\"\n        experiment={experiment}\n      />\n      </Grid>\n      <Grid item xs={2}/>\n    </Grid>\n)}\n\n\nexport default StartCalculations;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Client, Message } from \"paho-mqtt\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport Button from \"@material-ui/core/Button\";\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Header from \"./components/Header\"\nimport CleaningScript from \"./components/CleaningScript\"\nimport StartSensors from \"./components/StartSensors\"\nimport StartCalculations from \"./components/StartCalculations\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"60%\"\n  },\n  textField:{\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  halfTextField: {\n    width: \"95%\"\n  },\n}));\n\n\n\n\nfunction ExperimentSummaryForm(props) {\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [formError, setFormError] = React.useState(false);\n  const [expName, setExpName] = React.useState(\"\");\n  const [timestamp, setTimestamp] = React.useState(moment().format(\"YYYY-MM-DDTHH:mm:ss\"));\n  const [description, setDescription] = React.useState(\"\");\n\n\n  function publishExpNameToMQTT(){\n\n    function onConnect() {\n      var message = new Message(expName);\n      message.destinationName = \"pioreactor/latest_experiment\"\n      message.qos = 1;\n      message.retained = true;\n      client.publish(message);\n    }\n\n    var client = new Client(\n      \"ws://pioreactorws.ngrok.io/\",\n      \"webui\" + Math.random()\n    );\n    client.connect({ onSuccess: onConnect });\n\n  }\n\n  function killExistingJobs(){\n     fetch('/stop')\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (expName === \"\"){\n      setFormError(true)\n      return\n    }\n    fetch('create_experiment',{\n        method: \"POST\",\n        body: JSON.stringify({experiment : expName, timestamp: timestamp, description: description}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200){\n          setFormError(false);\n          setOpenSnackbar(true);\n          killExistingJobs()\n          publishExpNameToMQTT()\n        }\n        else{\n          setFormError(true);\n        }\n      }\n     )\n  }\n\n  const onExpNameChange = (e) => {\n    setExpName(e.target.value)\n  }\n  const onDescChange = (e) => {\n    setDescription(e.target.value)\n  }\n  const onTimestampChange = (e) => {\n    setTimestamp(e.target.value)\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <div className={classes.root}>\n        <FormGroup>\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              error={formError}\n              id=\"expName\"\n              label=\"Experiment name\"\n              required className={`${classes.halfTextField} ${classes.textField}`}\n              onChange={onExpNameChange}\n              />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              id=\"datetime\"\n              label=\"Start time\"\n              type=\"datetime-local\"\n              defaultValue={timestamp}\n              className={`${classes.halfTextField} ${classes.textField}`}\n              onChange={onTimestampChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <TextField\n              label=\"Description\"\n              rowsMax={4}\n              placeholder={\"Add a description: what microbe are you using? What is the media composition? This description can always be changed later.\"}\n              multiline\n              className={classes.textField}\n              onChange={onDescChange}\n              fullWidth={true}\n            />\n          </Grid>\n          <Grid item xs={12} md={10}/>\n          <Grid item xs={12} md={2}>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}> Create </Button>\n            <Snackbar\n              anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n              open={openSnackbar}\n              onClose={handleSnackbarClose}\n              message={\"Created new experiment\"}\n              autoHideDuration={7000}\n              key={\"snackbar\" + props.unitNumber + props.action}\n            />\n          </Grid>\n        </Grid>\n        </FormGroup>\n    </div>\n  )\n}\n\n\n\nfunction getSteps() {\n  return [\n    {title: 'Experiment summary', content: <ExperimentSummaryForm/>, optional: true},\n    {title: 'Cleaning and preparation', content: <CleaningScript/>, optional: true},\n    {title: 'Start sensors', content: <StartSensors/>, optional: true},\n    {title: 'Start calculations', content: <StartCalculations/>, optional: false},\n  ];\n}\n\n\n\nfunction StartNewExperimentContainer() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const getStepContent = (index) => {\n    return steps[index].content\n  }\n  const isStepOptional = (index) => {\n    return steps[index].optional\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    if (activeStep === steps.length - 1){\n      window.location.href = \"/overview\";\n    } else {\n\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(activeStep);\n      }\n\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped(newSkipped);\n      window.scrollTo({top: 0})\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" component=\"h2\">\n          Start a new experiment\n        </Typography>\n        <Stepper activeStep={activeStep}>\n          {steps.map((step, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (step.optional) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={step.title} {...stepProps}>\n                <StepLabel {...labelProps}>{step.title}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                {isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n\n                <Button\n                  variant=\"contained\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Go to overview' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n\n\nfunction StartNewExperiment() {\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12}><Header /></Grid>\n\n          <Grid item xs={1}/>\n          <Grid item xs={10}>\n            <div><StartNewExperimentContainer/></div>\n          </Grid>\n          <Grid item xs={1}/>\n        </Grid>\n    )\n}\n\nexport default StartNewExperiment;\n\n","import React from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport {Typography} from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Select from '@material-ui/core/Select';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { CodeFlaskReact } from \"react-codeflask\"\n\nimport Header from \"./components/Header\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n}));\n\n\n\nclass EditableCodeDiv extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"\",\n      openSnackbar: false,\n      filename: \"config.ini\",\n      snackbarMsg: \"\",\n      isRunning: false,\n      availableConfigs: [\n        {name: \"shared config.ini\", filename: \"config.ini\"},\n      ]\n    };\n    this.saveCurrentCode = this.saveCurrentCode.bind(this);\n  }\n\n  async getConfig(filename) {\n    await fetch(\"/get_config/\" + filename)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        this.setState({code: text});\n      })\n  }\n\n  async getListOfConfigFiles(filename) {\n    await fetch(\"/get_config\")\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        this.setState(prevState => ({\n          availableConfigs: [...prevState.availableConfigs, ...json.filter(e => (e !== 'config.ini')).map(e => ({name: e, filename: e}))]\n        }));\n      })\n  }\n\n  saveCurrentCode() {\n    this.setState({isRunning: true})\n    fetch('/save_new_config',{\n        method: \"POST\",\n        body: JSON.stringify({code :this.state.code, filename: this.state.filename}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({snackbarMsg: this.state.filename + \" saved and synced.\"})\n      } else {\n        this.setState({snackbarMsg: \"Hm. Something when wrong saving or syncing...\"})\n      }\n      this.setState({openSnackbar: true, isRunning: false});\n    })\n  }\n\n  componentDidMount() {\n    this.getConfig(this.state.filename)\n    this.getListOfConfigFiles()\n  }\n\n  onSelectionChange = (e) => {\n    this.setState({filename: e.target.value})\n    this.getConfig(e.target.value)\n  }\n\n  getCodeFlaskRef = (codeFlask) => {\n    this.codeFlask = codeFlask\n  }\n\n  onTextChange = (code) => {\n    this.setState({code: code})\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({openSnackbar: false});\n  };\n\n  render() {\n    const runningFeedback = this.state.isRunning ? <CircularProgress color=\"inherit\" size={25}/> : \"Save\"\n    return (\n      <>\n        <Select\n          style={{margin: \"10px 10px 10px 10px\"}}\n          native\n          value={this.state.filename}\n          onChange={this.onSelectionChange}\n          inputProps={{\n            name: 'config',\n            id: 'config',\n          }}\n        >\n          {this.state.availableConfigs.map((v) => {\n            return <option key={v.filename} value={v.filename}>{v.name}</option>\n            }\n          )}\n        </Select>\n\n        <div style={{letterSpacing: \"0em\", margin: \"10px auto 10px auto\", position: \"relative\", width: \"98%\", height: \"300px\", border: \"1px solid #ccc\"}}>\n          <CodeFlaskReact\n            code={this.state.code}\n            onChange={this.onTextChange}\n            editorRef={this.getCodeFlaskRef}\n            language={\"python\"}\n          />\n        </div>\n        <Button\n          style={{margin: \"5px 10px 5px 10px\"}}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={this.saveCurrentCode}\n          disabled={false}>\n          {runningFeedback}\n        </Button>\n        <Snackbar\n          anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n          open={this.state.openSnackbar}\n          onClose={this.handleSnackbarClose}\n          message={this.state.snackbarMsg}\n          autoHideDuration={2000}\n          key={\"snackbar\"}\n        />\n      </>\n    )\n  }\n}\n\n\n\n\nfunction EditConfigContainer(){\n  const classes = useStyles();\n\n  return(\n    <>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Edit config.ini\n            </Box>\n          </Typography>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <p>Update the <code>config.ini</code> files. The shared <code>config.ini</code> will be deployed to <em>all</em> units, but can be overwritten with a specific unit's <code>config.ini</code>. <a href=\"https://github.com/Pioreactor/pioreactor/wiki/Configuration-via-config.ini\" target=\"_blank\">Learn more about Pioreactor configuration</a>.</p>\n          <EditableCodeDiv/>\n        </CardContent>\n      </Card>\n    </>\n)}\n\n\nfunction EditConfig() {\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12}><Header /></Grid>\n          <Grid item md={12} xs={1}/>\n          <Grid item md={12} xs={1}/>\n\n          <Grid item md={1} xs={1}/>\n          <Grid item md={10} xs={12}>\n             <EditConfigContainer/>\n          </Grid>\n          <Grid item md={1} xs={1}/>\n\n        </Grid>\n    )\n}\n\nexport default EditConfig;\n\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ExperimentOverview from \"./ExperimentOverview\";\nimport DownloadData from \"./DownloadData\";\nimport StartNewExperiment from \"./StartNewExperiment\";\nimport EditConfig from \"./EditConfig\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"fontsource-roboto/300-normal.css\"\nimport \"fontsource-roboto/400-normal.css\"\nimport \"fontsource-roboto/500-normal.css\"\nimport \"fontsource-roboto/700-normal.css\"\nimport './styles.css';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#f6f6f7\",\n    },\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#5331CA',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <div className=\"pageContainer\">\n          <Switch>\n            <Route path=\"/download-data\">\n              <DownloadData />\n            </Route>\n            <Route path=\"/start-new-experiment\">\n              <StartNewExperiment />\n            </Route>\n            <Route path=\"/overview\">\n              <ExperimentOverview />\n            </Route>\n            <Route path=\"/edit-config\">\n              <EditConfig />\n            </Route>\n            <Route path=\"/\">\n              <ExperimentOverview />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}