{"version":3,"sources":["components/TactileButtonNotification.jsx","components/LogTable.jsx","components/ExperimentSummary.jsx","components/Chart.jsx","components/PioreactorIcon.jsx","components/UnderlineSpan.jsx","components/MediaCard.jsx","ExperimentOverview.jsx","ExportData.jsx","components/AutomationForm.jsx","components/ButtonChangeDosingDialog.jsx","components/ButtonChangeLEDDialog.jsx","components/ButtonChangeTemperatureDialog.jsx","components/ActionDosingForm.jsx","components/ActionLEDForm.jsx","Pioreactors.jsx","components/CleaningScript.jsx","components/StartSensors.jsx","components/StartCalculations.jsx","components/clearChartCommand.jsx","StartNewExperiment.jsx","EditConfig.jsx","Updates.jsx","Plugins.jsx","components/SideNavAndHeader.jsx","utilities.js","App.jsx","serviceWorker.js","index.js"],"names":["TactileButtonNotification","props","React","useState","unit","setUnit","renamedUnit","setRenamedUnit","open","setOpen","useEffect","config","client","remote","ws_url","Client","Math","random","connect","onSuccess","subscribe","join","qos","timeout","reconnect","onMessageArrived","msg","payloadString","topic","split","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","key","transitionDuration","enter","Alert","severity","variant","icon","AlertTitle","style","fontSize","levelMappingToOrdinal","NOTSET","DEBUG","INFO","WARNING","ERROR","CRITICAL","LogTable","state","listOfLogs","onConnect","bind","this","experiment","fetch","encodeURIComponent","URLSearchParams","min_level","logging","ui_log_level","then","response","json","data","setState","catch","e","console","log","getData","prevProps","message","length","pop","payload","JSON","parse","level","unshift","timestamp","moment","utc","format","pioreactor_unit","task","is_error","is_warning","name","classes","Card","CardContent","Typography","component","Box","fontWeight","TableContainer","height","width","overflowY","Table","stickyHeader","size","aria-label","TableHead","TableRow","TableCell","className","clsx","headerCell","TableBody","map","i","tightCell","smallText","errorLog","warningLog","title","local","renameUnit","replace","Component","withStyles","theme","padding","backgroundColor","tightRight","textAlign","useStyles","makeStyles","cardContent","pos","marginBottom","textIcon","verticalAlign","margin","EditableDescription","handleChange","evt","desc","target","value","method","body","stringify","description","headers","res","status","render","innerRef","contentEditable","html","disabled","onChange","onBlur","tagName","outline","createRef","ButtonConfirmNewExperimentDialog","handleClose","Fragment","Button","textTransform","float","color","onClick","Dialog","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","href","autoFocus","ButtonConfirmStopProcessDialog","ExperimentSummary","experimentMetadata","startedAt","deltaHours","delta_hours","display","justifyContent","marginRight","Divider","root","colors","primary","0","1","2","3","colorMaps","getColorFromName","sensorRe","test","match","newPallete","shift","Chart","createToolTip","d","datum","x","renameAndFormatSeries","childName","round","y","seriesMap","hiddenSeries","Set","names","legendEvents","fetched","selectLegendData","selectVictoryLines","dataSource","filter_mod_N","max","floor","min","lookback","initialSeriesMap","entries","v","item","Object","keys","createLegendEvents","idx","eventKey","String","eventHandlers","mutation","delete","add","retained","parseFloat","payloadKey","isODReading","push","newSeriesMap","error","string","slice","results","index","sensor","breakString","line","symbol","fill","has","interpolation","labels","stroke","strokeWidth","parent","border","VictoryVoronoiContainer","createContainer","maxHeight","domainPadding","left","right","bottom","top","events","responsive","scale","VictoryTheme","material","containerComponent","voronoiBlacklist","labelComponent","cornerRadius","flyoutStyle","text","textAnchor","fontFamily","tickLabels","offsetY","orientation","crossAxis","dependentAxis","domain","yAxisDomain","tickFormat","yAxisTickFormat","label","yAxisLabel","axisLabelComponent","dy","symbolSpacer","itemsPerRow","borderPadding","cursor","gutter","rowGutter","PioreactorIcon","SvgIcon","fillColor","fillRule","transform","cx","cy","r","UnderlineSpan","underlineSpan","children","MediaCard","mediaThroughputPerUnit","altMediaThroughputPerUnit","mediaThroughput","altMediaThroughput","rates","all","mediaRate","altMediaRate","activeUnits","prevState","getRecentRates","filter","hash","object","hasOwnProperty","topicParts","destinationName","objectRef","totalRef","addOrUpdate","total","values","reduce","a","b","align","scope","toFixed","getRenameIfAvailable","Overview","setExperimentMetadata","document","getLatestExperiment","Grid","container","spacing","justify","xs","md","t","marginTop","formControl","caption","marginLeft","maxWidth","ExperimentSelection","experiments","setExperiments","FormControl","Select","native","inputProps","CheckboxesGroup","FormLabel","FormGroup","FormControlLabel","control","Checkbox","checked","isChecked","growth_rates","gutterBottom","od_readings_raw","od_readings_filtered","temperature_readings","alt_media_fraction","dosing_events","dosing_automation_settings","led_events","led_automation_settings","temperature_automation_settings","kalman_filter_outputs","logs","ExportDataContainer","isRunning","setIsRunning","isError","setIsError","errorMsg","setErrorMsg","experimentSelection","datasetCheckbox","runningFeedback","CircularProgress","errorFeedbackOrDefault","event","type","preventDefault","some","link","createElement","filename","setAttribute","appendChild","click","remove","rel","ExportData","textFieldCompact","AutomationForm","defaults","assign","fields","field","default","updateParent","onSettingsChange","listOfTextField","TextField","defaultValue","InputProps","endAdornment","InputAdornment","position","unitTitle","unitTitleDialog","suptitle","ButtonChangeDosingDialog","dosing_automation","skip_first_run","algoSettings","setAlgoSettings","isClicked","setIsClicked","setClient","automations","setAutomations","ok","Error","listOfAuto","auto","fetchDosingAutomations","currentDosingAutomation","PaperProps","setting","Message","publish","ButtonChangeLEDDialog","led_automation","fetchLEDAutomations","currentLEDAutomation","ButtonChangeTemperatureDialog","temperature_automation","fetchTemperatureAutomations","currentTemperatureAutomation","actionTextField","actionForm","actionToAct","ActionPumpForm","mL","setML","duration","setDuration","isMLDisabled","setIsMLDisabled","isDurationDisabled","setIsDurationDisabled","openSnackbar","setOpenSnackbar","action","params","ml","source_of_event","continuously","ActionLEDForm","intensity","setIntensity","channel","pioreactorCard","disabledText","textbox","textboxLabel","footnote","textField","textFieldWide","slider","divider","jobButton","paddingRight","paddingLeft","unitSettingsSubtext","unitSettingsSubtextEmpty","minHeight","ledBlock","rowOfUnitSettingDisplay","flexDirection","flexWrap","alignItems","alignContent","TabPanel","other","role","hidden","UnitSettingDisplaySubtext","subtext","UnitSettingDisplay","stateDisplay","isStateSetting","isUnitActive","displaySettings","isLEDIntensity","ledIntensities","LEDMap","renamedA","renamedB","renamedC","renamedD","precision","measurementUnit","AddNewPioreactor","snackbarOpen","setSnackbarOpen","setName","startAdornment","newPioreactorName","stderr","PioreactorHeader","SettingsActionsDialogAll","PatientButton","buttonText","setButtonText","disableElevation","CalibrateDialog","tabValue","setTabValue","startPioreactorJob","job","blankODButton","jobState","createUserButtonsBasedOnState","odBlankJobState","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","stirringJobState","odBlankReading","k","SettingsActionsDialog","snackbarMessage","setSnackbarMessage","setPioreactorJobState","setPioreactorJobAttr","stopPioreactorJob","job_attr","setPioreactorJobAttrOnEnter","buttons","fromEntries","jobs","job_key","metadata","source","dangerouslySetInnerHTML","__html","onKeyPress","dosing_control","led_control","temperature_control","resumeHideDuration","setJobs","listOfJobs","jobs_","metaData_","job_name","prev","sendMessage","setTimeout","toLowerCase","ActiveUnits","units","PioreactorCard","FlashLEDButton","flashing","setFlashing","blinkled","fetchComplete","setFetchComplete","monitor","parsedFloat","isNaN","endsWith","indicatorDotColor","indicatorDotShadow","indicatorLabel","Tooltip","placement","boxShadow","mean","InactiveUnits","Pioreactors","button","actionsContainer","resetContainer","divInstructions","CycleLiquid","liquid","additionalMsg","duty_cycle","MediaFlush","isAlt","altMedia","AddFinalVolumeOfMedia","VerticalLinearStepper","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","Step","StepLabel","StepContent","step","getStepContent","Paper","square","elevation","StartStirringButton","StartODReading","StartSensors","direction","fontScale","StartGrowthRate","StartCalculations","setExperiment","clearChartCommand","publishCallback","onMessageDelivered","jobName","instructions","halfTextField","ExperimentSummaryForm","formError","setFormError","helperText","setHelperText","expName","setExpName","setTimestamp","setDescription","required","InputLabelProps","shrink","rowsMax","placeholder","multiline","fullWidth","trim","toISOString","publishExpNameToMQTT","StartNewExperimentContainer","skipped","setSkipped","isStepOptional","optional","isStepSkipped","window","location","newSkipped","scrollTo","content","stepProps","labelProps","completed","prevSkipped","StartNewExperiment","EditableCodeDiv","onSelectionChange","getConfig","getCodeFlaskRef","codeFlask","onTextChange","code","hasChangedSinceSave","handleSnackbarClose","snackbarMsg","availableConfigs","saveCurrentCode","deleteConfig","reload","getListOfConfigFiles","letterSpacing","editorRef","language","EditConfigContainer","EditConfig","ConfirmDialog","PageHeader","version","setVersion","latestVersion","setLatestVersion","getCurrentApp","getLatestVersion","Link","underline","ChangelogContainer","changelog","setChangelog","Updates","pluginList","secondaryActionButton","ListAvailablePlugins","alreadyInstalledPluginsNames","List","dense","homepage","plugin","includes","ListItem","ListItemAvatar","Avatar","ListItemText","secondary","ListItemSecondaryAction","plugin_name","endIcon","ListInstalledPlugins","installedPlugins","PluginContainer","setInstalledPlugins","Plugins","drawer","breakpoints","up","flexShrink","menuButton","drawerPaper","appBar","zIndex","flexGrow","appBarRoot","hiddenIconContainer","hiddenIcon","listItemIcon","minWidth","SideNavAndHeader","mobileOpen","setMobileOpen","handleDrawerToggle","isSelected","path","pathname","list","drawerContainer","selected","ListItemIcon","primaryTypographyProps","Badge","invisible","AppBar","Toolbar","IconButton","edge","alt","src","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","keepMounted","xsDown","parseINIString","regex","section","param","comment","lines","forEach","createMuiTheme","palette","background","main","App","setConfig","CssBaseline","paddingTop","ExperimentOverview","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gVA6EeA,MAvEf,SAAmCC,GAAQ,IAAD,EAClBC,IAAMC,SAAS,IADG,mBACnCC,EADmC,KAC7BC,EAD6B,OAEJH,IAAMC,SAAS,IAFX,mBAEnCG,EAFmC,KAEtBC,EAFsB,OAGlBL,IAAMC,UAAS,GAHG,mBAGnCK,EAHmC,KAG7BC,EAH6B,KAuDxC,OAlDAP,IAAMQ,WAAU,WACd,GAAKT,EAAMU,OAAO,oBAAlB,CAIA,IA4BIC,GAEFA,EADEX,EAAMU,OAAOE,QAAUZ,EAAMU,OAAOE,OAAOC,OACpC,IAAIC,SAAJ,eACCd,EAAMU,OAAOE,OAAOC,OADrB,KAEP,kCAAoCE,KAAKC,UAGlC,IAAIF,SAAJ,UACJd,EAAMU,OAAO,oBAAb,gBAAsD,KACzD,kCAAoCK,KAAKC,WAGtCC,QAAQ,CAACC,UAzBE,WAChBP,EAAOQ,UACP,CACE,aACA,IACA,cACA,UACA,eACAC,KAAK,KACP,CAAEC,IAAK,KAgB6BC,QAAS,IAAKC,WAAW,IAC/DZ,EAAOa,iBAzCkB,SAACC,GACxB,GAA0B,MAAtBA,EAAIC,cAAsB,CAC5B,IAAIvB,EAAOsB,EAAIE,MAAMC,MAAM,KAAK,GAChCxB,EAAQD,GACR,IACEG,EAAeN,EAAMU,OAAO,aAAaP,IAE3C,UACAK,GAAQ,QAGRA,GAAQ,OAgCZ,CAACR,EAAMU,SAGP,kBAACmB,EAAA,EAAD,CACEtB,KAAMA,EACNuB,iBAAkB,KAClBC,QAAS,aACTC,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/CC,IAAK,0BACLC,mBAAoB,CAACC,MAAO,KAE9B,kBAACC,EAAA,EAAD,CAAOC,SAAS,OAAOC,QAAQ,SAASC,MAAM,GAC5C,kBAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,SAAU,KAAMzC,GAAQE,EAAc,MAAQA,EAAc,KADlF,WAEU,2BAAIF,GAFd,oB,4LC5BE0C,EAAwB,CAC5BC,OAAQ,EACRC,MAAO,EACPC,KAAM,EACNC,QAAS,EACTC,MAAO,EACPC,SAAU,GAINC,E,kDACJ,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IACDqD,MAAQ,CAACC,WAAY,IAC1B,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKhC,iBAAmB,EAAKA,iBAAiBgC,KAAtB,gBAJP,E,8KAQZC,KAAKzD,MAAM0D,W,iEAGVC,MAAM,gBAAkBC,mBAAmBH,KAAKzD,MAAM0D,YAAc,IAAM,IAAIG,gBAAgB,CAChGC,UAAWL,KAAKzD,MAAMU,OAAOqD,QAAQC,gBAEtCC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAACf,WAAYc,OAC1BE,OAAM,SAACC,GACRC,QAAQC,IAAIF,M,gJAKhBd,KAAKiB,UACDjB,KAAKzD,MAAMU,OAAOE,QAAU6C,KAAKzD,MAAMU,OAAOE,OAAOC,OACvD4C,KAAK9C,OAAS,IAAIG,SAAJ,eACJ2C,KAAKzD,MAAMU,OAAOE,OAAOC,OADrB,KAEZ,iBAAmBE,KAAKC,UAG1ByC,KAAK9C,OAAS,IAAIG,SAAJ,UACT2C,KAAKzD,MAAMU,OAAO,oBAAlB,gBAA2D,KAC9D,iBAAmBK,KAAKC,UAG5ByC,KAAK9C,OAAOM,QAAQ,CAACK,QAAS,IAAK,UAAamC,KAAKF,UAAWhC,WAAW,IAC3EkC,KAAK9C,OAAOa,iBAAmBiC,KAAKjC,mB,yCAGnBmD,GACZA,EAAUjB,aAAeD,KAAKzD,MAAM0D,YACvCD,KAAKiB,Y,kCAKLjB,KAAK9C,OAAOQ,UAAU,CAAC,aAAc,IAAKsC,KAAKzD,MAAM0D,WAAY,OAAQ,KAAKtC,KAAK,MACnFqC,KAAK9C,OAAOQ,UAAU,CAAC,aAAc,IAAK,cAAuB,OAAQ,KAAKC,KAAK,Q,uCAGtEwD,GACXnB,KAAKJ,MAAMC,WAAWuB,OAAS,IACjCpB,KAAKJ,MAAMC,WAAWwB,MAExB,IAAM3E,EAAOyE,EAAQjD,MAAMC,MAAM,KAAK,GAChCmD,EAAUC,KAAKC,MAAML,EAAQlD,eAE/BmB,EAAsBkC,EAAQG,OAASrC,EAAsBY,KAAKzD,MAAMU,OAAOqD,QAAQC,gBAI3FP,KAAKJ,MAAMC,WAAW6B,QACpB,CAACC,UAAWC,IAAOC,MAAMC,OAAO,kCAAmCC,gBAAiBrF,EAAMyE,QAASG,EAAQH,QAASa,KAAMV,EAAQU,KAAMC,SAA6B,UAAlBX,EAAQG,MAAoBS,WAA+B,YAAlBZ,EAAQG,QAEtMzB,KAAKY,SAAS,CACZf,WAAYG,KAAKJ,MAAMC,gB,iCAIhBsC,GACT,OAAKnC,KAAKzD,MAAMU,OAAO,cAGf+C,KAAKzD,MAAMU,OAAO,aAAakF,IAF9BA,I,+BAKF,IAAD,OACEC,EAAYpC,KAAKzD,MAAjB6F,QACR,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,qBAAhB,sBAIF,kBAACC,EAAA,EAAD,CAAgBzD,MAAO,CAAE0D,OAAQ,QAASC,MAAO,OAAQC,UAAW,WAClE,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,KAAK,QAAQC,aAAW,aACzC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,UAAWC,YAAKnB,EAAQoB,aAAnC,QACA,kBAACH,EAAA,EAAD,CAAWC,UAAWC,YAAKnB,EAAQoB,aAAnC,cACA,kBAACH,EAAA,EAAD,CAAWC,UAAWC,YAAKnB,EAAQoB,aAAnC,UACA,kBAACH,EAAA,EAAD,CAAWC,UAAWC,YAAKnB,EAAQoB,aAAnC,aAIJ,kBAACC,EAAA,EAAD,KACGzD,KAAKJ,MAAMC,WAAW6D,KAAI,SAAC1C,EAAK2C,GAAN,mBACzB,kBAACP,EAAA,EAAD,CAAU1E,IAAKiF,GACb,kBAACN,EAAA,EAAD,CAAWC,UAAWC,YAAKnB,EAAQwB,UAAWxB,EAAQyB,WAA5B,mBAAyCzB,EAAQ0B,SAAW9C,EAAIiB,UAAhE,cAA2EG,EAAQ2B,WAAa/C,EAAIkB,YAApG,KACxB,0BAAM8B,MAAOpC,IAAOC,IAAIb,EAAIW,UAAW,kCAAkCsC,QAAQnC,OAAO,2BAA4BF,IAAOC,IAAIb,EAAIW,UAAW,kCAAkCsC,QAAQnC,OAAO,YAA/L,MAEF,kBAACuB,EAAA,EAAD,CAAWC,UAAWC,YAAKnB,EAAQwB,UAAWxB,EAAQyB,WAA5B,mBAAyCzB,EAAQ0B,SAAW9C,EAAIiB,UAAhE,cAA2EG,EAAQ2B,WAAa/C,EAAIkB,YAApG,KAA1B,IAA8I,EAAKgC,WAAWlD,EAAIe,kBAClK,kBAACsB,EAAA,EAAD,CAAWC,UAAWC,YAAKnB,EAAQwB,UAAWxB,EAAQyB,WAA5B,mBAAyCzB,EAAQ0B,SAAW9C,EAAIiB,UAAhE,cAA2EG,EAAQ2B,WAAa/C,EAAIkB,YAApG,KAAmHlB,EAAIgB,KAAKmC,QAAQ,KAAM,MACpK,kBAACd,EAAA,EAAD,CAAWC,UAAWC,YAAKnB,EAAQwB,UAAWxB,EAAQyB,WAA5B,mBAAyCzB,EAAQ0B,SAAW9C,EAAIiB,UAAhE,cAA2EG,EAAQ2B,WAAa/C,EAAIkB,YAApG,KAAmHlB,EAAIG,sB,GA5G9I3E,IAAM4H,WA0HdC,eA3JG,SAAAC,GAAK,MAAK,CAC1BV,UAAW,CACTW,QAAS,oBACTpF,SAAU,IAEZ0E,UAAW,CACT1E,SAAU,IAEZqE,WAAY,CACVgB,gBAAiB,QACjBD,QAAS,mBAEXE,WAAY,CACVC,UAAW,SAEbZ,SAAU,CACRU,gBAAiB,WAEnBT,WAAY,CACVS,gBAAiB,cAwINH,CAAsB1E,G,yLCvJ/BgF,GAAYC,YAAW,CAC3BZ,MAAO,CACL7E,SAAU,IAEZ0F,YAAa,CACXN,QAAS,QAEXO,IAAK,CACHC,aAAc,GAEhBC,SAAU,CACR7F,SAAU,GACV8F,cAAe,SACfC,OAAQ,aAMNC,G,kDACJ,WAAY5I,GAAQ,IAAD,8BACjB,cAAMA,IAaR6I,aAAe,SAAAC,GAEb,OADA,EAAKzE,SAAS,CAAC0E,KAAMD,EAAIE,OAAOC,QACzBtF,MAAM,yBAA0B,CACnCuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAAC1F,WAAa,EAAK1D,MAAM0D,WAAY2F,YAAaP,EAAIE,OAAOC,QAClFK,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEjBrF,MAAK,SAAAsF,GACa,MAAfA,EAAIC,QACNhF,QAAQC,IAAI,mBAzBD,EA+BnBgF,OAAS,WACP,OACE,yBAAK9G,MAAO,CAACqF,QAAS,oBACpB,kBAAC9B,EAAA,EAAD,CAAKC,WAAW,kBAAhB,gBAGA,kBAAC,IAAD,CACIuD,SAAU,EAAKC,gBACfC,KAAM,EAAKvG,MAAM0F,KACjBc,UAAU,EACVC,SAAU,EAAKjB,aACfkB,OAAQ,EAAKA,OACbC,QAAQ,IACRrH,MAAO,CAACqF,QAAS,kBAAmBiC,QAAS,YA1CrD,EAAKN,gBAAkB1J,IAAMiK,YAC7B,EAAK7G,MAAQ,CACX0F,KAAM,IAJS,E,+DAQApE,GACblB,KAAKzD,MAAMqJ,cAAgB1E,EAAU0E,aACvC5F,KAAKY,SAAS,CAAC0E,KAAMtF,KAAKzD,MAAMqJ,kB,GAXJpJ,IAAM4H,WAqDxC,SAASsC,KACP,IAAMtE,EAAUuC,KAD0B,EAElBnI,IAAMC,UAAS,GAFG,mBAEnCK,EAFmC,KAE7BC,EAF6B,KAQpC4J,EAAc,WAClB5J,GAAQ,IAGV,OACE,kBAAC,IAAM6J,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQ3H,MAAO,CAAC4H,cAAe,OAAQC,MAAO,SAAUC,MAAM,UAAUC,QAVpD,WACtBlK,GAAQ,KAUJ,kBAAC,KAAD,CAASuG,UAAWlB,EAAQ4C,WAD9B,mBAGA,kBAACkC,GAAA,EAAD,CACEpK,KAAMA,EACNwB,QAASqI,EACTQ,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBAAhB,6BACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBF,GAAG,4BAAtB,4GAIF,kBAACG,GAAA,EAAD,KACE,kBAACZ,EAAA,EAAD,CAAQa,KAAK,wBAAwBV,MAAM,WAA3C,WAGA,kBAACH,EAAA,EAAD,CAAQI,QAASN,EAAaK,MAAM,YAAYW,WAAS,GAAzD,aASV,SAASC,KACP,IAAMxF,EAAUuC,KADwB,EAEhBnI,IAAMC,UAAS,GAFC,mBAEjCK,EAFiC,KAE3BC,EAF2B,KAalC4J,EAAc,WAClB5J,GAAQ,IAGV,OACE,kBAAC,IAAM6J,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQ3H,MAAO,CAAC4H,cAAe,OAAQC,MAAO,SAAUC,MAAM,UAAUC,QAfpD,WACtBlK,GAAQ,KAeJ,kBAAC,KAAD,CAAWuG,UAAWlB,EAAQ4C,WADhC,mBAGA,kBAACkC,GAAA,EAAD,CACEpK,KAAMA,EACNwB,QAASqI,EACTQ,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBAAsB,mBACtC,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBF,GAAG,4BAAtB,uLAIF,kBAACG,GAAA,EAAD,KACE,kBAACZ,EAAA,EAAD,CAAQI,QA3BE,WAChB/G,MAAM,YAAa,CAACuF,OAAQ,SAC5BkB,KAyBkCK,MAAM,WAAlC,WAGA,kBAACH,EAAA,EAAD,CAAQI,QAASN,EAAaK,MAAM,YAAYW,WAAS,GAAzD,aA6DKE,OAnDf,SAA2BtL,GACzB,IAAM6F,EAAUuC,KACV1E,EAAa1D,EAAMuL,mBAAmB7H,YAAc,GACpD8H,EAAYxL,EAAMuL,mBAAmBnG,WAAaC,MAClD0D,EAAO/I,EAAMuL,mBAAmBlC,aAAe,GAC/CoC,EAAazL,EAAMuL,mBAAmBG,aAAe,EAE3D,OACE,kBAAC,IAAMrB,SAAP,KACE,6BACE,yBAAK1H,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,gBAAiBpD,aAAc,QAC3E,kBAACxC,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,kBACbzC,IAGL,6BACE,kBAAC4G,EAAA,EAAD,CAAQa,KAAK,eAAexI,MAAO,CAAC4H,cAAe,OAAQsB,YAAa,MAAOrB,MAAO,SAAUC,MAAM,WACpG,kBAAC,KAAD,CAAY1D,UAAWlB,EAAQ4C,WADjC,2BAGA,kBAAC4C,GAAD,MACA,kBAAClB,GAAD,QAIJ,kBAAC2B,EAAA,EAAD,MACA,kBAAC9F,EAAA,EAAD,CAAYxD,QAAQ,aAClB,kBAAC0D,EAAA,EAAD,CAAKC,WAAW,iBAAiBxD,MAAO,CAACgG,OAAQ,oBAAqBgD,QAAQ,iBAC5E,kBAAC,IAAD,CAAmBhJ,MAAO,CAAEC,SAAU,GAAI8F,cAAe,YAD3D,wBAGA,kBAACxC,EAAA,EAAD,CAAKC,WAAW,oBAAoBxD,MAAO,CAACkJ,YAAa,OAAQF,QAAQ,iBACvE,0BAAMlE,MAAOpC,IAAOmG,GAAWjG,OAAO,wBAAyBF,IAAOmG,GAAWjG,OAAO,wBAE1F,kBAACW,EAAA,EAAD,CAAKC,WAAW,iBAAiBxD,MAAO,CAACgJ,QAAQ,eAAgBhD,OAAQ,sBACvE,kBAAC,IAAD,CAAehG,MAAO,CAAEC,SAAU,GAAI8F,cAAe,YADvD,iBAGA,kBAACxC,EAAA,EAAD,CAAKC,WAAW,oBAAoBxD,MAAO,CAACgJ,QAAQ,iBAClDF,EADF,OAKJ,kBAAC3F,EAAA,EAAD,CAAMiB,UAAWlB,EAAQkG,MACvB,kBAACjG,EAAA,EAAD,CAAaiB,UAAWlB,EAAQyC,aAC9B,kBAAC,GAAD,CAAqB5E,WAAYA,EAAY2F,YAAaN,Q,4GCrN9DiD,GAAS,CACb,CAACC,QAAS,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,WAClE,CAACJ,QAAS,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,WAClE,CAACJ,QAAS,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,WAClE,CAACJ,QAAS,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,WAClE,CAACJ,QAAS,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,WAClE,CAACJ,QAAS,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,WAClE,CAACJ,QAAS,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,WAClE,CAACJ,QAAS,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,UAAWC,EAAG,YAG9DC,GAAY,GAElB,SAASC,GAAiB3G,GACxB,GAAIA,KAAQ0G,GACV,OAAOA,GAAU1G,GAGnB,IAAI4G,EAAW,cACf,GAAIA,EAASC,KAAK7G,GAEhB,OAAO2G,GADW3G,EAAK8G,MAAMF,GAAU,IAIvC,IAAIG,EAAaX,GAAOY,QAMxB,OALAN,GAAU1G,GAAQ+G,EAAWV,QAC7BK,GAAU1G,EAAO,MAAQ+G,EAAW,GACpCL,GAAU1G,EAAO,MAAQ+G,EAAW,GACpCL,GAAU1G,EAAO,MAAQ+G,EAAW,GACpCL,GAAU1G,EAAO,MAAQ+G,EAAW,GAC7BJ,GAAiB3G,G,IAmVbiH,G,kDA7Ub,WAAY7M,GAAQ,IAAD,8BACjB,cAAMA,IA2LR8M,cAAgB,SAACC,GACb,MAAM,GAAN,OAAUA,EAAEC,MAAMC,EAAE1H,OAAO,gBAA3B,aACJ,EAAK2H,sBAAsBH,EAAEC,MAAMG,WAD/B,aAC8CpM,KAAKqM,MAAkB,IAAZL,EAAEC,MAAMK,GAAY,MA5L/E,EAAKhK,MAAQ,CACXiK,UAAW,GACXC,aAAc,IAAIC,IAClBC,MAAO,GACPC,aAAc,GACdC,SAAS,GAEX,EAAKpK,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKhC,iBAAmB,EAAKA,iBAAiBgC,KAAtB,gBACxB,EAAKoK,iBAAmB,EAAKA,iBAAiBpK,KAAtB,gBACxB,EAAKqK,mBAAqB,EAAKA,mBAAmBrK,KAAxB,gBAZT,E,wDAiBjBC,KAAK9C,OAAOQ,UACV,CAAC,aAAc,IAAKsC,KAAKzD,MAAM0D,WAAYD,KAAKzD,MAAM2B,OAAOP,KAAK,Q,yCAInDuD,GACZA,EAAUjB,aAAeD,KAAKzD,MAAM0D,YACvCD,KAAKiB,Y,0CAKPjB,KAAKiB,UAEDjB,KAAKzD,MAAMU,OAAOE,QAAU6C,KAAKzD,MAAMU,OAAOE,OAAOC,OACvD4C,KAAK9C,OAAS,IAAIG,SAAJ,eACJ2C,KAAKzD,MAAMU,OAAOE,OAAOC,OADrB,KAEZ,cAAgBE,KAAKC,UAGvByC,KAAK9C,OAAS,IAAIG,SAAJ,UACT2C,KAAKzD,MAAMU,OAAO,oBAAlB,gBAA2D,KAC9D,cAAgBK,KAAKC,UAKzByC,KAAK9C,OAAOM,QAAQ,CAAEC,UAAWuC,KAAKF,UAAWhC,WAAW,IAC5DkC,KAAK9C,OAAOa,iBAAmBiC,KAAKjC,mB,wJAI/BiC,KAAKzD,MAAM0D,W,uDAGF,I,SACRC,MAAM,gBAAkBF,KAAKzD,MAAM8N,WAAa,IAAMrK,KAAKzD,MAAM0D,WAAa,IAAM,IAAIG,gBAAgB,CAC1GkK,aAAchN,KAAKiN,IAAIjN,KAAKkN,MAFlB,IAEgClN,KAAKmN,IAAIzK,KAAKzD,MAAMyL,WAAYhI,KAAKzD,MAAMmO,WAAY,GACjGA,SAAU1K,KAAKzD,MAAMmO,YAEtBlK,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,IADc,EACVgK,EAAmB,GADT,eAEOhK,EAAI,OAAWiK,WAFtB,IAEd,2BAA+C,CAAC,IAAD,yBAAnCjH,EAAmC,KAAhCkH,EAAgC,KACzClK,EAAI,KAASgD,GAAGvC,OAAS,IAC3BuJ,EAAiBE,GAAK,CACpBlK,KAAOA,EAAI,KAASgD,GAAID,KAAI,SAAAoH,GAAI,MAAK,CAAClB,EAAGkB,EAAKlB,EAAGJ,EAAG5H,IAAOC,IAAIiJ,EAAKtB,EAAG,6BAA6BvF,YACpG9B,KAAM0I,EACN7D,MAAO8B,GAAiB+B,MAPhB,8BAWd,IAAIb,EAAQe,OAAOC,KAAKL,GACxB,EAAK/J,SAAS,CACZiJ,UAAWc,EACXV,aAAc,EAAKgB,mBAAmBjB,GACtCA,MAAOA,EACPE,SAAS,OAGZrJ,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZ,EAAKF,SAAS,CAACsJ,SAAS,O,+IAIXF,GAAQ,IAAD,OACxB,OAAOA,EAAMtG,KAAI,SAACvB,EAAM+I,GACtB,MAAO,CACLxB,UAAW,CAAC,UACZnE,OAAQ,OACR4F,SAAUC,OAAOF,GACjBG,cAAe,CACbpE,QAAS,WACP,MAAO,CACL,CACEyC,UAAW,CAAC,QAAUvH,GACtBoD,OAAQ,OACR+F,SAAU,WAQR,OAPK,EAAK1L,MAAMkK,aAAayB,OAAOpJ,IAElC,EAAKvC,MAAMkK,aAAa0B,IAAIrJ,GAE9B,EAAKvB,SAAS,CACZkJ,aAAc,IAAIC,IAAI,EAAKnK,MAAMkK,gBAE5B,gB,uCAUN3I,GACf,GAAKnB,KAAKJ,MAAMsK,UAGZ/I,EAAQsK,UAIPtK,EAAQlD,cAAb,CAIA,IAAMqD,EAAUC,KAAKC,MAAML,EAAQlD,eAC7B0D,EAAYC,IAAOC,IAAIP,EAAQK,WAAWsC,QAC1CuB,EAAQkG,WAAWpK,EAAQtB,KAAKzD,MAAMoP,aAGxCjN,EAAMsB,KAAKzD,MAAMqP,YACjBzK,EAAQjD,MAAMC,MAAM,KAAK,GAAK,IAAMgD,EAAQjD,MAAMC,MAAM,KAAK,GAC7DgD,EAAQjD,MAAMC,MAAM,KAAK,GAE7B,IACE,GAAMO,KAAOsB,KAAKJ,MAAMiK,UAatB7J,KAAKJ,MAAMiK,UAAUnL,GAAKiC,KAAKkL,KAAK,CAClCrC,EAAG7H,EACHiI,EAAGpE,IAELxF,KAAKY,SAAS,CAAEiJ,UAAW7J,KAAKJ,MAAMiK,gBAjBL,CACjC,IAAMiC,EAAY,6BAAO9L,KAAKJ,MAAMiK,WAAlB,kBAA8BnL,EAAO,CACrDiC,KAAM,CAAC,CAAC6I,EAAG7H,EAAWiI,EAAGpE,IACzBrD,KAAMzD,EACNsI,MAAO8B,GAAiBpK,MAG1BsB,KAAKY,SAAS,CAAEiJ,UAAWiC,IAC3B9L,KAAKY,SAAS,CACZoJ,MAAM,GAAD,oBAAMhK,KAAKJ,MAAMoK,OAAjB,CAAwBtL,OAWnC,MAAOqN,GACLhL,QAAQC,IAAI+K,O,kCAKJC,GACV,OAAIA,EAAO5K,OAAS,GACX4K,EAAOC,MAAM,EAAG,GAAK,MAAQD,EAAOC,MAAMD,EAAO5K,OAAO,EAAG4K,EAAO5K,QAEpE4K,I,4CAGa7J,GACpB,IAAKnC,KAAKzD,MAAMU,OAAO,aACrB,OAAOkF,EAGT,GAAIA,EAAK8G,MAAM,kBAAkB,CAC/B,IAAMiD,EAAU/J,EAAK8G,MAAM,iBACrBkD,EAAQD,EAAQ,GAChBE,EAASF,EAAQ,GACvB,OAAOlM,KAAKqM,YAAYrM,KAAKzD,MAAMU,OAAO,aAAakP,IAAUA,GAAS,IAAMC,EAGhF,OAAOpM,KAAKqM,YAAYrM,KAAKzD,MAAMU,OAAO,aAAakF,IAASA,K,uCAYnDA,GACf,IAAKnC,KAAKJ,MAAMiK,UACd,MAAO,GAET,IAAMyC,EAAOtM,KAAKJ,MAAMiK,UAAU1H,GAC5B2I,EAAO,CACX3I,KAAMnC,KAAKyJ,sBAAsB6C,EAAKnK,MACtCoK,OAAQ,CAAEC,KAAMF,EAAKtF,QAEvB,OAAIhH,KAAKJ,MAAMkK,aAAa2C,IAAItK,GACvB,6BAAK2I,GAAZ,IAAkByB,OAAQ,CAAEC,KAAM,WAE7B1B,I,yCAGU3I,GACjB,IAAInC,KAAKJ,MAAMkK,aAAa2C,IAAItK,GAGhC,OACE,kBAAC,KAAD,CACEuK,cAAe1M,KAAKzD,MAAMmQ,cAC1BhO,IAAK,QAAUyD,EAAOnC,KAAKzD,MAAMyH,MACjC7B,KAAMA,EACNjD,MAAO,CACLyN,OAAQ,CAACH,KAAMxM,KAAKJ,MAAMiK,UAAU1H,GAAM6E,OAC1CrG,KAAM,CACJiM,OAAQ5M,KAAKJ,MAAMiK,UAAU1H,GAAM6E,MACnC6F,YAAa,GAEfC,OAAQ,CAAEC,OAAQ,mBAEpBpM,KAAMX,KAAKJ,MAAMiK,UAAU1H,GAAMxB,KACjC6I,EAAE,IACFI,EAAE,Q,+BAMN,IAAMoD,EAA0BC,aAAgB,WAChD,OACE,kBAAC5K,EAAA,EAAD,CAAMnD,MAAO,CAAEgO,UAAW,SACxB,kBAAC,KAAD,CACElJ,MAAOhE,KAAKzD,MAAMyH,MAClBmJ,cAAe,GACf5I,QAAS,CAAE6I,KAAM,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,IAAK,IACjDC,OAAQxN,KAAKJ,MAAMqK,aACnBwD,YAAY,EACZ5K,MAAO,IACPD,OAAQ,IACR8K,MAAO,CAAClE,EAAG,QACXlF,MAAOqJ,KAAaC,SACpBC,mBACE,kBAACb,EAAD,CACEc,iBAAkB,CAAC,UACnBnB,OAAQ3M,KAAKqJ,cACb0E,eACE,kBAAC,KAAD,CACEC,aAAc,EACdC,YAAa,CACXzB,KAAM,QACNI,OAAQ,UACRC,YAAa,UAOvB,kBAAC,KAAD,CACEqB,KAAMlO,KAAKzD,MAAMyH,MACjBwF,EAAG,IACHI,EAAG,GACHuE,WAAW,SACXjP,MAAO,CACLC,SAAU,GACViP,WAAY,aAGhB,kBAAC,KAAD,CACElP,MAAO,CACLmP,WAAY,CACVlP,SAAU,GACVoF,QAAS,EACT6J,WAAY,YAGhBE,QAAS,GACTC,YAAY,WAEd,kBAAC,KAAD,CACEC,WAAW,EACXC,eAAa,EACbC,OAAQ1O,KAAKzD,MAAMoS,YACnBC,WAAY5O,KAAKzD,MAAMsS,gBACvBC,MAAO9O,KAAKzD,MAAMwS,WAClBC,mBACE,kBAAC,KAAD,CACEC,IAAK,GACL/P,MAAO,CACLC,SAAU,GACVoF,QAAS,GACT6J,WAAY,aAIlBlP,MAAO,CACLmP,WAAY,CACVlP,SAAU,GACVoF,QAAS,EACT6J,WAAY,cAIlB,kBAAC,KAAD,CACE5E,EAAG,GACHI,EAAG,IACHsF,aAAc,EACdC,YAAa,EACbhN,KAAM,SACNiN,cAAe,CAAE/B,MAAO,GACxBkB,YAAY,aACZc,OAAQ,UACRC,OAAQ,GACRC,UAAW,EACXrQ,MAAO,CACLyN,OAAQ,CAAExN,SAAU,IACpBwB,KAAM,CAAEiM,OAAQ,UAAWC,YAAa,GAAK5J,KAAM,MAErDtC,KAAMX,KAAKJ,MAAMoK,MAAMtG,IAAI1D,KAAKmK,oBAEjCY,OAAOC,KAAKhL,KAAKJ,MAAMiK,WAAWnG,IAAI1D,KAAKoK,0B,GAvUlC5N,IAAM4H,W,UC9BXoL,OAff,SAAwBjT,GACtB,OACE,kBAACkT,GAAA,EAAYlT,EACT,uBAAG+K,GAAG,SAASsF,OAAO,OAAOC,YAAY,IAAIL,KAAMjQ,EAAMmT,WAAa,OAAQC,SAAS,WACnF,uBAAGrI,GAAG,oBAAoBsI,UAAU,uCAAuChD,OAAO,eAAeC,YAAY,OACzG,uBAAGvF,GAAG,aAAasI,UAAU,sCACzB,0BAAMtG,EAAE,sIAAsIhC,GAAG,mBACjJ,4BAAQA,GAAG,OAAOuI,GAAG,MAAMC,GAAG,OAAOC,EAAE,aCR3C,SAASC,GAAczT,GACrC,IAAMyH,EAAQzH,EAAMyH,MAEpB,OACE,0BAAMV,UAAWC,YAAK,CAAC0M,gBAAejM,IAAwBA,MAAOA,GAClEzH,EAAM2T,UCWb,IAmBMC,G,kDACJ,WAAY5T,GAAQ,IAAD,8BACjB,cAAMA,IACDqD,MAAQ,CACTwQ,uBAAwB,GACxBC,0BAA2B,GAC3BC,gBAAiB,EACjBC,mBAAoB,EACpBC,MAAO,CAACC,IAAK,CAACC,UAAW,EAAGC,aAAc,IAC1CC,YAAa,IAEjB,EAAK9Q,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKhC,iBAAmB,EAAKA,iBAAiBgC,KAAtB,gBAXP,E,qLAeZC,KAAKzD,MAAM0D,W,iEAITC,MAAM,uBAAyBC,mBAAmBH,KAAKzD,MAAM0D,aACnEO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKC,UAAS,SAAAiQ,GAAS,oCAASA,GAAT,IAAoBL,MAAO7P,U,gLAKnCO,GACZA,EAAUjB,aAAeD,KAAKzD,MAAM0D,YACvCD,KAAK8Q,mB,0CAKH9Q,KAAKzD,MAAMU,OAAOE,QAAU6C,KAAKzD,MAAMU,OAAOE,OAAOC,OACvD4C,KAAK9C,OAAS,IAAIG,SAAJ,eACJ2C,KAAKzD,MAAMU,OAAOE,OAAOC,OADrB,KAEZ,kBAAoBE,KAAKC,UAG3ByC,KAAK9C,OAAS,IAAIG,SAAJ,UACT2C,KAAKzD,MAAMU,OAAO,oBAAlB,gBAA2D,KAC9D,kBAAoBK,KAAKC,UAI7ByC,KAAK9C,OAAOM,QAAQ,CAACK,QAAS,IAAK,UAAamC,KAAKF,YACrDE,KAAK9C,OAAOa,iBAAmBiC,KAAKjC,iBACpCiC,KAAKY,SAAS,CAACgQ,YAAa7F,OAAOH,QAAQ5K,KAAKzD,MAAMU,OAAO,sBAAsB8T,QAAO,SAAClG,GAAD,MAAgB,MAATA,EAAE,MAAYnH,KAAI,SAACmH,GAAD,OAAOA,EAAE,QAC5H7K,KAAK8Q,mB,kCAKH9Q,KAAK9C,OAAOQ,UAAU,CAAC,aAAc,IAAKsC,KAAKzD,MAAM0D,WAAY,yBAA0B,wBAAwBtC,KAAK,MACxHqC,KAAK9C,OAAOQ,UAAU,CAAC,aAAc,IAAKsC,KAAKzD,MAAM0D,WAAY,yBAA0B,oBAAoBtC,KAAK,Q,kCAG5GqT,EAAMC,EAAQzL,GAOtB,OANIuF,OAAOmG,eAAeF,GACxBC,EAAOD,GAAQxL,EAAQyL,EAAOD,GAG9BC,EAAOD,GAAQxL,EAEVyL,I,uCAGM9P,GACf,IACMgQ,EADQhQ,EAAQiQ,gBACGjT,MAAM,KACzBmD,EAAUoK,WAAWvK,EAAQlD,eAC7BvB,EAAOyU,EAAW,GAClBE,EAAyC,yBAA5BF,EAAWlF,OAAO,GAAG,GAAkC,4BAA+B,yBACnGqF,EAAwC,yBAA5BH,EAAWlF,OAAO,GAAG,GAAkC,qBAAwB,kBAEjGjM,KAAKY,SAAL,eACGyQ,EAAYrR,KAAKuR,YAAY7U,EAAMsD,KAAKJ,MAAMyR,GAAY/P,KAG7D,IAAIkQ,EAAQzG,OAAO0G,OAAOzR,KAAKJ,MAAMyR,IAAYK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAEzE5R,KAAKY,SAAL,eACG0Q,EAAWE,M,2CAIK9U,GACnB,OAAQsD,KAAKzD,MAAMU,OAAO,cAAgB+C,KAAKzD,MAAMU,OAAO,aAAaP,GAASsD,KAAKzD,MAAMU,OAAO,aAAaP,GAAQA,I,+BAGlH,IAAD,OACN,OACA,kBAAC2F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,qBAAhB,WAIH,kBAACC,EAAA,EAAD,CAAgBzD,MAAO,CAAE2D,MAAO,SAC7B,kBAACE,EAAA,EAAD,CAAOE,KAAK,QAAQC,aAAW,oBAC7B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWnE,MAAO,CAACqF,QAAS,aAC5B,kBAAClB,EAAA,EAAD,CAAWnE,MAAO,CAACqF,QAAS,WAAYsN,MAAM,SAA9C,SACA,kBAACxO,EAAA,EAAD,CAAWnE,MAAO,CAACqF,QAAS,WAAYsN,MAAM,SAA9C,gBAGJ,kBAACpO,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CAAU1E,IAAI,OACZ,kBAAC2E,EAAA,EAAD,CAAWnE,MAAO,CAACqF,QAAS,WAAY/B,UAAU,KAAKsP,MAAM,OAA7D,mBAGA,kBAACzO,EAAA,EAAD,CAAWwO,MAAM,QAAQ3S,MAAO,CAAEC,SAAU,GAAIoF,QAAS,YAAavE,KAAKJ,MAAM0Q,gBAAgByB,QAAQ,GAAzG,QAAkH/R,KAAKJ,MAAM4Q,MAAMC,IAAIC,UAAUqB,QAAQ,GAAzJ,SACA,kBAAC1O,EAAA,EAAD,CAAWwO,MAAM,QAAQ3S,MAAO,CAAEC,SAAU,GAAIoF,QAAS,YAAavE,KAAKJ,MAAM2Q,mBAAmBwB,QAAQ,GAA5G,QAAqH/R,KAAKJ,MAAM4Q,MAAMC,IAAIE,aAAaoB,QAAQ,GAA/J,UAGD/R,KAAKJ,MAAMgR,YAAYlN,KAAI,SAAChH,GAAD,OAC1B,kBAAC0G,EAAA,EAAD,CAAU1E,IAAKhC,GACb,kBAAC2G,EAAA,EAAD,CAAWnE,MAAO,CAACqF,QAAS,WAAY/B,UAAU,KAAKsP,MAAM,OACzD,kBAAC,GAAD,CAAgB5S,MAAO,CAAEC,SAAU,GAAI8F,cAAe,UAAY+B,MAAM,YAD5E,IACwF,kBAACgJ,GAAD,CAAehM,MAAO,EAAKgO,qBAAqBtV,KAAUA,EAAO,KAAOA,GAAO,EAAKsV,qBAAqBtV,KAEjM,kBAAC2G,EAAA,EAAD,CAAWwO,MAAM,QAAQ3S,MAAO,CAAEC,SAAU,GAAIoF,QAAS,aAAc,EAAK3E,MAAMwQ,uBAAuB1T,IAAS,GAAGqV,QAAQ,GAA7H,QAAsI,EAAKnS,MAAM4Q,MAAM9T,GAAQ,EAAKkD,MAAM4Q,MAAM9T,GAAMgU,UAAUqB,QAAQ,GAAK,MAA7M,SACA,kBAAC1O,EAAA,EAAD,CAAWwO,MAAM,QAAQ3S,MAAO,CAAEC,SAAU,GAAIoF,QAAS,aAAc,EAAK3E,MAAMyQ,0BAA0B3T,IAAS,GAAGqV,QAAQ,GAAhI,QAAyI,EAAKnS,MAAM4Q,MAAM9T,GAAQ,EAAKkD,MAAM4Q,MAAM9T,GAAMiU,aAAaoB,QAAQ,GAAI,MAAlN,sB,GA/HMvV,IAAM4H,WA0IdC,gBA7JE,SAAAC,GAAK,MAAK,CAC1BV,UAAW,CACTW,QAAS,kBACTpF,SAAU,IAEZ0E,UAAW,CACT1E,SAAU,IAEZqE,WAAY,CACVgB,gBAAiB,QACjBD,QAAS,mBAEXE,WAAY,CACVC,UAAW,YAgJCL,CAAsB8L,IChBvB8B,OArJf,SAAkB1V,GAAQ,IAAD,EAE6BC,IAAMC,SAAS,IAF5C,mBAEhBqL,EAFgB,KAEIoK,EAFJ,KAmBvB,OAfA1V,IAAMQ,WAAU,WAAM,4CAEpB,sBAAA2U,EAAA,sEACWzR,MAAM,0BACZM,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLuR,EAAsBvR,MAN5B,4CAFoB,sBACpBwR,SAASnO,MAAQzH,EAAMyH,MADH,mCAWpBoO,KACC,CAAC7V,EAAMyH,QAIN,kBAAC,IAAM4C,SAAP,KACE,kBAACyL,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,iBAElC,kBAACH,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,IACrB,kBAAC,GAAD,CAAmB5K,mBAAoBA,KAIzC,kBAACuK,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,EAAGJ,WAAS,EAACC,QAAS,EAAGC,QAAQ,aAAatT,MAAO,CAAC0D,OAAQ,SAGhFrG,EAAMU,OAAO,uBAAwF,MAA9DV,EAAMU,OAAO,sBAAb,qBAC1C,kBAACoV,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC,GAAD,CACExV,OAAQV,EAAMU,OACdoN,WAAW,eACXrG,MAAM,sBACN9F,MAAM,sCACNyN,WAAW,cACXoD,WAAW,2BACX9O,WAAY6H,EAAmB7H,WAC/B+H,WAAYF,EAAmBG,YAC/ByE,cAAc,YACdiC,YAAa,EAAE,IAAM,IACrBjE,SAAU,IACVmE,gBAAiB,SAAC8D,GAAD,gBAAUA,EAAEZ,QAAQ,QAKtCxV,EAAMU,OAAO,uBAAiH,MAAvFV,EAAMU,OAAO,sBAAb,8CAC1C,kBAACoV,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC,GAAD,CACExV,OAAQV,EAAMU,OACd0R,YAAa,CAAC,EAAM,KACpBtE,WAAW,qBACXqC,cAAc,YACdf,WAAW,qBACX3H,MAAM,+CACN9F,MAAM,2CACN6Q,WAAW,WACX9O,WAAY6H,EAAmB7H,WAC/B+H,WAAY,EACZ6G,gBAAiB,SAAC8D,GAAD,gBAAUA,EAAEZ,QAAQ,KACrCrH,SAAU,OAKXnO,EAAMU,OAAO,uBAA+F,MAArEV,EAAMU,OAAO,sBAAb,4BAC1C,kBAACoV,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC,GAAD,CACExV,OAAQV,EAAMU,OACd2O,aAAa,EACbvB,WAAW,uBACXrG,MAAM,6BACN2H,WAAW,cACXzN,MAAM,wCACN6Q,WAAW,0BACX9O,WAAY6H,EAAmB7H,WAC/B+H,WAAYF,EAAmBG,YAC/ByE,cAAc,YACdhC,SAAUgB,WAAWnP,EAAMU,OAAO,wBAAb,4BACrB4R,gBAAiB,SAAC8D,GAAD,gBAAUA,EAAEZ,QAAQ,QAKtCxV,EAAMU,OAAO,uBAAwF,MAA9DV,EAAMU,OAAO,sBAAb,qBAC1C,kBAACoV,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC,GAAD,CACExV,OAAQV,EAAMU,OACd2O,aAAa,EACbvB,WAAW,kBACXrG,MAAM,kBACN2H,WAAW,UACXzN,MAAM,sBACN6Q,WAAW,UACX9O,WAAY6H,EAAmB7H,WAC/B+H,WAAYF,EAAmBG,YAC/ByE,cAAc,YACdhC,SAAUgB,WAAWnP,EAAMU,OAAO,wBAAb,uBACrB4R,gBAAiB,SAAC8D,GAAD,gBAAUA,EAAEZ,QAAQ,QAItCxV,EAAMU,OAAO,uBAAgF,MAAtDV,EAAMU,OAAO,sBAAb,aAC1C,kBAACoV,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC,GAAD,CACExV,OAAQV,EAAMU,OACdoN,WAAW,uBACXrG,MAAM,uBACN9F,MAAM,kCACN6Q,WAAW,sBACXpD,WAAW,cACX1L,WAAY6H,EAAmB7H,WAC/B+H,WAAYF,EAAmBG,YAC/ByE,cAAc,YACdhC,SAAU,IACViE,YAAa,CAAC,KAAM,MACpBE,gBAAiB,SAAC8D,GAAD,gBAAUA,EAAEZ,QAAQ,SAM3C,kBAACM,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,EAAGJ,WAAS,EAACC,QAAS,EAAGC,QAAQ,WAAWtT,MAAO,CAAC0D,OAAQ,SAG9ErG,EAAMU,OAAO,sBAA0E,MAAjDV,EAAMU,OAAO,qBAAb,SACvC,kBAACoV,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC,GAAD,CAAWxS,WAAY6H,EAAmB7H,WAAYhD,OAAQV,EAAMU,SACpE,kBAAC4J,EAAA,EAAD,CAAQa,KAAK,eAAeV,MAAM,UAAU9H,MAAO,CAAC4H,cAAe,OAAQ7B,cAAe,SAAUC,OAAQ,YAA5G,IAAyH,kBAAC,GAAD,CAAgBhG,MAAO,CAAEC,SAAU,IAAM6H,MAAM,YAAxK,iCAKDzK,EAAMU,OAAO,sBAA6E,MAApDV,EAAMU,OAAO,qBAAb,YACvC,kBAACoV,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC,EAAD,CAAUxS,WAAY6H,EAAmB7H,WAAYhD,OAAQV,EAAMU,YAM1EV,EAAMU,OAAO,aAAe,kBAAC,EAAD,CAA2BA,OAAQV,EAAMU,SAAY,O,gFCzIpF0H,GAAYC,cAAW,SAACN,GAAD,MAAY,CACvCgE,KAAM,CACJsK,UAAW,QAEbC,YAAa,CACX3N,OAAQZ,EAAMiO,QAAQ,IAExBvO,MAAO,CACL7E,SAAU,IAEZ0F,YAAa,CACXN,QAAS,QAEXO,IAAK,CACHC,aAAc,GAEhB+N,QAAS,CACPC,WAAY,OACZC,SAAU,aAMd,SAASC,GAAoB1W,GAC3B,IAAM6F,EAAUuC,KADkB,EAGInI,IAAMC,SAAS,CAAC,CAACwD,WAAY,uBAHjC,mBAG3BiT,EAH2B,KAGdC,EAHc,KAKlC3W,IAAMQ,WAAU,WAAM,4CACpB,sBAAA2U,EAAA,sEACWzR,MAAM,oBACZM,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLwS,GAAe,SAAAtC,GAAS,6BAASlQ,GAAT,aAAkBkQ,OAC1CtU,EAAM6I,aAAazE,EAAK,GAAGV,eAPjC,4CADoB,uBAAC,WAAD,wBAWlBgB,KACD,IAMH,OACE,yBAAKqC,UAAWlB,EAAQkG,MACtB,kBAAC8K,GAAA,EAAD,CAAa5Q,UAAU,WAAWc,UAAWlB,EAAQyQ,aAEnD,kBAACQ,GAAA,EAAD,CACEC,QAAM,EACN9N,MAAOjJ,EAAM0W,oBACb5M,SAXgC,SAACvF,GACvCvE,EAAM6I,aAAatE,EAAEyE,OAAOC,QAWtB+N,WAAY,CACVpR,KAAM,aACNmF,GAAI,eAGL4L,EAAYxP,KAAI,SAACmH,GAChB,OAAO,4BAAQrF,MAAOqF,EAAE5K,YAAa4K,EAAE5K,YAAe4K,EAAElJ,UAAF,oBAA2BC,IAAOiJ,EAAElJ,WAAWG,OAAO,gBAAtD,KAA2E,WAY7I,IAAM0R,GAAkB,SAACjX,GACvB,IAAM6F,EAAUuC,KAEhB,OACE,yBAAKrB,UAAWlB,EAAQkG,MACtB,kBAAC8K,GAAA,EAAD,CAAa5Q,UAAU,WAAWc,UAAWlB,EAAQyQ,aACnD,kBAACY,GAAA,EAAD,CAAWjR,UAAU,UAArB,YACA,kBAACkR,GAAA,EAAD,KAEE,kBAACC,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUC,aAAc3N,SAAU9J,EAAM6I,aAAcjD,KAAK,iBAC7F2M,MAAM,wBAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,kJAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUG,gBAAiB7N,SAAU9J,EAAM6I,aAAcjD,KAAK,oBAChG2M,MAAM,wBAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,sNAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUI,qBAAsB9N,SAAU9J,EAAM6I,aAAcjD,KAAK,yBACrG2M,MAAM,+BAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,iJAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUK,qBAAsB/N,SAAU9J,EAAM6I,aAAcjD,KAAK,yBACrG2M,MAAM,yBAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,wJAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUb,YAAa7M,SAAU9J,EAAM6I,aAAcjD,KAAK,gBAC5F2M,MAAM,wBAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,2DAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUM,mBAAoBhO,SAAU9J,EAAM6I,aAAcjD,KAAK,uBACnG2M,MAAM,+BAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,qLAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUO,cAAejO,SAAU9J,EAAM6I,aAAcjD,KAAK,kBAC9F2M,MAAM,qBAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,iIAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUQ,2BAA4BlO,SAAU9J,EAAM6I,aAAcjD,KAAK,+BAC3G2M,MAAM,gCAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,+KAKA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUS,WAAYnO,SAAU9J,EAAM6I,aAAcjD,KAAK,eAC3F2M,MAAM,kBAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,gIAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUU,wBAAyBpO,SAAU9J,EAAM6I,aAAcjD,KAAK,4BACxG2M,MAAM,6BAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,yKAKA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUW,gCAAiCrO,SAAU9J,EAAM6I,aAAcjD,KAAK,oCAChH2M,MAAM,qCAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,yLAKA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUY,sBAAuBtO,SAAU9J,EAAM6I,aAAcjD,KAAK,0BACtG2M,MAAM,0BAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,mKAIA,kBAACN,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAASvX,EAAMwX,UAAUa,KAAMvO,SAAU9J,EAAM6I,aAAcjD,KAAK,SACrF2M,MAAM,oBAER,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,UAAUuE,UAAWlB,EAAQ0Q,QAASmB,cAAY,GAAtE,+QAWV,SAASY,KACP,IAAMzS,EAAUuC,KADa,EAEKnI,IAAMC,UAAS,GAFpB,mBAEtBqY,EAFsB,KAEXC,EAFW,OAGCvY,IAAMC,UAAS,GAHhB,mBAGtBuY,EAHsB,KAGbC,EAHa,OAIGzY,IAAMC,SAAS,IAJlB,mBAItByY,EAJsB,KAIZC,EAJY,OAKH3Y,IAAMC,SAAS,CACvC2Y,oBAAqB,GACrBC,gBAAiB,CACfrB,cAAc,EACdM,eAAe,EACfE,YAAY,EACZtB,aAAa,EACbgB,iBAAiB,EACjBC,sBAAsB,EACtBS,MAAM,EACNP,oBAAoB,EACpBE,4BAA4B,EAC5BE,yBAAyB,EACzBC,iCAAiC,EACjCC,uBAAuB,EACvBP,sBAAsB,KApBG,mBAKtBxU,EALsB,KAKfgB,EALe,KAwE7B,IAAM0U,EAAkBR,EAAY,kBAACS,GAAA,EAAD,CAAkBvO,MAAM,QAAQ/D,KAAM,KAAQ,SAC5EuS,EAAyBR,EAAU,kBAACvS,EAAA,EAAD,CAAKuE,MAAM,cAAckO,GAAiB,GACnF,OACE,kBAAC,IAAMtO,SAAP,KACE,6BACE,6BACE,kBAACrE,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,kBAAhB,6BAON,kBAACL,EAAA,EAAD,CAAMiB,UAAWlB,EAAQkG,MAEvB,kBAACjG,EAAA,EAAD,CAAaiB,UAAWlB,EAAQyC,aAC9B,8BACE,kBAACwN,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,IACrB,kBAACO,GAAD,CACAmC,oBAAqBxV,EAAMwV,oBAC3BhQ,aA7Bd,SAAyCI,GACvC5E,GAAS,SAAAiQ,GAAS,oCACbA,GADa,IAEhBuE,oBAAqB5P,WA6Bb,kBAAC6M,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,IACrB,kBAAC,GAAD,CACAqB,UAAWnU,EAAMyV,gBACjBjQ,aA1Ce,SAACqQ,GAC5B7U,GAAS,SAAAiQ,GAAS,oCACbA,GADa,IAEhBwE,gBAAgB,6BAAKzV,EAAMyV,iBAAZ,kBAA8BI,EAAMlQ,OAAOpD,KAAOsT,EAAMlQ,OAAOuO,mBA2CtE,kBAACzB,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACf,kBAACJ,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC5L,EAAA,EAAD,CACE6O,KAAK,SACL3W,QAAQ,YACRiI,MAAM,UACNC,QAtFC,SAACwO,GAGhB,GAFAA,EAAME,kBAED5K,OAAO0G,OAAO7R,EAAK,iBAAqBgW,MAAK,SAAC9U,GAAD,OAAOA,KAGvD,OAFAmU,GAAW,QACXE,EAAY,0CAIdJ,GAAa,GACb7U,MAAM,kBAAkB,CACpBuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU/F,GACrBiG,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEnBrF,MAAK,SAAAsF,GAAG,OAAIA,EAAIpF,UAChBF,MAAK,SAAAsF,GACN,IAAI+P,EAAO1D,SAAS2D,cAAc,KAC5BC,EAAWjQ,EAAG,SAAa3B,QAAQ,KAAM,OAC/C0R,EAAKG,aAAa,SAAUD,GAC5BF,EAAKnO,KAAO,mBAAqBqO,EACjC5D,SAASzM,KAAKuQ,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SACLpB,GAAa,MACZlU,OAAM,SAAAC,GACPiU,GAAa,GACbE,GAAW,GACXE,EAAY,0CAyDAjW,MAAO,CAAC2D,MAAO,QAASkQ,WAAY,KAEnCuC,GAEH,uBAAGpW,MAAO,CAAC6T,WAAY,KAAMyC,IAG/B,kBAACnD,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,uBAAGvT,MAAO,CAACwF,UAAW,SAAUkO,UAAW,SAA3C,iCAAwE,uBAAGlL,KAAK,8CAA8CnC,OAAO,SAAS6Q,IAAI,uBAA1E,kBAAxE,WAwBDC,OAbf,SAAoB9Z,GAIhB,OAHAC,IAAMQ,WAAU,WACdmV,SAASnO,MAAQzH,EAAMyH,QACtB,CAACzH,EAAMyH,QAEN,kBAACqO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC4H,GAAI,GAAID,GAAI,IACrB,kBAACoC,GAAD,S,2HC3VNlQ,GAAYC,aAAW,SAACN,GAAD,MAAY,CACvCgS,iBAAkB,CAChB1D,UAAWtO,EAAMiO,QAAQ,GACzBnK,YAAa9D,EAAMiO,QAAQ,GAC3BxN,aAAcT,EAAMiO,QAAQ,GAC5B1P,MAAO,YAwCI0T,OAlCf,SAAwBha,GACtB,IAAM6F,EAAUuC,KACV6R,EAAWzL,OAAO0L,OAAP,MAAA1L,OAAM,CAAQ,IAAR,oBAAexO,EAAMma,OAAOhT,KAAI,SAAAiT,GAAK,sBAAOA,EAAMjY,IAAMiY,EAAMC,eAErF5Z,qBAAU,WACRT,EAAMsa,aAAaL,KAClB,CAACja,EAAMma,SAEV,IAAMI,EAAmB,SAAChW,GACxBvE,EAAMsa,aAAN,eAAqB/V,EAAEyE,OAAO+B,GAAKxG,EAAEyE,OAAOC,SAE1CuR,EAAkBxa,EAAMma,OAAOhT,KAAI,SAAAiT,GAAK,OACtC,kBAACK,GAAA,EAAD,CACE/T,KAAK,QACLqE,GAAIqP,EAAMjY,IACVA,IAAKiY,EAAMjY,IACXoQ,MAAO6H,EAAM7H,MACbmI,aAAcN,EAAMC,QACpBM,WAAY,CACVC,aAAc,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAOV,EAAMja,OAEtDqC,QAAQ,WACRsH,SAAUyQ,EACVxT,UAAWlB,EAAQkU,sBAI3B,OACI,6BACGS,IC3BHpS,GAAYC,aAAW,SAACN,GAAD,MAAY,CAEvCuO,YAAa,CACXD,UAAWtO,EAAMiO,QAAQ,IAE3B+E,UAAW,CACTnY,SAAU,GACV6H,MAAO,uBAETuQ,gBAAiB,CACfpY,SAAU,GACV6H,MAAO,uBAETwQ,SAAU,CACRrY,SAAU,OACV6H,MAAO,2BAuKIyQ,OAhKf,SAAkClb,GAChC,IAAM6F,EAAUuC,KACV1H,EAASV,EAAMU,OAFkB,EAGfR,oBAAS,GAHM,mBAGhCK,EAHgC,KAG1BC,EAH0B,OAICN,mBAAS,CAACib,kBAAmB,SAAUC,gBAAgB,IAJxD,mBAIhCC,EAJgC,KAIlBC,EAJkB,OAKLpb,oBAAS,GALJ,mBAKhCqb,EALgC,KAKrBC,EALqB,OAMXtb,mBAAS,MANE,mBAMhCS,EANgC,KAMxB8a,EANwB,OAODvb,mBAAS,IAPR,mBAOhCwb,EAPgC,KAOnBC,EAPmB,KA8FvC,OApFAlb,qBAAU,WAAM,4CACd,sBAAA2U,EAAA,sEACQzR,MAAM,+BACTM,MAAK,SAACC,GACH,GAAIA,EAAS0X,GACX,OAAO1X,EAASC,OAEhB,MAAM,IAAI0X,MAAM,2BAGrB5X,MAAK,SAAC6X,GACLH,EAAenN,OAAO0L,OAAP,MAAA1L,OAAM,CAAQ,IAAR,oBAAesN,EAAW3U,KAAI,SAAA4U,GAAI,sBAAQA,EAAK5Z,IAAM4Z,aAE3EzX,OAAM,SAACkL,OAZZ,4CADc,uBAAC,WAAD,wBAedwM,KACC,IAEHvb,qBAAU,WAMR,IAAIE,EAJCD,EAAO,uBAMVC,EADED,EAAOE,QAAUF,EAAOE,OAAOC,OACxB,IAAIC,SAAJ,eACCJ,EAAOE,OAAOC,OADf,KAEP,iCAAmCE,KAAKC,UAGjC,IAAIF,SAAJ,UACJJ,EAAO,oBAAP,gBAAgD,KACnD,iCAAmCK,KAAKC,WAIrCC,UACPwa,EAAU9a,MAEV,CAACD,IA6CD,6BACA,kBAAC4J,EAAA,EAAD,CACE3H,MAAO,CAAC0T,UAAW,QACnB3P,KAAK,QACL+D,MAAM,UACNZ,UAAW7J,EAAMic,wBACjBvR,QAjDoB,WACtBlK,GAAQ,KA2CR,4BASA,kBAACmK,GAAA,EAAD,CAAQpK,KAAMA,EAAMwB,QAjDF,WAClBvB,GAAQ,IAgDkCoK,kBAAgB,oBAAoBsR,WAAY,CAACvZ,MAAO,CAAC0D,OAAQ,UACzG,kBAACyE,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYe,UAAWlB,EAAQoV,UAC7B,kBAAC,GAAD,CAAgBtY,MAAO,CAAC+F,cAAe,SAAU9F,SAAU,WAD7D,IAC0E5C,EAAMyH,QAAW/G,EAAO,cAAgBA,EAAO,aAAaV,EAAMG,MAAlD,UAA8DO,EAAO,aAAaV,EAAMG,MAAxF,aAAkGH,EAAMG,KAAxG,eAAqHH,EAAMG,QAErN,kBAAC6F,EAAA,EAAD,CAAYe,UAAWlB,EAAQmV,iBAA/B,sBAIF,kBAAChQ,GAAA,EAAD,KACE,kBAAChF,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GAAtD,0IACyI,uBAAG1O,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,mDAAlD,sBADzI,KAIA,8BACE,kBAAC0L,GAAA,EAAD,CAAa5Q,UAAU,WAAWc,UAAWlB,EAAQyQ,aACnD,kBAACY,GAAA,EAAD,CAAWjR,UAAU,UAArB,cACA,kBAAC6Q,GAAA,EAAD,CACEC,QAAM,EACN9N,MAAOoS,EAAY,kBACnBvR,SAjEsB,SAACvF,GACjC+W,EAAgB,CAACH,kBAAmB5W,EAAEyE,OAAOC,MAAOmS,eAAgBC,EAAaD,kBAiEvEzY,MAAO,CAAC8T,SAAU,UAEjBjI,OAAOC,KAAKiN,GAAavU,KAAI,SAAChF,GAAD,OAAS,4BAAQ4I,GAAI5I,EAAK8G,MAAO9G,EAAKA,IAAK,YAAcA,GAAMuZ,EAAYvZ,GAAKyD,UAG/G4I,OAAOC,KAAKiN,GAAa7W,OAAS,GAAK,kBAAC,GAAD,CAAgBsV,OAAQuB,EAAYL,EAAY,mBAAuBlB,OAAQG,aA/DzG,SAAC6B,GACvBb,GAAgB,SAAAhH,GAAS,oCAASA,GAAc6H,SAgExC,kBAAC/E,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUC,QAAS8D,EAAaD,eACrB3Q,MAAM,UACNX,SAxEC,SAACvF,GAChC+W,EAAgB,6BAAID,GAAL,IAAmBD,eAAgB7W,EAAEyE,OAAOuO,YAwE7B7Q,KAAK,UAEzB6L,MAAM,mBAER,kBAACjI,EAAA,EAAD,CACE6O,KAAK,SACL3W,QAAQ,YACRiI,MAAO8Q,EAAY,UAAY,UAC/B7Q,QAzEK,SAACwO,GAChBA,EAAME,iBACNoC,GAAa,GACb,IAAI5W,EAAU,IAAIwX,UAAQpX,KAAKoE,UAAUiS,IACzCzW,EAAQiQ,gBAAkB,CACxB,aACA7U,EAAMG,KACNH,EAAM0D,WACN,iBACA,oBACA,OACAtC,KAAK,KACPwD,EAAQvD,IAAM,EACd,IACEV,EAAO0b,QAAQzX,GAEjB,MAAOL,GACLC,QAAQC,IAAIF,GAEd/D,GAAQ,IAuDEmC,MAAO,CAAC2D,MAAO,QAAS+P,UAAW,SALrC,gBCrKNjO,GAAYC,aAAW,SAACN,GAAD,MAAY,CACvCuO,YAAa,CACXD,UAAWtO,EAAMiO,QAAQ,IAE3B+E,UAAW,CACTnY,SAAU,GACV6H,MAAO,uBAETuQ,gBAAiB,CACfpY,SAAU,GACV6H,MAAO,uBAETwQ,SAAU,CACRrY,SAAU,OACV6H,MAAO,2BA0JI6R,OApJf,SAA+Btc,GAC7B,IAAM6F,EAAUuC,KADoB,EAEZlI,oBAAS,GAFG,mBAE7BK,EAF6B,KAEvBC,EAFuB,OAGIN,mBAAS,CAACqc,eAAgB,SAAUnB,gBAAgB,IAHxD,mBAG7BC,EAH6B,KAGfC,EAHe,OAIFpb,oBAAS,GAJP,mBAI7Bqb,EAJ6B,KAIlBC,EAJkB,OAKRtb,mBAAS,MALD,mBAK7BS,EAL6B,KAKrB8a,EALqB,OAMEvb,mBAAS,IANX,mBAM7Bwb,EAN6B,KAMhBC,EANgB,KAyFpC,OAhFAlb,qBAAU,WAAM,4CACd,sBAAA2U,EAAA,sEACQzR,MAAM,4BACTM,MAAK,SAACC,GACH,GAAIA,EAAS0X,GACX,OAAO1X,EAASC,OAEhB,MAAM,IAAI0X,MAAM,2BAGrB5X,MAAK,SAAC6X,GACLH,EAAenN,OAAO0L,OAAP,MAAA1L,OAAM,CAAQ,IAAR,oBAAesN,EAAW3U,KAAI,SAAA4U,GAAI,sBAAQA,EAAK5Z,IAAM4Z,aAE3EzX,OAAM,SAACkL,OAZZ,4CADc,uBAAC,WAAD,wBAedgN,KACC,IAEH/b,qBAAU,WAMR,IAAIE,EAJCX,EAAMU,OAAO,uBAMhBC,EADEX,EAAMU,OAAOE,QAAUZ,EAAMU,OAAOE,OAAOC,OACpC,IAAIC,SAAJ,eACCd,EAAMU,OAAOE,OAAOC,OADrB,KAEP,8BAAgCE,KAAKC,UAG9B,IAAIF,SAAJ,UACJd,EAAMU,OAAO,oBAAb,gBAAsD,KACzD,8BAAgCK,KAAKC,WAIlCC,QAAQ,CAACK,QAAS,MACzBma,EAAU9a,MAEV,CAACX,EAAMU,SAyCP,6BACA,kBAAC4J,EAAA,EAAD,CACE3H,MAAO,CAAC0T,UAAW,QACnB3P,KAAK,QACL+D,MAAM,UACNZ,UAAW7J,EAAMyc,qBACjB/R,QA7CoB,WACtBlK,GAAQ,KAuCR,yBASA,kBAACmK,GAAA,EAAD,CAAQpK,KAAMA,EAAMwB,QA7CF,WAClBvB,GAAQ,IA4CkCoK,kBAAgB,oBAAoBsR,WAAY,CAACvZ,MAAO,CAAC0D,OAAQ,UACzG,kBAACyE,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYe,UAAWlB,EAAQoV,UAC7B,kBAAC,GAAD,CAAgBtY,MAAO,CAAC+F,cAAe,SAAU9F,SAAU,WAD7D,IAC0E5C,EAAMyH,QAAWzH,EAAMU,OAAO,cAAgBV,EAAMU,OAAO,aAAaV,EAAMG,MAA9D,UAA0EH,EAAMU,OAAO,aAAaV,EAAMG,MAA1G,aAAoHH,EAAMG,KAA1H,eAAuIH,EAAMG,QAEvO,kBAAC6F,EAAA,EAAD,CAAYe,UAAWlB,EAAQmV,iBAA/B,mBAIF,kBAAChQ,GAAA,EAAD,KACE,kBAAChF,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GAAtD,sIACqI,uBAAG1O,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,gDAAlD,mBADrI,KAIA,8BACE,kBAAC0L,GAAA,EAAD,CAAa5Q,UAAU,WAAWc,UAAWlB,EAAQyQ,aACrD,kBAACY,GAAA,EAAD,CAAWjR,UAAU,UAArB,cACE,kBAAC6Q,GAAA,EAAD,CACEC,QAAM,EACN9N,MAAOoS,EAAY,eACnBvR,SA7DsB,SAACvF,GACjC+W,EAAgB,CAACiB,eAAgBhY,EAAEyE,OAAOC,SA6DhCtG,MAAO,CAAC8T,SAAU,UAEjBjI,OAAOC,KAAKiN,GAAavU,KAAI,SAAChF,GAAD,OAAS,4BAAQ4I,GAAI5I,EAAK8G,MAAO9G,EAAKA,IAAK,YAAcA,GAAMuZ,EAAYvZ,GAAKyD,UAI/G4I,OAAOC,KAAKiN,GAAa7W,OAAS,GAAK,kBAAC,GAAD,CAAgBsV,OAAQuB,EAAYL,EAAY,gBAAoBlB,OAAQG,aAhEtG,SAAC6B,GACvBb,GAAgB,SAAAhH,GAAS,oCAASA,GAAc6H,SAiExC,kBAAC7R,EAAA,EAAD,CACE6O,KAAK,SACL3W,QAAQ,YACRiI,MAAO8Q,EAAY,UAAY,UAC/B7Q,QAjEK,SAACwO,GAChBA,EAAME,iBACNoC,GAAa,GACb,IAAI5W,EAAU,IAAIwX,UAAQpX,KAAKoE,UAAUiS,IACzCzW,EAAQiQ,gBAAkB,CACxB,aACA7U,EAAMG,KACNH,EAAM0D,WACN,cACA,iBACA,OACAtC,KAAK,KACPwD,EAAQvD,IAAM,EACd,IACEV,EAAO0b,QAAQzX,GAEjB,MAAOL,GACLC,QAAQC,IAAIF,GAEd/D,GAAQ,IA+CEmC,MAAO,CAAC2D,MAAO,QAAS+P,UAAW,SALrC,gBCtJNjO,GAAYC,aAAW,SAACN,GAAD,MAAY,CACvCuO,YAAa,CACXD,UAAWtO,EAAMiO,QAAQ,IAE3B+E,UAAW,CACTnY,SAAU,GACV6H,MAAO,uBAETuQ,gBAAiB,CACfpY,SAAU,GACV6H,MAAO,uBAETwQ,SAAU,CACRrY,SAAU,OACV6H,MAAO,2BAuJIiS,OAlJf,SAAuC1c,GACrC,IAAM6F,EAAUuC,KAD4B,EAEpBlI,oBAAS,GAFW,mBAErCK,EAFqC,KAE/BC,EAF+B,OAGJN,mBAAS,CAACyc,uBAAwB,SAAUvB,gBAAgB,IAHxD,mBAGrCC,EAHqC,KAGvBC,EAHuB,OAIVpb,oBAAS,GAJC,mBAIrCqb,EAJqC,KAI1BC,EAJ0B,OAKhBtb,mBAAS,MALO,mBAKrCS,EALqC,KAK7B8a,EAL6B,OAMNvb,mBAAS,IANH,mBAMrCwb,EANqC,KAMxBC,EANwB,KAyF5C,OAhFAlb,qBAAU,WAAM,4CACd,sBAAA2U,EAAA,sEACQzR,MAAM,oCACTM,MAAK,SAACC,GACH,GAAIA,EAAS0X,GACX,OAAO1X,EAASC,OAEhB,MAAM,IAAI0X,MAAM,2BAGrB5X,MAAK,SAAC6X,GACLH,EAAenN,OAAO0L,OAAP,MAAA1L,OAAM,CAAQ,IAAR,oBAAesN,EAAW3U,KAAI,SAAA4U,GAAI,sBAAQA,EAAK5Z,IAAM4Z,aAE3EzX,OAAM,SAACkL,OAZZ,4CADc,uBAAC,WAAD,wBAedoN,KACC,IAGHnc,qBAAU,WAMR,IAAIE,EAJCX,EAAMU,OAAO,uBAMhBC,EADEX,EAAMU,OAAOE,QAAUZ,EAAMU,OAAOE,OAAOC,OACpC,IAAIC,SAAJ,eACCd,EAAMU,OAAOE,OAAOC,OADrB,KAEP,sCAAwCE,KAAKC,UAGtC,IAAIF,SAAJ,UACJd,EAAMU,OAAO,oBAAb,gBAAsD,KACzD,sCAAwCK,KAAKC,WAI1CC,QAAQ,CAACK,QAAS,MACzBma,EAAU9a,MACV,CAACX,EAAMU,SAyCP,6BACA,kBAAC4J,EAAA,EAAD,CACE3H,MAAO,CAAC0T,UAAW,QACnB3P,KAAK,QACL+D,MAAM,UACNZ,UAAW7J,EAAM6c,6BACjBnS,QA7CoB,WACtBlK,GAAQ,KAuCR,iCASA,kBAACmK,GAAA,EAAD,CAAQpK,KAAMA,EAAMwB,QA7CF,WAClBvB,GAAQ,IA4CkCoK,kBAAgB,oBAAoBsR,WAAY,CAACvZ,MAAO,CAAC0D,OAAQ,UACzG,kBAACyE,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYe,UAAWlB,EAAQoV,UAC7B,kBAAC,GAAD,CAAgBtY,MAAO,CAAC+F,cAAe,SAAU9F,SAAU,WAD7D,IAC0E5C,EAAMyH,QAAWzH,EAAMU,OAAO,cAAgBV,EAAMU,OAAO,aAAaV,EAAMG,MAA9D,UAA0EH,EAAMU,OAAO,aAAaV,EAAMG,MAA1G,aAAoHH,EAAMG,KAA1H,eAAuIH,EAAMG,QAEvO,kBAAC6F,EAAA,EAAD,CAAYe,UAAWlB,EAAQmV,iBAA/B,2BAIF,kBAAChQ,GAAA,EAAD,KACE,kBAAChF,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GAAtD,uIACsI,uBAAG1O,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,wDAAlD,2BADtI,KAIA,8BACE,kBAAC0L,GAAA,EAAD,CAAa5Q,UAAU,WAAWc,UAAWlB,EAAQyQ,aACrD,kBAACY,GAAA,EAAD,CAAWjR,UAAU,UAArB,cACE,kBAAC6Q,GAAA,EAAD,CACEC,QAAM,EACN9N,MAAOoS,EAAY,uBACnBvR,SA7DsB,SAACvF,GACjC+W,EAAgB,CAACqB,uBAAwBpY,EAAEyE,OAAOC,SA6DxCtG,MAAO,CAAC8T,SAAU,UAEjBjI,OAAOC,KAAKiN,GAAavU,KAAI,SAAChF,GAAD,OAAS,4BAAQ4I,GAAI5I,EAAK8G,MAAO9G,EAAKA,IAAK,YAAcA,GAAMuZ,EAAYvZ,GAAKyD,UAG/G4I,OAAOC,KAAKiN,GAAa7W,OAAS,GAAK,kBAAC,GAAD,CAAgBsV,OAAQuB,EAAYL,EAAY,wBAA4BlB,OAAQG,aA/D9G,SAAC6B,GACvBb,GAAgB,SAAAhH,GAAS,oCAASA,GAAc6H,SA+DxC,kBAAC7R,EAAA,EAAD,CACE6O,KAAK,SACL3W,QAAQ,YACRiI,MAAO8Q,EAAY,UAAY,UAC/B7Q,QA/DK,SAACwO,GAChBA,EAAME,iBACNoC,GAAa,GACb,IAAI5W,EAAU,IAAIwX,UAAQpX,KAAKoE,UAAUiS,IACzCzW,EAAQiQ,gBAAkB,CACxB,aACA7U,EAAMG,KACNH,EAAM0D,WACN,sBACA,yBACA,OACAtC,KAAK,KACPwD,EAAQvD,IAAM,EACd,IACEV,EAAO0b,QAAQzX,GAEjB,MAAOL,GACLC,QAAQC,IAAIF,GAEd/D,GAAQ,IA6CEmC,MAAO,CAAC2D,MAAO,QAAS+P,UAAW,SALrC,gBC5JNjO,GAAYC,YAAW,CAC3ByU,gBAAiB,CACf9U,QAAS,mBACT1B,MAAO,SAETyW,WAAY,CACV/U,QAAS,sBAKPgV,GAAc,CAClB,aAAgB,iBAChB,UAAa,eACb,cAAiB,qBAIJ,SAASC,GAAejd,GACrC,IACM6F,EAAUuC,KAF4B,EAGxBlI,mBAFD,IADyB,mBAGrCgd,EAHqC,KAGjCC,EAHiC,OAIZjd,mBAHb,IADyB,mBAIrCkd,EAJqC,KAI3BC,EAJ2B,OAKJnd,oBAAS,GALL,mBAKrCod,EALqC,KAKvBC,EALuB,OAMQrd,oBAAS,GANjB,mBAMrCsd,EANqC,KAMjBC,EANiB,OAOJvd,oBAAS,GAPL,mBAOrCwd,EAPqC,KAOvBC,EAPuB,KA4D5C,OACE,0BAAM5S,GAAI/K,EAAM4d,OAAQ7W,UAAWlB,EAAQkX,YACzC,kBAACtC,GAAA,EAAD,CACE7U,KAAK,KACLqD,MAAOiU,EACPxW,KAAK,QACLqE,GAAI/K,EAAM4d,OAAS,MACnBrL,MAAM,KACN/P,QAAQ,WACRqH,SAAUyT,EACVxT,SA1BN,SAAwBvF,GACtB4Y,EAAM5Y,EAAEyE,OAAOC,OACfwU,GAAsB,GA7CL,KA8CblZ,EAAEyE,OAAOC,OACXwU,GAAsB,IAuBpB1W,UAAWlB,EAAQiX,kBAErB,kBAACrC,GAAA,EAAD,CACE7U,KAAK,WACLqD,MAAOmU,EACP1W,KAAK,QACLqE,GAAI/K,EAAM4d,OAAS,YACnBrL,MAAM,UACN/P,QAAQ,WACRqH,SAAU2T,EACV1T,SA7BN,SAA8BvF,GAC5B8Y,EAAY9Y,EAAEyE,OAAOC,OACrBsU,GAAgB,GArDC,KAsDbhZ,EAAEyE,OAAOC,OACXsU,GAAgB,IA0BdxW,UAAWlB,EAAQiX,kBAErB,6BACA,6BACA,yBAAKna,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,kBAC5C,kBAACtB,EAAA,EAAD,CACE6O,KAAK,SACL3W,QAAQ,YACRkE,KAAK,QACL+D,MAAM,UACNC,QAnFR,SAAkBnG,GAEhB,GADAA,EAAE6U,iBATe,KAUb8D,GAVa,KAUQE,EAAyB,CAChD,IAAMS,EAAgB,KAAPX,EAAY,CAAEY,GAAIZ,EAAIa,gBAAiB,MAAQ,CAAEX,SAAUA,EAAUW,gBAAiB,MACrGpa,MAAM,QAAD,OAAS3D,EAAM4d,OAAf,YAAyB5d,EAAMG,MAAQ,CAC1C+I,OAAQ,OACRC,KAAMnE,KAAKoE,UAAUyU,GACrBvU,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGpBqU,GAAgB,MAyEX3d,EAAM4d,OAAOhW,QAAQ,KAAM,MAE9B,6BACoB,cAAjB5H,EAAM4d,QAA0B,kBAACtT,EAAA,EAAD,CAC/B5D,KAAK,QACL+D,MAAM,UACNC,QAvEV,SAA6BnG,GACzBZ,MAAM,kBAAD,OAAmB3D,EAAMG,MAAQ,CACpC+I,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAAC4U,aAAc,GAAID,gBAAiB,OACzDzU,QAAS,CACP,OAAU,mBACV,eAAgB,wBA8DiB,oBAQjC,kBAACgB,EAAA,EAAD,CACE5D,KAAK,QACL+D,MAAM,YACNC,QAnFV,SAAkBnG,GAChBZ,MAAM,SAAD,OAAU3D,EAAM4d,OAAhB,YAA0B5d,EAAMG,MAAQ,CAAC+I,OAAQ,WA+EhD,eASJ,kBAACrH,EAAA,EAAD,CACEG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMmd,EACN3b,QA7EsB,WAC1B4b,GAAgB,IA6EZ/Y,QAASoY,GAAYhd,EAAM4d,SArHd,KAqHyBR,EAA2B,QAAWA,EAAW,YAAgB,UAAYF,EAAK,OACxHpb,iBAAkB,IAClBK,IAAK,WAAanC,EAAMG,KAAOH,EAAM4d,UCxI7C,IAAMxV,GAAYC,YAAW,CAC3ByU,gBAAiB,CACf9U,QAAS,oBAEX+U,WAAY,CACV/U,QAAS,sBAME,SAASiW,GAAcje,GACpC,IACM6F,EAAUuC,KAF2B,EAGHlI,oBAAS,GAHN,mBAGpCwd,EAHoC,KAGtBC,EAHsB,OAITzd,mBAHf,IADwB,mBAIpCge,EAJoC,KAIzBC,EAJyB,KAkC3C,OACE,0BAAMpT,GAAI/K,EAAM4d,OAAQ7W,UAAWlB,EAAQkX,YACzC,kBAACtC,GAAA,EAAD,CACE7U,KAAK,YACLqD,MAAOiV,EACPxX,KAAK,QACLqE,GAAI/K,EAAMoe,QAAU,kBACpB7L,MAAM,gBACN/P,QAAQ,WACRsH,SAlBN,SAAsBvF,GACpB4Z,EAAa5Z,EAAEyE,OAAOC,QAkBlB0R,WAAY,CACVC,aAAc,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAzB,MAEhB/T,UAAWlB,EAAQiX,kBAErB,6BACA,6BACA,kBAACxS,EAAA,EAAD,CACE6O,KAAK,SACL3W,QAAQ,YACRkE,KAAK,QACL+D,MAAM,UACNC,QAlDN,SAAkBnG,GAEhB,GADAA,EAAE6U,iBANe,KAOb8E,EAA0B,CAE5B,IAAML,EAAS,CAAEK,UAAWA,EAAWE,QAASpe,EAAMoe,QAASL,gBAAiB,MAChFpa,MAAM,sBAAD,OAAuB3D,EAAMG,MAAQ,CACxC+I,OAAQ,OACRC,KAAMnE,KAAKoE,UAAUyU,GACrBvU,QAAS,CACP,OAAU,mBACV,eAAgB,sBAIpBqU,GAAgB,MA+BhB,UASA,kBAAC9b,EAAA,EAAD,CACEG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMmd,EACN3b,QAlCsB,WAC1B4b,GAAgB,IAkCZ/Y,QAAO,2BAAsB5E,EAAMoe,QAA5B,eAA0CF,EAA1C,MACPpc,iBAAkB,IAClBK,IAAK,WAAanC,EAAMG,KAAOH,EAAMoe,WC1C7C,IAIMhW,GAAYC,cAAW,SAACN,GAAD,MAAY,CACvCU,SAAU,CACR7F,SAAU,GACV8F,cAAe,SACfC,OAAQ,WAEV0V,eAAgB,CACdhI,UAAW,MACX7N,aAAc,QAEhBF,YAAa,CACXN,QAAS,uBAEX+S,UAAW,CACTnY,SAAU,GACV6H,MAAO,sBACPtE,WAAY,KAEd6U,gBAAiB,CACfpY,SAAU,GACV6H,MAAO,uBAETwQ,SAAU,CACRrY,SAAU,OACV6H,MAAO,uBAET6T,aAAc,CACZ7T,MAAO,uBAET8T,QAAQ,CACNjY,MAAO,QACP+P,UAAW,QAEbmI,aAAa,CACXlY,MAAO,QACP+P,UAAW,OACXxK,YAAa,OAEf4S,SAAU,CACRjW,aAAc,EACd5F,SAAU,IAEZ8b,UAAW,CACTrI,UAAW,OACXI,SAAU,SAEZkI,cAAe,CACbtI,UAAW,OACXI,SAAU,SAEZsD,iBAAkB,CAChB1D,UAAW,OACX/P,MAAO,SAETsY,OAAQ,CACNtY,MAAO,MACPqC,OAAQ,sBAEVkW,QAAS,CACPxI,UAAW,GACX7N,aAAc,IAEhBsW,UAAW,CACTC,aAAc,OACdC,YAAa,QAEfC,oBAAoB,CAClBrc,SAAU,QAEZsc,yBAAyB,CACvBC,UAAW,QAEbC,SAAS,CACP9Y,MAAO,OACPqF,QAAS,gBAEX0T,wBAAwB,CACtB1T,QAAS,OACT2T,cAAe,MACfC,SAAU,OACV3T,eAAgB,aAChB4T,WAAY,UACZC,aAAc,eAKlB,SAASC,GAAS1f,GAAQ,IAChB2T,EAAqC3T,EAArC2T,SAAU1K,EAA2BjJ,EAA3BiJ,MAAO2G,EAAoB5P,EAApB4P,MAAU+P,EADZ,aACsB3f,EADtB,8BAGvB,OACE,uCACE4f,KAAK,WACLC,OAAQ5W,IAAU2G,EAClB7E,GAAE,0BAAqB6E,GACvBzN,IAAG,0BAAqByN,GACxBhF,kBAAA,qBAA+BgF,IAC3B+P,GAEH1W,IAAU2G,GACP,6BAAM+D,IAahB,SAASmM,GAA0B9f,GACjC,IAAM6F,EAAUuC,KAEhB,OAAIpI,EAAM+f,QACD,yBAAKhZ,UAAWlB,EAAQoZ,qBAAqB,8BAAOjf,EAAM+f,UAG1D,yBAAKhZ,UAAWlB,EAAQqZ,2BAKnC,SAASc,GAAmBhgB,GAC1B,IAAM6F,EAAUuC,KACV6X,EAAe,CACnB,KAAiB,CAACtU,QAAS,WAAYlB,MApIxB,WAqIf,MAAiB,CAACkB,QAAS,KAAMlB,MArIlB,WAsIf,SAAiB,CAACkB,QAAS,SAAUlB,MArIhB,QAsIrB,aAAiB,CAACkB,QAAS,MAAOlB,MAtIb,QAuIrB,KAAiB,CAACkB,QAAS,OAAQlB,MAtIvB,WAuIZ,GAAiB,CAACkB,QAAS,gBAAiBlB,MAxIvB,SA0IjBxB,EAAwB,OAAhBjJ,EAAMiJ,MAAkB,GAAMjJ,EAAMiJ,MAClD,GAAIjJ,EAAMkgB,eAAgB,CACxB,GAAKlgB,EAAMmgB,aAEJ,CACL,IAAIC,EAAkBH,EAAahX,GACnC,OACE,kBAAC,IAAMoB,SAAP,KACE,yBAAK1H,MAAO,CAAE8H,MAAO2V,EAAgB3V,MAAOtE,WAAY,MACrDia,EAAgBzU,SAEnB,kBAACmU,GAAD,CAA2BC,QAAS/f,EAAM+f,WAR9C,OAAO,yBAAKhZ,UAAWC,YAAK,eAAEnB,EAAQyY,cAAgBte,EAAMmgB,gBAArD,IAAuEF,EAAahX,GAAO0C,QAA3F,KAWJ,GAAI3L,EAAMqgB,eAAgB,CAC/B,GAAKrgB,EAAMmgB,cAA0B,WAAVlX,GAA2B,KAAVA,EAErC,CACL,IAAMqX,EAAiBtb,KAAKC,MAAMgE,GAE5BsX,EAASvgB,EAAMU,OAAN,KACT8f,EAAYD,EAAM,EAAUA,EAAM,EAAM3Y,QAAQ,IAAK,KAAQ,KAC7D6Y,EAAYF,EAAM,EAAUA,EAAM,EAAM3Y,QAAQ,IAAK,KAAQ,KAC7D8Y,EAAYH,EAAM,EAAUA,EAAM,EAAM3Y,QAAQ,IAAK,KAAQ,KAC7D+Y,EAAYJ,EAAM,EAAUA,EAAM,EAAM3Y,QAAQ,IAAK,KAAQ,KAEnE,OACE,kBAAC,IAAMyC,SAAP,KACE,yBAAK1H,MAAO,CAACC,SAAU,SACrB,6BACE,0BAAMmE,UAAWlB,EAAQuZ,UACvB,kBAAC3L,GAAD,CAAehM,MAAO+Y,GAAsB,MAA5C,KADF,KACwEF,EAAc,EADtF,KAGA,0BAAMvZ,UAAWlB,EAAQuZ,UACvB,kBAAC3L,GAAD,CAAehM,MAAOgZ,GAAsB,MAA5C,KADF,KACwEH,EAAc,EADtF,MAIF,6BACE,0BAAMvZ,UAAWlB,EAAQuZ,UACvB,kBAAC3L,GAAD,CAAehM,MAAOiZ,GAAsB,MAA5C,KADF,KACwEJ,EAAc,EADtF,KAGA,0BAAMvZ,UAAWlB,EAAQuZ,UACvB,kBAAC3L,GAAD,CAAehM,MAAOkZ,GAAsB,MAA5C,KADF,KACwEL,EAAc,EADtF,OAKJ,kBAACR,GAAD,CAA2BC,QAAS/f,EAAM+f,WA9B9C,OAAO,yBAAKpd,MAAO,CAAE8H,MA1JF,OA0J2B7H,SAAU,SAAjD,IAA4D5C,EAAMqa,QAAlE,KAmCT,OAAKra,EAAMmgB,cAA0B,WAAVlX,GAA2B,KAAVA,EASxC,kBAAC,IAAMoB,SAAP,KACE,yBAAK1H,MAAO,CAAEC,SAAU,UACH,kBAAVqG,EACLA,GACCA,EAAMuM,QAAQxV,EAAM4gB,aACtB5gB,EAAM6gB,gBAAkB7gB,EAAM6gB,gBAAkB,KAErD,kBAACf,GAAD,CAA2BC,QAAS/f,EAAM+f,WAd5C,kBAAC,IAAM1V,SAAP,KACE,yBAAK1H,MAAO,CAAE8H,MAhMC,OAgMwB7H,SAAU,SAAjD,IAA4D5C,EAAMqa,QAAlE,KACA,kBAACyF,GAAD,CAA2BC,QAAS/f,EAAM+f,WAqBpD,SAAS1U,KACP,IAAMxF,EAAUuC,KADwB,EAEhBlI,oBAAS,GAFO,mBAEjCK,EAFiC,KAE3BC,EAF2B,KAalC4J,EAAc,WAClB5J,GAAQ,IAGV,OACE,kBAAC,IAAM6J,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQ3H,MAAO,CAAC4H,cAAe,OAAQC,MAAO,SAAUC,MAAM,YAAYC,QAftD,WACtBlK,GAAQ,KAeJ,kBAAC,KAAD,CAAWuG,UAAWlB,EAAQ4C,WADhC,sBAGA,kBAACkC,GAAA,EAAD,CACEpK,KAAMA,EACNwB,QAASqI,EACTQ,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBAAsB,iCACtC,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBF,GAAG,4BAAtB,oFACmF,kCADnF,2DAIF,kBAACG,GAAA,EAAD,KACE,kBAACZ,EAAA,EAAD,CAAQI,QA3BE,WAChB/G,MAAM,YAAa,CAACuF,OAAQ,SAC5BkB,KAyBkCK,MAAM,WAAlC,WAGA,kBAACH,EAAA,EAAD,CAAQI,QAASN,EAAaK,MAAM,YAAYW,WAAS,GAAzD,aAUV,SAAS0V,GAAiB9gB,GACxB,IAAM6F,EAAUuC,KADc,EAENlI,oBAAS,GAFH,mBAEvBK,EAFuB,KAEjBC,EAFiB,OAGUN,oBAAS,GAHnB,mBAGvB6gB,EAHuB,KAGTC,EAHS,OAIN/gB,IAAMC,SAAS,IAJT,mBAIvB0F,EAJuB,KAIjBqb,EAJiB,OAKIhhB,IAAMC,UAAS,GALnB,mBAKvBqY,EALuB,KAKZC,EALY,OAMEvY,IAAMC,SAAS,IANjB,mBAMvByY,EANuB,KAMbC,EANa,OAOA3Y,IAAMC,SAAS,IAPf,mBAOvBuY,EAPuB,KAOdC,EAPc,KAmDxBK,EAAkBR,EAAY,kBAACS,GAAA,EAAD,CAAkBvO,MAAM,UAAU/D,KAAM,KAAQ,sBAEpF,OACE,kBAAC,IAAM2D,SAAP,KACA,kBAACC,EAAA,EAAD,CAAQI,QA9Cc,WACtBlK,GAAQ,IA6C0BmC,MAAO,CAAC4H,cAAe,OAAQC,MAAO,QAASqB,YAAa,OAAQpB,MAAM,WAC1G,kBAAC,KAAD,CAAS1D,UAAWlB,EAAQ4C,WAD9B,uBAGA,kBAACkC,GAAA,EAAD,CAAQpK,KAAMA,EAAMwB,QA7CF,WAClBvB,GAAQ,IA4CkCoK,kBAAgB,qBACxD,kBAACE,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYe,UAAWlB,EAAQmV,iBAA/B,uBAIF,kBAAChQ,GAAA,EAAD,KACA,oFACA,4BACE,8DACA,oDACA,mDAAwB,uBAAGG,KAAK,yCAAR,sBAAxB,4DACA,4DAEF,kEACA,4BACE,4EACA,wCAAa,uBAAGA,KAAK,yCAAR,sBAAb,2DACA,iEAAsC,2CAAtC,KAA8D,gDAA9D,KACA,iFACA,8CACA,uGACA,iJACA,qFAGF,4NAIA,2MAIA,6BACE,kBAACsP,GAAA,EAAD,CACE/T,KAAK,QACLqE,GAAG,sBACHwH,MAAM,iBACN/P,QAAQ,WACRuE,UAAWlB,EAAQ8Y,cACnB7U,SA9EiB,SAAAhB,GACvBmY,EAAQnY,EAAIE,OAAOC,QA8Eb0R,WAAY,CACVuG,eACE,kBAACrG,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,GAAD,CAAgBnY,MAAO,CAACC,SAAU,gBAO5C,yBAAKD,MAAO,CAACwc,UAAW,SACrB1G,EAAS,2BAAG,kBAACvS,EAAA,EAAD,CAAKuE,MAAM,cAAckO,IAAsB,4BAC3DJ,EAAW,oJAA+H,iCAG7I,kBAACjO,EAAA,EAAD,CACE9H,QAAQ,YACRiI,MAAM,UACN9H,MAAO,CAAC0T,UAAW,QACnB3L,QA9FW,SAACwO,GAEhB,GADAA,EAAME,kBACDxT,EAGH,OAFA8S,GAAW,QACXE,EAAY,yCAGdF,GAAW,GACXF,GAAa,GACb7U,MAAM,qBAAqB,CACvBuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAAC+X,kBAAmBvb,IACzC0D,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGrBrF,MAAK,SAAAC,GACEA,EAAS0X,KACXlD,GAAW,GACXF,GAAa,GACbtU,EAASC,OAAOF,MAAK,SAAAG,GAAI,OAAIwU,EAAY,oCAAD,OAAqCxU,EAAKgd,iBA0EpFjI,KAAK,UAEJJ,KAKL,kBAAClX,EAAA,EAAD,CACEG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMwgB,EACNhf,QAjHwB,WAC1Bif,GAAgB,IAiHdpc,QAAS,4BACT9C,iBAAkB,IAClBK,IAAK,sBAOX,SAASkf,GAAiBrhB,GAExB,OACE,6BACE,yBAAK2C,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,gBAAiBpD,aAAc,QAC3E,kBAACxC,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,kBAAhB,gBAIF,6BACE,kBAACmb,GAAD,CAA0B5gB,OAAQV,EAAMU,OAAQgD,WAAY1D,EAAM0D,aAClE,kBAACod,GAAD,CAAkBpgB,OAAQV,EAAMU,SAChC,kBAAC,GAAD,QAGJ,kBAACoL,EAAA,EAAD,OAON,SAASyV,GAAcvhB,GAAQ,IAAD,EACQE,mBAASF,EAAMwhB,YADvB,mBACrBA,EADqB,KACTC,EADS,KAiB5B,OAdAhhB,qBACE,WACEghB,EAAczhB,EAAMwhB,cAEtB,CAACxhB,EAAMwhB,aAWP,kBAAClX,EAAA,EAAD,CACEoX,kBAAgB,EAChB/e,MAAO,CAAC2D,MAAO,OAAQ+P,UAAW,OAClC5L,MAAOzK,EAAMyK,MACbjI,QAASxC,EAAMwC,QACfkE,KAAK,QACLgE,QAdF,WACE+W,EAAc,kBAACzI,GAAA,EAAD,CAAkBvO,MAAM,UAAU/D,KAAM,MACtD1G,EAAM0K,YAcL8W,GAKP,SAASG,GAAgB3hB,GACvB,IAAM6F,EAAUuC,KADc,EAENlI,oBAAS,GAFH,mBAEvBK,EAFuB,KAEjBC,EAFiB,OAGEP,IAAMC,SAAS,GAHjB,mBAGvB0hB,EAHuB,KAGbC,EAHa,KAoB9B,SAASC,EAAmBC,GAC1B,OAAO,WACLpe,MAAM,QAAUoe,EAAM,IAAM/hB,EAAMG,KAAM,CAAC+I,OAAQ,SAASjF,MAAK,SAAAsF,QA6CnE,IAAMyY,EAzBN,SAAuCC,EAAUF,GAE/C,OAAQE,GACN,IAAK,eACJ,OAAQ,6BACA,kBAACV,GAAD,CACC9W,MAAM,UACNjI,QAAQ,YACRkI,QAASoX,EAAmBC,GAC5BP,WAAW,WAGrB,IAAK,QACJ,OAAQ,6BACA,kBAACD,GAAD,CACC9W,MAAM,UACNjI,QAAQ,YACRgf,WAAW,aAGrB,QACE,OAAO,+BAISU,CAA8BliB,EAAMmiB,gBAAiB,YAG3E,OACE,kBAAC,IAAM9X,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQ3H,MAAO,CAAC4H,cAAe,OAAQC,MAAO,SAAWC,MAAM,UAAUZ,SAAU7J,EAAM6J,SAAUa,QA9D/E,WACtBlK,GAAQ,KA8DJ,kBAAC,KAAD,CAAUiK,MAAOzK,EAAM6J,SAAW,WAAa,UAAW9C,UAAWlB,EAAQ4C,WAD/E,cAGA,kBAACkC,GAAA,EAAD,CAAQpK,KAAMA,EAAMwB,QA7DJ,WAClB8f,EAAY,GACZrhB,GAAQ,IA2DoCoK,kBAAgB,qBACxD,kBAACE,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYe,UAAWlB,EAAQoV,UAC7B,kBAAC,GAAD,CAAgBtY,MAAO,CAAC+F,cAAe,SAAU9F,SAAU,WAD7D,IAC2E5C,EAAMU,OAAO,cAAiBV,EAAMU,OAAO,aAAaV,EAAMG,MAA/D,UAA2EH,EAAMU,OAAO,aAAaV,EAAMG,MAA3G,cAAsHH,EAAMG,MAA5H,UAAwIH,EAAMG,OAE1N,kBAACiiB,GAAA,EAAD,CACEnZ,MAAO2Y,EACP9X,SA5EgB,SAACoP,EAAOmJ,GAC9BR,EAAYQ,IA4ENC,eAAe,UACfC,UAAU,UACV/f,QAAQ,aACRggB,cAAc,QAEd,kBAACC,GAAA,EAAD,CAAKlQ,MAAM,WACX,kBAACkQ,GAAA,EAAD,CAAKlQ,MAAM,SAAS1I,UAAU,MAGhC,kBAACmB,GAAA,EAAD,KACE,kBAAC0U,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAChC,kBAAC5J,EAAA,EAAD,CAAa0R,cAAY,GAAzB,gDAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GAAtD,sIAEsD,uBAAGvM,KAAK,IAAR,gBAFtD,KAKA,yBAAKxI,MAAO,CAACgJ,QAAS,OAAQnD,aAAc,SAC1C,0BAAM7F,MAAO,CAACkJ,YAAa,QAA3B,aACA,kBAACmU,GAAD,CACE/W,MAAOjJ,EAAM0iB,iBACbvC,cAAc,EACd9F,QAAQ,eACR6F,gBAAc,KAIjB8B,EAED,kBAAChc,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAItD,MAAO,CAAC0T,UAAW,SAA7D,6CAC4C,8BAAOrW,EAAM2iB,eAAiBnU,OAAOH,QAAQrJ,KAAKC,MAAMjF,EAAM2iB,iBAAiBxb,KAAK,mCAAEyb,EAAF,KAAKtU,EAAL,qBAAesU,EAAf,YAAoBtU,EAAEkH,QAAQ,OAAOpU,KAAK,MAAQ,UADlL,IAC8L,kBAACkJ,EAAA,EAAD,CAAQG,MAAM,UAAU/D,KAAK,QAAQmD,UAAW7J,EAAM2iB,eAAgBjY,QAvFrQ,WACL,IAAI9F,EAAU,IAAIwX,UAAQ,IAC1BxX,EAAQsK,UAAW,EACnBtK,EAAQiQ,gBAAkB,CACxB,aACA7U,EAAMG,KACNH,EAAM0D,WACN,WACA,QACAtC,KAAK,KACPpB,EAAMW,OAAO0b,QAAQzX,KA6E+K,UAE9L,kBAACkH,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,cAaxC,SAASgE,GAAsB7iB,GAC7B,IAAM6F,EAAUuC,KADoB,EAEZlI,oBAAS,GAFG,mBAE7BK,EAF6B,KAEvBC,EAFuB,OAGIN,oBAAS,GAHb,mBAG7B6gB,EAH6B,KAGfC,EAHe,OAIU9gB,mBAAS,IAJnB,mBAI7B4iB,EAJ6B,KAIZC,EAJY,OAKJ9iB,IAAMC,SAAS,GALX,mBAK7B0hB,EAL6B,KAKnBC,EALmB,KAYpC,SAASmB,EAAsBjB,EAAK1e,GAClC,OAAO,WACL4f,EAAqB,GAAD,OAAIlB,EAAJ,WAAkB1e,IAI1C,SAASye,EAAmBC,GAC1B,OAAO,WACLpe,MAAM,QAAUoe,EAAM,IAAM/hB,EAAMG,KAAM,CAAC+I,OAAQ,SAASjF,MAAK,SAAAsF,QAKnE,SAAS2Z,EAAkBnB,GACzB,OAAO,WACLkB,EAAqB,GAAD,OAAIlB,EAAJ,WAAkB,iBAK1C,SAASkB,EAAqBE,EAAUla,GACtC,IAAIrE,EAAU,IAAIwX,UAAQvN,OAAO5F,IACjCrE,EAAQiQ,gBAAkB,CACxB,aACA7U,EAAMG,KACNH,EAAM0D,WACNyf,EACA,OACA/hB,KAAK,KACPwD,EAAQvD,IAAM,EACd,IACErB,EAAMW,OAAO0b,QAAQzX,GAEvB,MAAOL,GACLC,QAAQC,IAAIF,GACZvE,EAAMW,OAAOM,QAAQ,CAACC,UAAW,kBAAM+hB,EAAqBE,EAAUla,OAI1E,SAASma,EAA4B7e,GACrB,UAAVA,EAAEpC,MACJ8gB,EAAqB1e,EAAEyE,OAAO+B,GAAIxG,EAAEyE,OAAOC,OAC3C8Z,EAAmB,cAAD,OAAexe,EAAEyE,OAAOC,MAAxB,MAClB+X,GAAgB,IAmBpB,SAASkB,EAA8BD,EAAUF,GAC/C,OAAQE,GACN,IAAK,OACH,OAAQ,yBAAK9f,IAAK,mBAAqB4f,GACrC,kBAACR,GAAD,CACE9W,MAAM,YACNjI,QAAQ,YACJkI,QAASoX,EAAmBC,GAChCP,WAAW,WAGjB,IAAK,eACJ,OAAQ,yBAAKrf,IAAK,mBAAqB4f,GAC/B,kBAACR,GAAD,CACC9W,MAAM,UACNjI,QAAQ,YACRkI,QAASoX,EAAmBC,GAC5BP,WAAW,WAGrB,IAAK,OACH,OAAQ,yBAAKrf,IAAK,mBAAqB4f,GACrC,kBAACR,GAAD,CACE9W,MAAM,UACNjI,QAAQ,YACRkI,QAAS,kBAAK,GACd8W,WAAW,kBAACxI,GAAA,EAAD,CAAkBvO,MAAM,UAAU/D,KAAM,OAErD,kBAAC6a,GAAD,CACE9W,MAAM,YACNC,QAASwY,EAAkBnB,GAC3BP,WAAW,UAGjB,IAAK,QACH,OAAQ,yBAAKrf,IAAK,mBAAqB4f,GACrC,kBAACR,GAAD,CACE9W,MAAM,YACNjI,QAAQ,YACRkI,QAASsY,EAAsBjB,EAAK,YACpCP,WAAW,UAEb,kBAACD,GAAD,CACE9W,MAAM,YACNC,QAASwY,EAAkBnB,GAC3BP,WAAW,UAGjB,IAAK,WACH,OACE,yBAAKrf,IAAK,mBAAqB4f,GAC7B,kBAACR,GAAD,CACE9W,MAAM,UACNjI,QAAQ,YACRkI,QAASsY,EAAsBjB,EAAK,SACpCP,WAAW,WAEb,kBAACD,GAAD,CACE9W,MAAM,YACNC,QAASwY,EAAkBnB,GAC3BP,WAAW,UAInB,QACE,OAAO,yBAAKrf,IAAK,mBAAqB4f,KAG5C,IAAMxB,EAASvgB,EAAMU,OAAN,KACT2iB,EAAU7U,OAAO8U,YAAY9U,OAAOH,QAAQrO,EAAMujB,MAAMpc,KAAK,WAAiBC,GAAjB,uBAAEoc,EAAF,WAAuB,CAACA,EAAStB,EAAjC,KAAmE7e,MAAOmgB,QAEvIvD,EAAe,CACnB,KAAiB,CAACtU,QAAS,WAAYlB,MA7tBxB,WA8tBf,MAAiB,CAACkB,QAAS,KAAMlB,MA9tBlB,WA+tBf,SAAiB,CAACkB,QAAS,SAAUlB,MA9tBhB,QA+tBrB,aAAiB,CAACkB,QAAS,MAAOlB,MA/tBb,QAguBrB,KAAiB,CAACkB,QAAS,OAAQlB,MA/tBvB,WAguBZ,GAAiB,CAACkB,QAAS,gBAAiBlB,MAjuBvB,SAouBvB,OACE,6BACA,kBAACH,EAAA,EAAD,CAAQ3H,MAAO,CAAC4H,cAAe,OAAQC,MAAO,SAAWX,SAAU7J,EAAM6J,SAAUa,QAhG7D,WACtBlK,GAAQ,IA+FqGiK,MAAM,WACjH,kBAAC,KAAD,CAAcA,MAAOzK,EAAM6J,SAAW,WAAa,UAAW9C,UAAWlB,EAAQ4C,WADnF,WAGA,kBAACkC,GAAA,EAAD,CAAQpK,KAAMA,EAAMwB,QA/FF,WAClB8f,EAAY,GACZrhB,GAAQ,IA6FkCoK,kBAAgB,qBACxD,kBAACE,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYe,UAAWlB,EAAQoV,UAC7B,kBAAC,GAAD,CAAgBtY,MAAO,CAAC+F,cAAe,SAAU9F,SAAU,WAD7D,IAC2E5C,EAAMU,OAAO,cAAiBV,EAAMU,OAAO,aAAaV,EAAMG,MAA/D,UAA2EH,EAAMU,OAAO,aAAaV,EAAMG,MAA3G,cAAsHH,EAAMG,MAA5H,UAAwIH,EAAMG,OAE1N,kBAACiiB,GAAA,EAAD,CACEnZ,MAAO2Y,EACP9X,SA/JkB,SAACoP,EAAOmJ,GAC9BR,EAAYQ,IA+JRC,eAAe,UACfC,UAAU,UACV/f,QAAQ,aACRggB,cAAc,QAEd,kBAACC,GAAA,EAAD,CAAKlQ,MAAM,eACX,kBAACkQ,GAAA,EAAD,CAAKlQ,MAAM,aACX,kBAACkQ,GAAA,EAAD,CAAKlQ,MAAM,WACX,kBAACkQ,GAAA,EAAD,CAAKlQ,MAAM,WAGb,kBAACvH,GAAA,EAAD,KACE,kBAAC0U,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAE/BpB,OAAOH,QAAQrO,EAAMujB,MACnB/O,QAAO,oDAAwBiP,SAAS9X,WACxCxE,KAAI,mCAAEqc,EAAF,KAAWzB,EAAX,YACL,yBAAK5f,IAAKqhB,GACR,yBAAK7gB,MAAO,CAACiJ,eAAgB,gBAAiBD,QAAS,SACrD,kBAAC3F,EAAA,EAAD,CAAY2F,QAAQ,SACjBoW,EAAI0B,SAAS7d,MAEhB,kBAACI,EAAA,EAAD,CAAY2F,QAAQ,QAAQ+L,cAAY,GACtC,0BAAM/U,MAAO,CAAC8H,MAAMwV,EAAa8B,EAAI1e,OAAOoH,QAASwV,EAAa8B,EAAI1e,OAAOsI,WAGjF,kBAAC3F,EAAA,EAAD,CAAYxD,QAAQ,UAAUmJ,QAAQ,QAAQ+L,cAAY,EAACjN,MAAM,iBACtC,QAAxBsX,EAAI0B,SAASC,OAAb,uBAAgD3B,EAAI0B,SAASC,QAAW,IAE3E,kBAAC1d,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GACpD,yBAAKiM,wBAAyB,CAACC,OAAQ7B,EAAI0B,SAASpa,gBAGrDga,EAAQG,GAET,kBAAC1X,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,eAKlC,kBAACa,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAC/BpB,OAAO0G,OAAOlV,EAAMujB,MAClB/O,QAAO,SAAAuN,GAAG,OAAIA,EAAI0B,SAAS9X,WAC3BxE,KAAI,SAAA4a,GAAG,OACRvT,OAAOH,QAAQ0T,GACZvN,QAAO,mCAAErS,EAAF,gBAA6B,UAARA,GAA6B,aAARA,KACjDqS,QAAO,oDAA0B7I,WACjCxE,KAAI,mCAAEhF,EAAF,KAAOga,EAAP,YACP,kBAAC,IAAM9R,SAAP,KACE,kBAACrE,EAAA,EAAD,CAAa0R,cAAY,GACtByE,EAAQ5J,OAEX,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,KACnCkW,EAAQ9S,aAEX,kBAACoR,GAAA,EAAD,CACE/T,KAAK,QACLqE,GAAE,UAAKgX,EAAI0B,SAASthB,IAAIyF,QAAQ,WAAY,eAA1C,YAA4DzF,GAC9DuY,aAAcyB,EAAQlT,MACtB0R,WAAY,CACVC,aAAc,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAOqB,EAAQhc,OAExDqC,QAAQ,WACRqhB,WAAYT,EACZrc,UAAWlB,EAAQkU,mBAErB,kBAACjO,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,iBAMhC,kBAAC7Y,EAAA,EAAD,CAAa0R,cAAY,GAAzB,qBAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GACnD1X,EAAMujB,KAAKO,gBAAsD,iBAApC9jB,EAAMujB,KAAKO,eAAezgB,OACtD,kBAAC,IAAMgH,SAAP,4CACoC,8BAAOrK,EAAMujB,KAAKO,eAAe3I,kBAAkBlS,OADvF,sBAEiB,uBAAGD,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,mDAAlD,sBAFjB,KAKDnL,EAAMujB,KAAKO,gBAAsD,iBAApC9jB,EAAMujB,KAAKO,eAAezgB,OAEtD,kBAAC,IAAMgH,SAAP,0FAMJ,kBAAC,GAAD,CACElK,KAAMH,EAAMG,KACZO,OAAQV,EAAMU,OACdgD,WAAY1D,EAAM0D,WAClBuY,wBAAyBjc,EAAMujB,KAAKO,gBAAkB9jB,EAAMujB,KAAKO,eAAe3I,kBAAkBlS,QAEpG,kBAAC6C,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAC5B,kBAAC7Y,EAAA,EAAD,CAAa0R,cAAY,GAAzB,kBAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GACnD1X,EAAMujB,KAAKQ,aAAgD,iBAAjC/jB,EAAMujB,KAAKQ,YAAY1gB,OAChD,kBAAC,IAAMgH,SAAP,yCACiC,8BAAOrK,EAAMujB,KAAKQ,YAAYxH,eAAetT,OAD9E,sBAEiB,uBAAGD,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,gDAAlD,mBAFjB,KAKDnL,EAAMujB,KAAKQ,aAAiD,iBAAlC/jB,EAAMujB,KAAKQ,YAAY1gB,OAEhD,kBAAC,IAAMgH,SAAP,oFAMJ,kBAAC,GAAD,CACElK,KAAMH,EAAMG,KACZO,OAAQV,EAAMU,OACdgD,WAAY1D,EAAM0D,WAClB+Y,qBAAsBzc,EAAMujB,KAAKQ,aAAe/jB,EAAMujB,KAAKQ,YAAYxH,eAAetT,QAExF,kBAAC6C,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAE5B,kBAAC7Y,EAAA,EAAD,CAAa0R,cAAY,GAAzB,0BAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GACnD1X,EAAMujB,KAAKS,qBAAgE,iBAAzChkB,EAAMujB,KAAKS,oBAAoB3gB,OAChE,kBAAC,IAAMgH,SAAP,iDACyC,8BAAOrK,EAAMujB,KAAKS,oBAAoBrH,uBAAuB1T,OADtG,sBAEiB,uBAAGD,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,wDAAlD,2BAFjB,KAKDnL,EAAMujB,KAAKS,qBAAgE,iBAAzChkB,EAAMujB,KAAKS,oBAAoB3gB,OAEhE,kBAAC,IAAMgH,SAAP,oGAMJ,kBAAC,GAAD,CACElK,KAAMH,EAAMG,KACZO,OAAQV,EAAMU,OACdgD,WAAY1D,EAAM0D,WAClBmZ,6BAA8B7c,EAAMujB,KAAKS,qBAAuBhkB,EAAMujB,KAAKS,oBAAoBrH,uBAAuB1T,QAExH,kBAAC6C,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,WAI9B,kBAACa,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAChC,kBAAC5J,EAAA,EAAD,CAAa0R,cAAY,GAAzB,aAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,KAAtC,0EAGA,kBAAC,GAAD,CAAkB2X,OAAO,YAAYzd,KAAMH,EAAMG,OACjD,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAC5B,kBAAC7Y,EAAA,EAAD,CAAa0R,cAAY,GAAzB,gBAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,KAAtC,0EAGA,kBAAC,GAAD,CAAkB2X,OAAO,eAAezd,KAAMH,EAAMG,OACpD,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAC5B,kBAAC7Y,EAAA,EAAD,CAAY0R,cAAY,GAAxB,yBAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,KAAtC,sFAIA,kBAAC,GAAD,CAAkB2X,OAAO,gBAAgBzd,KAAMH,EAAMG,OACrD,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,WAG9B,kBAACa,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAChC,kBAAC5J,EAAA,EAAD,CAAYe,UAAWC,YAAKnB,EAAQoV,UAAWxQ,MAAM,iBACjD8V,EAAM,EAAS,YAAc,IAEjC,kBAACva,EAAA,EAAD,CAAYrD,MAAO,CAAC4H,cAAe,eAC/BgW,EAAM,EAAUA,EAAM,EAAM3Y,QAAQ,IAAK,KAAKA,QAAQ,MAAO,OAAU,aAE3E,kBAACqW,GAAD,CAAeG,QAAQ,IAAIje,KAAMH,EAAMG,OACvC,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAE5B,kBAAC7Y,EAAA,EAAD,CAAYe,UAAWC,YAAKnB,EAAQoV,UAAWxQ,MAAM,iBACjD8V,EAAM,EAAS,YAAc,IAEjC,kBAACva,EAAA,EAAD,CAAYrD,MAAO,CAAC4H,cAAe,eAC/BgW,EAAM,EAAUA,EAAM,EAAM3Y,QAAQ,IAAK,KAAKA,QAAQ,MAAO,OAAU,aAE3E,kBAACqW,GAAD,CAAeG,QAAQ,IAAIje,KAAMH,EAAMG,OACvC,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAE5B,kBAAC7Y,EAAA,EAAD,CAAYe,UAAWC,YAAKnB,EAAQoV,UAAWxQ,MAAM,iBACjD8V,EAAM,EAAS,YAAc,IAEjC,kBAACva,EAAA,EAAD,CAAYrD,MAAO,CAAC4H,cAAe,eAC/BgW,EAAM,EAAUA,EAAM,EAAM3Y,QAAQ,IAAK,KAAKA,QAAQ,MAAO,OAAU,aAG3E,kBAACqW,GAAD,CAAeG,QAAQ,IAAIje,KAAMH,EAAMG,OACvC,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAE5B,kBAAC7Y,EAAA,EAAD,CAAYe,UAAWC,YAAKnB,EAAQoV,UAAWxQ,MAAM,iBACjD8V,EAAM,EAAS,YAAc,IAEjC,kBAACva,EAAA,EAAD,CAAYrD,MAAO,CAAC4H,cAAe,eAC/BgW,EAAM,EAAUA,EAAM,EAAM3Y,QAAQ,IAAK,KAAKA,QAAQ,MAAO,OAAU,aAE3E,kBAACqW,GAAD,CAAeG,QAAQ,IAAIje,KAAMH,EAAMG,OACvC,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,aAKlC,kBAAChd,EAAA,EAAD,CACEG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMwgB,EACNhf,QAjUwB,WAC1Bif,GAAgB,IAiUdpc,QAASke,EACThhB,iBAAkB,IAClBmiB,mBAAoB,IACpB9hB,IAAK,WAAanC,EAAMG,KAAO,cAOrC,SAASmhB,GAAT,GAAyD,IAAtB5gB,EAAqB,EAArBA,OAAQgD,EAAa,EAAbA,WAEnCmC,EAAUuC,KACVjI,EAAO,aAHyC,EAI9BD,oBAAS,GAJqB,mBAI/CK,EAJ+C,KAIzCC,EAJyC,OAK1BN,mBAAS,MALiB,mBAK/CS,EAL+C,KAKvC8a,EALuC,OAMdvb,oBAAS,GANK,mBAM/C6gB,EAN+C,KAMjCC,EANiC,OAOR9gB,mBAAS,IAPD,mBAO/C4iB,EAP+C,KAO9BC,EAP8B,OAQtB9iB,IAAMC,SAAS,GARO,mBAQ/C0hB,EAR+C,KAQrCC,EARqC,OAS9B5hB,IAAMC,SAAS,IATe,mBAS/CqjB,EAT+C,KASzCW,EATyC,KAYtDzjB,qBAAU,WAENkD,MAAM,4BACHM,MAAK,SAACC,GACH,GAAIA,EAAS0X,GACX,OAAO1X,EAASC,OAEhB,MAAM,IAAI0X,MAAM,2BAGrB5X,MAAK,SAACkgB,GACL,IADoB,EAChBC,EAAQ,GADQ,eAEFD,GAFE,IAEpB,2BAA6B,CAE3B,IAF4B,IAAnBpC,EAAkB,QACvBsC,EAAY,CAAChhB,MAAO,eAAgBogB,SAAU,CAAC7d,KAAMmc,EAAInc,KAAMma,QAASgC,EAAIhC,QAASpU,QAASoW,EAAIpW,QAAStC,YAAa0Y,EAAI1Y,YAAalH,IAAK4f,EAAIuC,SAAUZ,OAAO3B,EAAI2B,SACnKtc,EAAI,EAAGA,EAAI2a,EAAG,kBAAsBld,SAAUuC,EAAE,CACtD,IAAIgT,EAAQ2H,EAAG,kBAAsB3a,GACrCid,EAAUjK,EAAMjY,KAAO,CAAC8G,MAAOmR,EAAMC,QAAS9H,MAAO6H,EAAM7H,MAAO4G,KAAMiB,EAAMjB,KAAMhZ,KAAMia,EAAMja,MAAQ,KAAMwL,QAASyO,EAAMzO,QAAStC,YAAa+Q,EAAM/Q,aAE3J+a,EAAMrC,EAAIuC,UAAYD,GARJ,8BAUpBH,GAAQ,SAACK,GAAD,oBAAC,gBAAcA,GAASH,SAEjC9f,OAAM,SAACkL,SAGX,IAGH/O,qBAAU,WAKR,IAAIE,EAJCD,EAAO,uBAMVC,EADED,EAAOE,QAAUF,EAAOE,OAAOC,OACxB,IAAIC,SAAJ,eACCJ,EAAOE,OAAOC,OADf,KAEP,iCAAmCE,KAAKC,UAGjC,IAAIF,SAAJ,UACJJ,EAAO,oBAAP,gBAAgD,KACnD,iCAAmCK,KAAKC,WAGrCC,QAAQ,CAACK,QAAS,IAAKC,WAAW,IACzCka,EAAU9a,MACV,CAACD,IAOH,SAASsiB,EAAsBjB,EAAK1e,GAClC,OAAO,SAASmhB,IACd,IAAI5f,EAAU,IAAIwX,UAAQvN,OAAOxL,IACjCuB,EAAQiQ,gBAAkB,CACxB,aACA1U,EACAuD,EACAqe,EAAI0B,SAASthB,IACb,SACA,OACAf,KAAK,KACPwD,EAAQvD,IAAM,EACd,IACEV,EAAO0b,QAAQzX,GAEjB,MAAOL,GACLC,QAAQC,IAAIF,GACZkgB,YAAW,WAAOD,MAAgB,KALpC,QAaEzB,EAAmB,GAAD,OALJ,CACZ,SAAa,UACb,aAAiB,WACjB,MAAU,YAEgB1f,GAAV,YAAoB0e,EAAI0B,SAAS7d,KAAK8e,cAAtC,+BAClB1D,GAAgB,KAKtB,SAASc,EAAmBC,GAC1B,OAAO,WACLgB,EAAmB,YAAD,OAAahB,EAAI0B,SAAS7d,KAAK8e,cAA/B,+BAClB1D,GAAgB,GAChBrd,MAAM,QAAUoe,EAAI0B,SAASthB,IAAM,IAAMhC,EAAM,CAAC+I,OAAQ,UAyB5D,SAASka,EAA4B7e,GACrB,UAAVA,EAAEpC,OArBR,SAAS8gB,EAAqBE,EAAUla,GACtC,IAAIrE,EAAU,IAAIwX,UAAQvN,OAAO5F,IACjCrE,EAAQiQ,gBAAkB,CACxB,aACA1U,EACAuD,EACAyf,EACA,OACA/hB,KAAK,KACPwD,EAAQvD,IAAM,EACd,IACEV,EAAO0b,QAAQzX,GACfoc,GAAgB,GAElB,MAAOzc,GACLC,QAAQC,IAAIF,GACZ5D,EAAOM,QAAQ,CAACC,UAAW,kBAAM+hB,EAAqBE,EAAUla,OAMhEga,CAAqB1e,EAAEyE,OAAO+B,GAAIxG,EAAEyE,OAAOC,OAC3C8Z,EAAmB,cAAD,OAAexe,EAAEyE,OAAOC,MAAxB,MAClB+X,GAAgB,IAkBpB,SAASkB,EAA8BH,GACrC,OAAQ,yBAAK5f,IAAK4f,EAAI5f,KAClB,kBAACmI,EAAA,EAAD,CACEvD,UAAWlB,EAAQiZ,UACnB4C,kBAAgB,EAChBjX,MAAM,UACNC,QAASoX,EAAmBC,IAJ9B,SAQA,kBAACzX,EAAA,EAAD,CACEvD,UAAWlB,EAAQiZ,UACnB4C,kBAAgB,EAChBjX,MAAM,UACNC,QAASsY,EAAsBjB,EAAK,aAJtC,SAQA,kBAACzX,EAAA,EAAD,CACEvD,UAAWlB,EAAQiZ,UACnB4C,kBAAgB,EAChBjX,MAAM,UACNC,QAASsY,EAAsBjB,EAAK,UAJtC,UAQA,kBAACzX,EAAA,EAAD,CACEvD,UAAWlB,EAAQiZ,UACnB4C,kBAAgB,EAChBjX,MAAM,YACNC,QAASsY,EAAsBjB,EAAK,iBAJtC,SAYN,IAAMsB,EAAU7U,OAAO8U,YAAY9U,OAAOH,QAAQkV,GAAMpc,KAAK,WAAiBC,GAAjB,6BAAuB,CAAvB,KAAiC8a,EAAjC,WAG7D,OACE,kBAAC,IAAM7X,SAAP,KACA,kBAACC,EAAA,EAAD,CAAQ3H,MAAO,CAAC4H,cAAe,OAAQC,MAAO,SAAWE,QAzDnC,WACtBlK,GAAQ,IAwD2EiK,MAAM,WACvF,kBAAC,KAAD,CAAc1D,UAAWlB,EAAQ4C,WADnC,2BAGA,kBAACkC,GAAA,EAAD,CAAQpK,KAAMA,EAAMwB,QAxDF,WAClB8f,EAAY,GACZrhB,GAAQ,IAsDkCoK,kBAAgB,qBACxD,kBAACE,GAAA,EAAD,CAAanI,MAAO,CAACsF,gBAAiB,YACpC,kBAACjC,EAAA,EAAD,CAAYe,UAAWlB,EAAQoV,UAA/B,0BAGF,kBAACmH,GAAA,EAAD,CACEnZ,MAAO2Y,EACP9X,SA3IkB,SAACoP,EAAOmJ,GAC9BR,EAAYQ,IA2IRC,eAAe,UACfC,UAAU,UACV/f,QAAQ,aACRggB,cAAc,QAEd,kBAACC,GAAA,EAAD,CAAKlQ,MAAM,eACX,kBAACkQ,GAAA,EAAD,CAAKlQ,MAAM,aACX,kBAACkQ,GAAA,EAAD,CAAKlQ,MAAM,WACX,kBAACkQ,GAAA,EAAD,CAAKlQ,MAAM,WAGb,kBAACvH,GAAA,EAAD,KAEE,kBAAC0U,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAC/BpB,OAAOH,QAAQkV,GACb/O,QAAO,oDAAwBiP,SAAS9X,WACxCxE,KAAI,mCAAEqc,EAAF,KAAWzB,EAAX,YACL,yBAAK5f,IAAKqhB,GACR,kBAACxd,EAAA,EAAD,CAAY0R,cAAY,GACrBqK,EAAI0B,SAAS7d,MAEhB,kBAACI,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GACpD,yBAAKiM,wBAAyB,CAACC,OAAQ7B,EAAI0B,SAASpa,gBAGrDga,EAAQG,GAET,kBAAC1X,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,eAKlC,kBAACa,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAC/BpB,OAAO0G,OAAOqO,GACZ/O,QAAO,SAAAuN,GAAG,OAAIA,EAAI0B,SAAS9X,WAC3BxE,KAAI,SAAA4a,GAAG,OACRvT,OAAOH,QAAQ0T,GACZvN,QAAO,mCAAErS,EAAF,gBAA6B,UAARA,GAA6B,aAARA,KACjDqS,QAAO,oDAA0B7I,WACjCxE,KAAI,mCAAEhF,EAAF,KAAOga,EAAP,YACP,kBAAC,IAAM9R,SAAP,KACE,kBAACrE,EAAA,EAAD,CAAa0R,cAAY,GACtByE,EAAQ5J,OAEX,kBAACvM,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,KACnCkW,EAAQ9S,aAEX,kBAACoR,GAAA,EAAD,CACE/T,KAAK,QACLqE,GAAE,UAAKgX,EAAI0B,SAASthB,IAAIyF,QAAQ,WAAY,eAA1C,YAA4DzF,GAC9DuY,aAAcyB,EAAQlT,MACtB0R,WAAY,CACVC,aAAc,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OAAOqB,EAAQhc,OAExDqC,QAAQ,WACRqhB,WAAYT,EACZrc,UAAWlB,EAAQkU,mBAErB,kBAACjO,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,iBAKhC,kBAAC7Y,EAAA,EAAD,CAAa0R,cAAY,GAAzB,qBAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GAAtD,oBACqB,uBAAG1O,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,mDAAlD,sBADrB,KAIA,kBAAC,GAAD,CACEhL,KAAMA,EACNO,OAAQA,EACRgD,WAAYA,EACZuY,yBAAyB,EACzBxU,MAAM,2BAER,kBAACqE,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAC5B,kBAAC7Y,EAAA,EAAD,CAAa0R,cAAY,GAAzB,kBAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GAAtD,oBACqB,uBAAG1O,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,gDAAlD,mBADrB,KAIA,kBAAC,GAAD,CACEhL,KAAMA,EACNO,OAAQA,EACRgD,WAAYA,EACZ+Y,sBAAsB,EACtBhV,MAAM,2BAER,kBAACqE,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAC5B,kBAAC7Y,EAAA,EAAD,CAAa0R,cAAY,GAAzB,0BAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,IAAIyR,cAAY,GAAtD,oBACqB,uBAAG1O,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,wDAAlD,2BADrB,KAIA,kBAAC,GAAD,CACEhL,KAAMA,EACNO,OAAQA,EACRgD,WAAYA,EACZmZ,8BAA8B,EAC9BpV,MAAM,2BAER,kBAACqE,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,WAG9B,kBAACa,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAChC,kBAAC5J,EAAA,EAAD,CAAa0R,cAAY,GAAzB,aAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,KAAtC,2EAGA,kBAAC,GAAD,CAAkB2X,OAAO,YAAYzd,KAAMA,IAC3C,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAC5B,kBAAC7Y,EAAA,EAAD,CAAY0R,cAAY,GAAxB,yBAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,KAAtC,uFAIA,kBAAC,GAAD,CAAkB2X,OAAO,gBAAgBzd,KAAMA,IAC/C,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAC5B,kBAAC7Y,EAAA,EAAD,CAAa0R,cAAY,GAAzB,gBAGA,kBAAC1R,EAAA,EAAD,CAAYxD,QAAQ,QAAQyD,UAAU,KAAtC,2EAGA,kBAAC,GAAD,CAAkB2X,OAAO,eAAezd,KAAMA,IAC9C,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,WAG9B,kBAACa,GAAD,CAAUzW,MAAO2Y,EAAUhS,MAAO,GAChC,kBAAC5J,EAAA,EAAD,CAAYrD,MAAO,CAAC4H,cAAe,eAAnC,aAGA,kBAAC0T,GAAD,CAAeG,QAAQ,IAAIje,KAAMA,IACjC,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAE5B,kBAAC7Y,EAAA,EAAD,CAAYrD,MAAO,CAAC4H,cAAe,eAAnC,aAGA,kBAAC0T,GAAD,CAAeG,QAAQ,IAAIje,KAAMA,IACjC,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAE5B,kBAAC7Y,EAAA,EAAD,CAAYrD,MAAO,CAAC4H,cAAe,eAAnC,aAGA,kBAAC0T,GAAD,CAAeG,QAAQ,IAAIje,KAAMA,IAEjC,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAC5B,kBAAC7Y,EAAA,EAAD,CAAYrD,MAAO,CAAC4H,cAAe,eAAnC,aAGA,kBAAC0T,GAAD,CAAeG,QAAQ,IAAIje,KAAMA,IAEjC,kBAAC2L,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,aAMlC,kBAAChd,EAAA,EAAD,CACEG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMwgB,EACNhf,QAtOwB,WAC1Bif,GAAgB,IAsOdpc,QAASke,EACThhB,iBAAkB,IAClBmiB,mBAAoB,IACpB9hB,IAAK,WAAahC,EAAO,cAO/B,SAASwkB,GAAY3kB,GACnB,OACA,kBAAC,IAAMqK,SAAP,KACE,yBAAK1H,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,gBAAiBpD,aAAc,OAAQ6N,UAAW,SAC9F,kBAACrQ,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,qBAAhB,uBAIF,+BAIDnG,EAAM4kB,MAAMzd,KAAI,SAAAhH,GAAI,OACnB,kBAAC0kB,GAAD,CAAgB1E,cAAc,EAAMhe,IAAKhC,EAAMA,KAAMA,EAAMO,OAAQV,EAAMU,OAAQgD,WAAY1D,EAAM0D,iBAMzG,SAASohB,GAAe9kB,GACtB,IAAM6F,EAAUuC,KADY,EAGIlI,oBAAS,GAHb,mBAGrB6kB,EAHqB,KAGXC,EAHW,KA+B5B,OACE,kBAAC1a,EAAA,EAAD,CAAQ3H,MAAO,CAAC4H,cAAe,OAAQC,MAAO,SAAUzD,UAAWC,YAAK,CAACie,SAAUF,IAAYlb,SAAU7J,EAAM6J,SAAUa,QA1B3G,WACdsa,GAAY,IACQ,SAAdR,IACJ,IAAI5f,EAAU,IAAIwX,UAAQ,KAC1BxX,EAAQiQ,gBAAkB,CACxB,aACA7U,EAAMG,KACN,cACA,UACA,eACAiB,KAAK,KACPwD,EAAQvD,IAAM,EACd,IACErB,EAAMW,OAAO0b,QAAQzX,GAEvB,MAAOL,GACLC,QAAQC,IAAIF,GACZkgB,YAAW,WAAOD,MAAgB,MAItCA,GACAC,YAAW,WAAOO,GAAY,KAAS,OAIoGva,MAAM,WAC/I,kBAAC,KAAD,CAAWA,MAAOzK,EAAM6J,SAAW,WAAa,UAAW9C,UAAWlB,EAAQ4C,WADhF,IAC4F,4CAKhG,SAASoc,GAAe7kB,GACtB,IAAM6F,EAAUuC,KACVjI,EAAOH,EAAMG,KACbggB,EAAengB,EAAMmgB,aACrBzc,EAAa1D,EAAM0D,WACnBhD,EAASV,EAAMU,OALO,EAMcR,oBAAS,GANvB,mBAMrBglB,EANqB,KAMNC,EANM,OAQAjlB,mBAAS,MART,mBAQrBS,EARqB,KAQb8a,EARa,OASJvb,mBAAS,CAC/BklB,QAAS,CACP/hB,MAAQ,eAAgBogB,SAAU,CAAC9X,SAAS,MAXpB,mBASrB4X,EATqB,KASfW,EATe,KAiB5BzjB,qBAAU,WAENkD,MAAM,4BACHM,MAAK,SAACC,GACH,GAAIA,EAAS0X,GACX,OAAO1X,EAASC,OAEhB,MAAM,IAAI0X,MAAM,2BAGrB5X,MAAK,SAACkgB,GACL,IADoB,EAChBC,EAAQ,GADQ,eAEFD,GAFE,IAEpB,2BAA6B,CAE3B,IAF4B,IAAnBpC,EAAkB,QACvBsC,EAAY,CAAChhB,MAAO,eAAgBogB,SAAU,CAAC7d,KAAMmc,EAAInc,KAAMma,QAASgC,EAAIhC,QAASpU,QAASoW,EAAIpW,QAAStC,YAAa0Y,EAAI1Y,YAAalH,IAAK4f,EAAIuC,SAAUZ,OAAQ3B,EAAI2B,SACpKtc,EAAI,EAAGA,EAAI2a,EAAG,kBAAsBld,SAAUuC,EAAE,CACtD,IAAIgT,EAAQ2H,EAAG,kBAAsB3a,GACrCid,EAAUjK,EAAMjY,KAAO,CAAC8G,MAAOmR,EAAMC,QAAS9H,MAAO6H,EAAM7H,MAAO4G,KAAMiB,EAAMjB,KAAMhZ,KAAMia,EAAMja,MAAQ,KAAMwL,QAASyO,EAAMzO,QAAStC,YAAa+Q,EAAM/Q,aAE3J+a,EAAMrC,EAAIuC,UAAYD,GARJ,8BAUpBH,GAAQ,SAACK,GAAD,oBAAC,gBAAcA,GAASH,MAChCe,GAAiB,MAElB7gB,OAAM,SAACkL,SAGX,IAEH/O,qBAAU,WACR,IAyCIE,EAZCX,EAAMU,OAAO,sBAIbyf,GAIAzc,KAMH/C,EADEX,EAAMU,OAAOE,QAAUZ,EAAMU,OAAOE,OAAOC,OACpC,IAAIC,SAAJ,eACCd,EAAMU,OAAOE,OAAOC,OADrB,KAEP,QAAUE,KAAKC,UAGR,IAAIF,SAAJ,UACJd,EAAMU,OAAO,oBAAb,gBAAsD,KACzD,QAAUK,KAAKC,WAGZQ,iBAvCkB,SAACoD,GACxB,IAAIygB,EAAclW,WAAWvK,EAAQlD,eACjCqD,EAAUugB,MAAMD,GAAezgB,EAAQlD,cAAgB2jB,EAFvB,EAGfzgB,EAAQjD,MAAMC,MAAM,KAAK8N,OAAO,GAHjB,mBAG/BqS,EAH+B,KAG1B5F,EAH0B,KAIpB,WAAZA,EACF+H,GAAQ,SAACK,GAAD,oBAAC,gBAAcA,GAAf,kBAAsBxC,EAAtB,aAAC,gBAA+BwC,EAAKxC,IAArC,IAA2C1e,MAAO0B,SACjDgd,EAAIwD,SAAS,gBAEtBxD,EAAMA,EAAIna,QAAQ,cAAe,YACjCsc,GAAQ,SAACK,GAAD,oBAAC,gBAAcA,GAAf,kBAAsBxC,EAAtB,aAAC,gBAA+BwC,EAAKxC,IAArC,kBAA4C5F,EAA5C,aAAC,gBAAyDoI,EAAKxC,GAAK5F,IAApE,IAA8ElT,MAAOlE,YAE7Fmf,GAAQ,SAACK,GAAD,oBAAC,gBAAcA,GAAf,kBAAsBxC,EAAtB,aAAC,gBAA+BwC,EAAKxC,IAArC,kBAA4C5F,EAA5C,aAAC,gBAAyDoI,EAAKxC,GAAK5F,IAApE,IAA8ElT,MAAOlE,YA6BjGpE,EAAOM,QAAQ,CAACC,UAtDE,WAChBP,EAAOQ,UAAU,CAAC,aAAchB,EAAM,cAAe,UAAW,UAAUiB,KAAK,MAE/E,cAAkBoN,OAAOC,KAAK8U,GAA9B,eAAqC,CAAhC,IAAMxB,EAAG,KACZ,GAAY,YAARA,EAAJ,CACAphB,EAAOQ,UAAU,CAAC,aAAchB,EAAMuD,EAAYqe,EAAK,UAAU3gB,KAAK,MACtE,cAAsBoN,OAAOC,KAAK8U,EAAKxB,IAAvC,eAA6C,CAAxC,IAAM5F,EAAO,KACC,UAAZA,GAAqC,aAAZA,GAC5Bxb,EAAOQ,UAAU,CAAC,aAAchB,EAAMuD,EAAYyY,EAAQoJ,SAAS,eAAiBxD,EAAMA,EAAIna,QAAQ,WAAY,eAAgBuU,GAAS/a,KAAK,UA8ClHG,WAAW,IACjDka,EAAU9a,OACV,CAACD,EAAQgD,EAAYwhB,EAAe/E,IAEtC,IAAMqF,EAA4C,iBAAvBjC,EAAK6B,QAAQ/hB,MA7/CjB,OA6/CyF,SAAvBkgB,EAAK6B,QAAQ/hB,MA5/CxF,UAFG,UA+/CXoiB,EAA6C,iBAAvBlC,EAAK6B,QAAQ/hB,MAA4B,EAAI,EACnEqiB,EAAyC,iBAAvBnC,EAAK6B,QAAQ/hB,MAA6B8c,EAAe,4BAA8B,iDAA6E,SAAvBoD,EAAK6B,QAAQ/hB,MAAoB,gCAAkC,SAGxO,OACE,kBAACyC,EAAA,EAAD,CAAMiB,UAAWlB,EAAQwY,eAAgBtT,GAAI5K,GAE3C,kBAAC2F,EAAA,EAAD,CAAaiB,UAAWlB,EAAQyC,aAC9B,yBAAKvB,UAAW,SACd,kBAACf,EAAA,EAAD,CAAYe,UAAWC,YAAKnB,EAAQoV,UAAWxQ,MAAM,iBACjDzK,EAAMU,OAAO,cAAgBV,EAAMU,OAAO,aAAaP,GAASA,EAAO,IAE3E,yBAAKwC,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,kBAC5C,yBAAKjJ,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,SAC5C,kBAAC5F,EAAA,EAAD,CAAYe,UAAWC,YAAKnB,EAAQkV,UAAT,eAAsBlV,EAAQyY,cAAgB6B,IAAgBzI,cAAY,GACnG,kBAAC,GAAD,CAAgBjN,MAAO0V,EAAe,UAAY,WAAYxd,MAAO,CAAC+F,cAAe,YACnF1I,EAAMU,OAAO,cAAgBV,EAAMU,OAAO,aAAaP,GAASH,EAAMU,OAAO,aAAaP,GAAQA,GAEtG,kBAACwlB,GAAA,EAAD,CAASle,MAAOie,EAAgBE,UAAU,SACxC,6BACE,yBAAKjf,aAAY+e,EAAgB3e,UAAU,gBAAgBpE,MAAO,CAACkjB,UAAU,OAAD,OAASJ,EAAT,cAAiCD,EAAjC,6BAAuEA,SAIzJ,yBAAK7iB,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,WAAY0T,cAAe,MAAOC,SAAU,SACxF,6BACE,kBAACuF,GAAD,CAAgBnkB,OAAQA,EAAQkJ,UAAWsW,EAAczf,OAAQV,EAAMU,OAAQP,KAAMA,KAEvF,6BACE,kBAACwhB,GAAD,CACEjhB,OAAQV,EAAMU,OACdC,OAAQA,EACRgiB,eAAgBY,EAAI,SAAeA,EAAI,SAAauC,KAAK7c,MAAQ,KACjEkZ,gBAAiBoB,EAAI,SAAeA,EAAI,SAAalgB,MAAQ,KAC7Dqf,iBAAkBa,EAAI,SAAeA,EAAI,SAAalgB,MAAQ,KAC9DK,WAAYA,EACZvD,KAAMA,EACN0J,UAAWsW,KAGf,kBAAC0C,GAAD,CACEniB,OAAQV,EAAMU,OACdC,OAAQA,EACRR,KAAMA,EACN0J,UAAWsW,EACXzc,WAAYA,EACZ6f,KAAMA,OAOhB,yBAAK5gB,MAAO,CACRgJ,QAAS,OACThD,OAAQ,qBACR2W,cAAe,QAEjB,yBAAKvY,UAAWlB,EAAQ2Y,cACtB,kBAACxY,EAAA,EAAD,CAAYxD,QAAQ,SAClB,kBAAC0D,EAAA,EAAD,CAAKC,WAAW,iBAAiBY,UAAWC,YAAK,eAAEnB,EAAQyY,cAAgB6B,KAA3E,iBAKJ,yBACCpZ,UAAWlB,EAAQwZ,yBAEjB7Q,OAAO0G,OAAOqO,GACV/O,QAAO,SAAAuN,GAAG,OAAIA,EAAI0B,SAAS9X,WAC3BxE,KAAI,SAAA4a,GAAG,OACV,yBAAKhb,UAAWlB,EAAQ0Y,QAASpc,IAAK4f,EAAI0B,SAASthB,KACjD,kBAAC6D,EAAA,EAAD,CAAYxD,QAAQ,QAAQG,MAAO,CAACC,SAAU,WAAYmE,UAAWC,YAAK,eAAEnB,EAAQyY,cAAgB6B,KACjG4B,EAAI0B,SAAS7d,MAEhB,kBAACoa,GAAD,CACE/W,MAAO8Y,EAAI1e,MACX8c,aAAcA,EACd9F,QAAQ,eACR0F,QAASgC,EAAI0B,SAAS1D,QAAUgC,EAAIA,EAAI0B,SAAS1D,SAAS9W,MAAQ,KAClEiX,gBAAc,UAQxB,kBAACpU,EAAA,EAAD,MAEA,yBAAKnJ,MAAO,CACRgJ,QAAS,OACThD,OAAQ,qBACR2W,cAAe,QAEjB,yBAAKvY,UAAWlB,EAAQ2Y,cACtB,kBAACxY,EAAA,EAAD,CAAYxD,QAAQ,SAClB,kBAAC0D,EAAA,EAAD,CAAKC,WAAW,iBAAiBY,UAAWC,YAAK,eAAEnB,EAAQyY,cAAgB6B,KAA3E,eAKJ,yBACCpZ,UAAWlB,EAAQwZ,yBAEjB7Q,OAAO0G,OAAOqO,GAAMpc,KAAI,SAAA4a,GAAG,OAC1BvT,OAAOH,QAAQ0T,GACZvN,QAAO,mCAAErS,EAAF,gBAA6B,UAARA,GAA6B,aAARA,KACjDqS,QAAO,oDAA0B7I,WACjCxE,KAAI,mCAAEhF,EAAF,KAAOga,EAAP,YACP,yBAAKpV,UAAWlB,EAAQ0Y,QAASpc,IAAK4f,EAAI0B,SAASthB,IAAMA,GACvD,kBAAC6D,EAAA,EAAD,CAAYxD,QAAQ,QAAQG,MAAO,CAACC,SAAU,WAAYmE,UAAWC,YAAK,eAAEnB,EAAQyY,cAAgB6B,KACjGhE,EAAQ5J,OAEX,kBAACyN,GAAD,CACE/W,MAAOkT,EAAQlT,MACfkX,aAAcA,EACdU,gBAAiB1E,EAAQhc,KACzBygB,UAAW,EACXvG,QAAQ,SACRgG,eAAkC,kBAAlBlE,EAAQ5J,MACxB7R,OAAQV,EAAMU,oBAa9B,SAASqlB,GAAc/lB,GAErB,OACA,kBAAC,IAAMqK,SAAP,KACE,yBAAK1H,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,gBAAiBpD,aAAc,OAAQ6N,UAAW,SAC9F,kBAACrQ,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,qBAAhB,0BAKHnG,EAAM4kB,MAAMzd,KAAI,SAAAhH,GAAI,OACnB,kBAAC0kB,GAAD,CAAgB1E,cAAc,EAAOhe,IAAKhC,EAAMA,KAAMA,EAAMO,OAAQV,EAAMU,OAAQgD,WAAY1D,EAAM0D,iBAsC3FsiB,OAjCf,YAAuC,IAAjBve,EAAgB,EAAhBA,MAAO/G,EAAS,EAATA,OAAS,EACkBT,IAAMC,SAAS,IADjC,mBAC3BqL,EAD2B,KACPoK,EADO,KAGlC1V,IAAMQ,WAAU,WAAM,4CAEpB,sBAAA2U,EAAA,sEACWzR,MAAM,0BACZM,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLuR,EAAsBvR,MAN5B,4CAFoB,sBACpBwR,SAASnO,MAAQA,EADG,mCAWpBoO,KACC,CAACpO,IAEJ,IAAM4G,EAAU,SAAC+G,GAAD,OAAO5G,OAAOH,QAAQ+G,IAEtC,OACI,kBAACU,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAGvB,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC4H,GAAI,GAAID,GAAI,IACrB,kBAACmL,GAAD,CAAkB3gB,OAAQA,EAAQgD,WAAY6H,EAAmB7H,aACjE,kBAACihB,GAAD,CAAajhB,WAAY6H,EAAmB7H,WAAYhD,OAAQA,EAAQkkB,MAAOlkB,EAAO,qBAAuB2N,EAAQ3N,EAAO,sBAAsB8T,QAAO,SAAClG,GAAD,MAAgB,MAATA,EAAE,MAAYnH,KAAI,SAACmH,GAAD,OAAOA,EAAE,MAAM,KACjM,kBAACyX,GAAD,CAAeriB,WAAY6H,EAAmB7H,WAAYhD,OAAQA,EAAQkkB,MAAOlkB,EAAO,qBAAuB2N,EAAQ3N,EAAO,sBAAsB8T,QAAO,SAAClG,GAAD,MAAgB,MAATA,EAAE,MAAYnH,KAAI,SAACmH,GAAD,OAAOA,EAAE,MAAM,MAEpM5N,EAAO,aAAe,kBAAC,EAAD,CAA2BA,OAAQA,IAAY,O,kDCntD1E0H,GAAYC,cAAW,SAACN,GAAD,MAAY,CACvCgE,KAAM,CACJzF,MAAO,QAET2f,OAAQ,CACN5P,UAAWtO,EAAMiO,QAAQ,GACzBnK,YAAa9D,EAAMiO,QAAQ,IAE7BkQ,iBAAkB,CAChB1d,aAAcT,EAAMiO,QAAQ,IAE9BmQ,eAAgB,CACdne,QAASD,EAAMiO,QAAQ,IAEzBoQ,gBAAiB,CACf5d,aAAcT,EAAMiO,QAAQ,QAMhC,SAASqQ,GAAYrmB,GACnB,IAAM6F,EAAUuC,KACVke,EAAStmB,EAAMsmB,OAFK,EAGQrmB,IAAMC,UAAS,GAHvB,mBAGnBqb,EAHmB,KAGRC,EAHQ,KAiC1B,OACE,yBAAKzU,UAAWlB,EAAQugB,iBACtB,2BAAIpmB,EAAMumB,eACV,kCAAO,2BAAID,GAAX,iHAAqIA,EAArI,iBACA,kBAAChc,EAAA,EAAD,CAAQvD,UAAWlB,EAAQogB,OAAQzjB,QAAQ,YAAYiI,MAAO8Q,EAAY,UAAY,UAAY7Q,QAhCrF,WACf/G,MAAM,+BAAgC,CAClCuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAACgU,SAAU,GAAIoJ,WAAY,MAChDld,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGtB3F,MAAM,4BAA6B,CAC/BuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAACgU,SAAU,GAAIoJ,WAAY,KAChDld,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGtB3F,MAAM,gCAAiC,CACnCuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAACgU,SAAU,GAAIoJ,WAAY,KAChDld,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGtBkS,GAAa,KAOX,SAA4H8K,IAMlI,SAASG,GAAWzmB,GAClB,IAAM6F,EAAUuC,KACVse,EAAQ1mB,EAAM2mB,SAFK,EAGS1mB,IAAMC,UAAS,GAHxB,mBAGlBqb,EAHkB,KAGPC,EAHO,KAoCzB,OACE,yBAAKzU,UAAWlB,EAAQugB,iBACtB,sDAA4BM,EAAQ,OAAS,GAA7C,wBAAsEA,EAAQ,OAAS,GAAvF,UACA,oEAA0CA,EAAQ,OAAS,GAA3D,0CAAsGA,EAAQ,OAAS,GAAvH,kEACA,kBAACpc,EAAA,EAAD,CAAQvD,UAAWlB,EAAQogB,OAAQzjB,QAAQ,YAAYiI,MAAO8Q,EAAY,UAAY,UAAY7Q,QAnCrF,WACf/G,MAAM,+BAAgC,CAClCuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAACgU,SAAU,GAAIoJ,WAAY,MAChDld,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGlBod,EACF/iB,MAAM,gCAAiC,CACrCuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAACgU,SAAU,GAAIoJ,WAAY,KAChDld,QAAS,CACP,OAAU,mBACV,eAAgB,sBAIpB3F,MAAM,4BAA6B,CACjCuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAACgU,SAAU,GAAIoJ,WAAY,KAChDld,QAAS,CACP,OAAU,mBACV,eAAgB,sBAItBkS,GAAa,KAOX,OAA0HkL,EAAQ,OAAS,GAA3I,0BAKN,SAASE,GAAsB5mB,GAC7B,IAAM6F,EAAUuC,KADoB,EAEFnI,IAAMC,UAAS,GAFb,mBAE7Bqb,EAF6B,KAElBC,EAFkB,KAiBpC,OACE,yBAAKzU,UAAWlB,EAAQugB,iBACtB,8EACA,kBAAC9b,EAAA,EAAD,CAAQvD,UAAWlB,EAAQogB,OAAQzjB,QAAQ,YAAYiI,MAAO8Q,EAAY,UAAY,UAAY7Q,QAfrF,WACf/G,MAAM,4BAA6B,CAC/BuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAAC0U,GAAI,KAC1BxU,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGtBkS,GAAa,KAMX,sBA4CS,SAASqL,KACtB,IAAMhhB,EAAUuC,KAD8B,EAEVnI,IAAMC,SAAS,GAFL,mBAEvC4mB,EAFuC,KAE3BC,EAF2B,KAGxCC,EAxCC,CACL,iCACA,qBACA,sBACA,0BACA,oBACA,wBACA,gBACA,8BAkCIC,EAAa,WACjBF,GAAc,SAACG,GAAD,OAAoBA,EAAiB,MAG/CC,EAAa,WACjBJ,GAAc,SAACG,GAAD,OAAoBA,EAAiB,MAOrD,OACE,yBAAKngB,UAAWlB,EAAQkG,MACtB,kBAACqb,GAAA,EAAD,CAASN,WAAYA,EAAY9U,YAAY,YAC1CgV,EAAM7f,KAAI,SAACoL,EAAO3C,GAAR,OACT,kBAACyX,GAAA,EAAD,CAAMllB,IAAKoQ,GACT,kBAAC+U,GAAA,EAAD,KAAY/U,GACZ,kBAACgV,GAAA,EAAD,KACE,kBAACvhB,EAAA,EAAD,KAjDd,SAAwBwhB,GACtB,OAAQA,GACN,KAAK,EACH,MAAM,gVAGR,KAAK,EACH,OAAO,kBAACnB,GAAD,CAAaC,OAAQ,wBAC9B,KAAK,EACH,OAAO,kBAACD,GAAD,CAAaE,cAAe,kHAAmHD,OAAQ,gBAChK,KAAK,EACH,OAAO,kBAACD,GAAD,CAAaC,OAAQ,oBAC9B,KAAK,EACH,OAAO,kBAACG,GAAD,MACT,KAAK,EACH,OAAO,kBAACA,GAAD,CAAYE,UAAU,IAC/B,KAAK,EACH,MAAM,yIACR,KAAK,EACH,OAAO,kBAACC,GAAD,MACT,QACE,MAAO,gBA4Bca,CAAe7X,IAC5B,yBAAK7I,UAAWlB,EAAQqgB,kBACpB,kBAAC5b,EAAA,EAAD,CACET,SAAyB,IAAfid,EACVpc,QAASyc,EACTpgB,UAAWlB,EAAQogB,QAHrB,QAOA,kBAAC3b,EAAA,EAAD,CACE9H,QAAQ,YACRkI,QAASuc,EACTlgB,UAAWlB,EAAQogB,QAElBa,IAAeE,EAAMniB,OAAS,EAAI,SAAW,eAO3DiiB,IAAeE,EAAMniB,QACpB,kBAAC6iB,GAAA,EAAD,CAAOC,QAAM,EAACC,UAAW,EAAG7gB,UAAWlB,EAAQsgB,gBAC7C,kBAACngB,EAAA,EAAD,sDACA,kBAACsE,EAAA,EAAD,CAAQI,QAnCI,WAClBqc,EAAc,IAkCsBhgB,UAAWlB,EAAQogB,QAAjD,WC/NV,SAAS4B,GAAoB7nB,GAAO,IAAD,EAECC,IAAMC,UAAS,GAFhB,mBAE1Bqb,EAF0B,KAEfC,EAFe,OAGOvb,IAAMC,UAAS,GAHtB,mBAG1Bwd,EAH0B,KAGZC,EAHY,KAoBjC,OACE,6BACE,mKACA,kBAACrT,EAAA,EAAD,CAAQ9H,QAAQ,YAAaiI,MAAM,UAAUZ,WAAU0R,EAA2B7Q,QAlBtE,SAACnG,GACfiX,GAAa,GACb7X,MAAM,2BAA4B,CAC9BuF,OAAQ,SACRjF,MAAK,SAAAsF,GACY,MAAfA,EAAIC,QACNmU,GAAgB,QAYlB,oBACA,kBAAC9b,EAAA,EAAD,CACAG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMmd,EACN3b,QAXwB,WAC1B4b,GAAgB,IAWd/Y,QAAS,oBACT9C,iBAAkB,IAClBK,IAAK,sBAOX,SAAS2lB,GAAe9nB,GAAO,IAAD,EAEMC,IAAMC,UAAS,GAFrB,mBAErBqb,EAFqB,KAEVC,EAFU,OAGYvb,IAAMC,UAAS,GAH3B,mBAGrBwd,EAHqB,KAGPC,EAHO,KAkB5B,OACE,6BACE,oGAAyE,2CAAzE,6HACA,kBAACrT,EAAA,EAAD,CAAQ9H,QAAQ,YAAaiI,MAAM,UAAUZ,WAAU0R,EAA2B7Q,QAhBtE,SAACnG,GACfiX,GAAa,GACb7X,MAAM,6BAA+B,CAACuF,OAAQ,SAASjF,MAAK,SAAAsF,GACvC,MAAfA,EAAIC,QACNmU,GAAgB,QAYlB,uBACA,kBAAC9b,EAAA,EAAD,CACAG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMmd,EACN3b,QAXwB,WAC1B4b,GAAgB,IAWd/Y,QAAS,sBACT9C,iBAAkB,IAClBK,IAAK,gBAsCI4lB,OA/Bf,SAAsB/nB,GAGpB,OACE,kBAAC8V,EAAA,EAAD,CACEC,WAAS,EACTiS,UAAU,SACV/R,QAAQ,aACRuJ,WAAW,SACXxJ,QAAS,GAET,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACf,kBAACJ,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IAAI,kBAAC2R,GAAD,OACnB,kBAAC/R,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IAAI,kBAAC4R,GAAD,OACnB,kBAAChS,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACb,kBAAC,GAAD,CACExV,OAAQV,EAAMU,OACd2O,aAAa,EACb4Y,UAAW,EACX9X,cAAc,YACd1I,MAAM,kBACN9F,MAAM,aACN6Q,WAAW,UACX9O,WAAW,OAGf,kBAACoS,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,MCjGrB,SAASgS,GAAgBloB,GAAO,IAAD,EAEWC,IAAMC,UAAS,GAF1B,mBAEtBwd,EAFsB,KAERC,EAFQ,OAGiB1d,IAAMC,SAAS,IAHhC,mBAGtB4iB,EAHsB,KAGLC,EAHK,OAIK9iB,IAAMC,UAAS,GAJpB,mBAItBqb,EAJsB,KAIXC,EAJW,KAkB7B,OACE,6BACE,2QACA,sFAA2D,0DAA3D,sCACA,yHAA8F,2EAA9F,2DACA,kBAAClR,EAAA,EAAD,CAAQ9H,QAAQ,YAAaiI,MAAM,UAAUZ,WAAU0R,EAA2B7Q,QAjBtE,SAACnG,GACfZ,MAAM,0CAA2C,CAACuF,OAAQ,SAASjF,MAAK,SAAAuP,GACtEuP,EAAmB,oCACnBpF,GAAgB,GAChBnC,GAAa,QAab,oCACA,kBAAC3Z,EAAA,EAAD,CACAG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMmd,EACN3b,QAbwB,WAC1B4b,GAAgB,IAad/Y,QAASke,EACThhB,iBAAkB,IAClBK,IAAK,gBAmDIgmB,OA1Cf,SAA2BnoB,GAAO,IAAD,EACKC,IAAMC,SAAS,YADpB,mBACxBwD,EADwB,KACZ0kB,EADY,KAgB/B,OAbAnoB,IAAMQ,WAAU,WAAM,4CACpB,sBAAA2U,EAAA,sEACWzR,MAAM,0BACZM,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLgkB,EAAchkB,EAAKV,eANzB,4CADoB,uBAAC,WAAD,wBAUlBgB,KACD,IAGD,kBAACoR,EAAA,EAAD,CACEC,WAAS,EACTiS,UAAU,SACV/R,QAAQ,aACRuJ,WAAW,SACXxJ,QAAS,GAET,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACf,kBAACJ,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IAAI,kBAACgS,GAAD,CAAiBxkB,WAAYA,KAChD,kBAACoS,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,IACf,kBAAC,GAAD,CACExV,OAAQV,EAAMU,OACdyP,cAAc,YACd8X,UAAW,EACXxgB,MAAM,sBACN9F,MAAM,cACN6Q,WAAW,2BACX9O,WAAYA,KAGd,kBAACoS,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,MC9CNmS,OArCf,SAA2BroB,EAAOsoB,GAChC,IAAI3nB,EAEFA,EADEX,EAAMU,OAAOE,QAAUZ,EAAMU,OAAOE,OAAOC,OACpC,IAAIC,SAAJ,eACCd,EAAMU,OAAOE,OAAOC,OADrB,KAEP,yBAA2BE,KAAKC,UAGzB,IAAIF,SAAJ,UACJd,EAAMU,OAAO,oBAAb,gBAAsD,KACzD,yBAA2BK,KAAKC,UAIhCsnB,IACF3nB,EAAO4nB,mBAAqBD,GAG9B3nB,EAAOM,QAAQ,CAACC,UAAW,WACzB,cAAoB,CAAC,SAAU,cAAe,cAAe,sBAA7D,eAAoF,CAA/E,IAAIsnB,EAAO,KACV5jB,EAAU,IAAIwX,UAAQ,IAE1BxX,EAAQiQ,gBAAkB,CACxB,aACA7U,EAAMU,OAAO,oBAAb,gBACA,cAHwB,UAIrB8nB,EAJqB,4BAKxB,yBACA,OACApnB,KAAK,KAEPT,EAAO0b,QAAQzX,QCXfwD,GAAYC,cAAW,SAACN,GAAD,MAAY,CACvCgE,KAAM,CACJsK,UAAW,QAEb/N,YAAa,CACXN,QAAS,QAEXie,OAAQ,CACNpa,YAAa9D,EAAMiO,QAAQ,IAE7ByS,aAAc,CACZpS,UAAWtO,EAAMiO,QAAQ,GACzBxN,aAAcT,EAAMiO,QAAQ,GAC5BQ,WAAY,OACZ3K,YAAa,OACbvF,MAAO,OAEToY,UAAU,CACRrI,UAAWtO,EAAMiO,QAAQ,GACzBxN,aAAcT,EAAMiO,QAAQ,IAE9BM,YAAa,CACX3N,OAAQZ,EAAMiO,QAAQ,IAExB0S,cAAe,CACbpiB,MAAO,WAMX,SAASqiB,GAAsB3oB,GAC7B,IAAM6F,EAAUuC,KADoB,EAEFnI,IAAMC,UAAS,GAFb,mBAE7B0oB,EAF6B,KAElBC,EAFkB,OAGA5oB,IAAMC,SAAS,IAHf,mBAG7B4oB,EAH6B,KAGjBC,EAHiB,OAIN9oB,IAAMC,SAAS,IAJT,mBAI7B8oB,EAJ6B,KAIpBC,EAJoB,OAKFhpB,IAAMC,SAASmF,IAAOC,OALpB,mBAK7BF,EAL6B,KAKlB8jB,EALkB,OAMEjpB,IAAMC,SAAS,IANjB,mBAM7BmJ,EAN6B,KAMhB8f,EANgB,KA+FpC,OACE,yBAAKpiB,UAAWlB,EAAQkG,MACpB,kBAACoL,GAAA,EAAD,KACA,kBAACrB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,GACrB,kBAACsE,GAAA,EAAD,CACEjL,MAAOoZ,EACP7d,GAAG,UACHwH,MAAM,kBACNtJ,MAAO+f,EACPI,UAAQ,EAACriB,UAAS,UAAKlB,EAAQ6iB,cAAb,YAA8B7iB,EAAQ6Y,WACxD5U,SAtBY,SAACvF,GACvB0kB,EAAW1kB,EAAEyE,OAAOC,QAsBV6f,WAAYA,KAGhB,kBAAChT,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,GACrB,kBAACsE,GAAA,EAAD,CACE1P,GAAG,WACHwH,MAAM,aACN4G,KAAK,iBACLuB,aAActV,EAAUsC,QAAQnC,OAAO,uBACvCwB,UAAS,UAAKlB,EAAQ6iB,cAAb,YAA8B7iB,EAAQ6Y,WAC/C5U,SA3Bc,SAACvF,GACzB2kB,EAAa3kB,EAAEyE,OAAOC,QA2BZogB,gBAAiB,CACfC,QAAQ,MAId,kBAACxT,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,IACrB,kBAACsE,GAAA,EAAD,CACElI,MAAM,cACNgX,QAAS,EACTC,YAAa,8HACbC,WAAS,EACTxgB,MAAOI,EACPtC,UAAWlB,EAAQ6Y,UACnB5U,SA5CS,SAACvF,GACpB4kB,EAAe5kB,EAAEyE,OAAOC,QA4CdygB,WAAW,KAIf,kBAAC5T,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,IACvB,kBAACL,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,GACrB,yBAAKxT,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,kBAC5C,kBAACtB,EAAA,EAAD,CAAQ5D,KAAK,QAAQ+D,MAAM,UAAUC,QAxGjD,WACE/G,MAAM,0BACHM,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL6kB,EAAW7kB,EAAKV,YAChBylB,EAAe/kB,EAAKiF,kBAiGd,qCACA,kBAACiB,EAAA,EAAD,CAAQ9H,QAAQ,YAAYiI,MAAM,UAAUC,QAvFxD,SAAkBnG,GAEhB,GADAA,EAAE6U,iBACc,KAAZ4P,EAGF,OAFAH,GAAa,QACbE,EAAc,kBAGhBplB,MAAM,oBAAoB,CACtBuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAAC1F,WAAaslB,EAAQW,OAAQvkB,UAAWA,EAAUwkB,cAAevgB,YAAaA,IACpGC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAEjBrF,MAAK,SAAAsF,GACa,MAAfA,EAAIC,SA3Dd,WAUE,IAAI7I,GAEFA,EADEX,EAAMU,OAAOE,QAAUZ,EAAMU,OAAOE,OAAOC,OACpC,IAAIC,SAAJ,eACCd,EAAMU,OAAOE,OAAOC,OADrB,KAEP,6BAA+BE,KAAKC,UAG7B,IAAIF,SAAJ,UACJd,EAAMU,OAAO,oBAAb,gBAAsD,KACzD,6BAA+BK,KAAKC,WAGjCC,QAAQ,CAAEC,UApBjB,WACE,IAAI0D,EAAU,IAAIwX,UAAQ4M,EAAQW,QAClC/kB,EAAQiQ,gBAAkB,+BAC1BjQ,EAAQvD,IAAM,EACduD,EAAQsK,UAAW,EACnBvO,EAAO0b,QAAQzX,IAesBtD,QAAS,MAsC1CuoB,GACAd,EAAc,IACdF,GAAa,GArBlBllB,MAAM,YAAa,CAACuF,OAAQ,SAuBvBmf,GAAkBroB,GAClBA,EAAMinB,eAGN4B,GAAa,GACbE,EAAc,uCA8DV,iBAad,SAASe,GAA4B9pB,GACnC,IAAM6F,EAAUuC,KAD0B,EAENnI,IAAMC,SAAS,GAFT,mBAEnC4mB,EAFmC,KAEvBC,EAFuB,OAGZ9mB,IAAMC,SAAS,IAAIsN,KAHP,mBAGnCuc,EAHmC,KAG1BC,EAH0B,KAQpCC,EAAiB,SAACra,GACtB,OAAOoX,EAAMpX,GAAOsa,UAGhBC,EAAgB,SAAC3C,GACrB,OAAOuC,EAAQ7Z,IAAIsX,IAGfP,EAAa,WACjB,GAAIH,IAAeE,EAAMniB,OAAS,EAChCulB,OAAOC,SAASlf,KAAO,gBAClB,CAEL,IAAImf,EAAaP,EACbI,EAAcrD,KAChBwD,EAAa,IAAI9c,IAAI8c,EAAWpV,WACrBlG,OAAO8X,GAGpBC,GAAc,SAACG,GAAD,OAAoBA,EAAiB,KACnD8C,EAAWM,GACXF,OAAOG,SAAS,CAACvZ,IAAK,MAyBpBgW,EAAQ,CACZ,CAACvf,MAAO,qBAAsB+iB,QAAS,kBAAC7B,GAAD,CAAuBjoB,OAAQV,EAAMU,OAAQumB,WAAYA,IAAeiD,UAAU,GACzH,CAACziB,MAAO,2BAA4B+iB,QAAS,kBAAC,GAAD,CAAgB9pB,OAAQV,EAAMU,SAAWwpB,UAAU,GAChG,CAACziB,MAAO,gBAAiB+iB,QAAS,kBAAC,GAAD,CAAc9pB,OAAQV,EAAMU,SAAWwpB,UAAU,GACnF,CAACziB,MAAO,qBAAsB+iB,QAAS,kBAAC,GAAD,CAAmB9pB,OAAQV,EAAMU,SAAWwpB,UAAU,IAG/F,OACE,kBAACpkB,EAAA,EAAD,CAAMiB,UAAWlB,EAAQkG,MACvB,kBAACjG,EAAA,EAAD,CAAaiB,UAAWlB,EAAQyC,aAC9B,kBAACtC,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MAAnC,0BAGA,kBAACmhB,GAAA,EAAD,CAASN,WAAYA,GAClBE,EAAM7f,KAAI,SAACqgB,EAAM5X,GAChB,IAAM6a,EAAY,GACZC,EAAa,GAOnB,OANIlD,EAAK0C,WACPQ,EAAWR,SAAW,kBAAClkB,EAAA,EAAD,CAAYxD,QAAQ,WAApB,aAEpB2nB,EAAcva,KAChB6a,EAAUE,WAAY,GAGtB,kBAACtD,GAAA,EAAD,eAAMllB,IAAKqlB,EAAK/f,OAAWgjB,GACzB,kBAACnD,GAAA,EAAcoD,EAAalD,EAAK/f,YAKzC,6BACGqf,IAAeE,EAAMniB,OACpB,6BACE,kBAACmB,EAAA,EAAD,CAAYe,UAAWlB,EAAQ4iB,cAA/B,yCAGA,kBAACne,EAAA,EAAD,CAAQI,QAxCA,WAClBqc,EAAc,IAuC0BhgB,UAAWlB,EAAQogB,QAAjD,UAKF,6BACE,kBAACjgB,EAAA,EAAD,CAAYe,UAAWlB,EAAQ4iB,cA1FlCzB,EA0FgEF,GA1FnD0D,SA2FV,6BACE,kBAAClgB,EAAA,EAAD,CAAQT,SAAyB,IAAfid,EAAkBpc,QAjE/B,WACjBqc,GAAc,SAACG,GAAD,OAAoBA,EAAiB,MAgEkBngB,UAAWlB,EAAQogB,QAA5E,QAGCgE,EAAenD,IACd,kBAACxc,EAAA,EAAD,CACE9H,QAAQ,YACRkI,QAnEC,WACjB,IAAKuf,EAAenD,GAClB,MAAM,IAAIjL,MAAM,8CAGlBkL,GAAc,SAACG,GAAD,OAAoBA,EAAiB,KACnD8C,GAAW,SAACY,GACV,IAAMN,EAAa,IAAI9c,IAAIod,EAAY1V,UAEvC,OADAoV,EAAWrb,IAAI6X,GACRwD,MA2DOvjB,UAAWlB,EAAQogB,QAHrB,QASF,kBAAC3b,EAAA,EAAD,CACE9H,QAAQ,YACRkI,QAASuc,EACTlgB,UAAWlB,EAAQogB,QAElBa,IAAeE,EAAMniB,OAAS,EAAI,iBAAmB,aA0BzDgmB,OAbf,SAA4B7qB,GAIxB,OAHAC,IAAMQ,WAAU,WACdmV,SAASnO,MAAQzH,EAAMyH,QACtB,CAACzH,EAAMyH,QAEN,kBAACqO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC2H,GAAI,GAAIC,GAAI,IACrB,kBAAC2T,GAAD,CAA6BppB,OAAQV,EAAMU,Y,UCvUjD0H,GAAYC,cAAW,SAACN,GAAD,MAAY,CACvCgE,KAAM,CACJsK,UAAW,QAEb5O,MAAO,CACL7E,SAAU,IAEZ0F,YAAa,CACXN,QAAS,QAEXO,IAAK,CACHC,aAAc,OAIZsiB,G,kDACJ,WAAY9qB,GAAQ,IAAD,8BACjB,cAAMA,IAqFR+qB,kBAAoB,SAACxmB,GACnB,EAAKF,SAAS,CAACmV,SAAUjV,EAAEyE,OAAOC,QAClC,EAAK+hB,UAAUzmB,EAAEyE,OAAOC,QAxFP,EA2FnBgiB,gBAAkB,SAACC,GACjB,EAAKA,UAAYA,GA5FA,EA+FnBC,aAAe,SAACC,GACd,EAAK/mB,SAAS,CAAC+mB,KAAMA,EAAMC,qBAAqB,EAAM7J,WAAY,UAhGjD,EAmGnB8J,oBAAsB,WACpB,EAAKjnB,SAAS,CAACqZ,cAAc,KAlG7B,EAAKra,MAAQ,CACX+nB,KAAM,GACN1N,cAAc,EACdlE,SAAU,aACV+R,YAAa,GACb/J,WAAY,OACZ6J,qBAAqB,EACrBG,iBAAkB,CAChB,CAAC5lB,KAAM,oBAAqB4T,SAAU,gBAG1C,EAAKiS,gBAAkB,EAAKA,gBAAgBjoB,KAArB,gBACvB,EAAKkoB,aAAe,EAAKA,aAAaloB,KAAlB,gBAdH,E,+FAiBHgW,G,4FACR7V,MAAM,eAAiB6V,GAC1BvV,MAAK,SAAAC,GACJ,OAAOA,EAASyN,UAEjB1N,MAAK,SAAA0N,GACJ,EAAKtN,SAAS,CAAC+mB,KAAMzZ,O,sLAIA6H,G,4FACnB7V,MAAM,gBACTM,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAE,GACJ,EAAKE,UAAS,SAAAiQ,GAAS,MAAK,CAC1BkX,iBAAiB,GAAD,oBAAMlX,EAAUkX,kBAAhB,aAAqCrnB,EAAKqQ,QAAO,SAAAjQ,GAAC,MAAW,eAANA,KAAqB4C,KAAI,SAAA5C,GAAC,MAAK,CAACqB,KAAMrB,EAAGiV,SAAUjV,e,0IAK/G,IAAD,OAChBd,KAAKY,SAAS,CAACmd,WAAY,kBAACxI,GAAA,EAAD,CAAkBvO,MAAM,UAAU/D,KAAM,OACnE/C,MAAM,mBAAmB,CACrBuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAACgiB,KAAM3nB,KAAKJ,MAAM+nB,KAAM5R,SAAU/V,KAAKJ,MAAMmW,WAClElQ,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGrBrF,MAAK,SAAAsF,GACAA,EAAIqS,GACN,EAAKvX,SAAS,CAACknB,YAAa,EAAKloB,MAAMmW,SAAW,qBAAsB6R,qBAAqB,EAAO7J,WAAY,UAEhH,EAAKnd,SAAS,CAACknB,YAAa,gDAAiDF,qBAAqB,EAAM7J,WAAY,SAEtH,EAAKnd,SAAS,CAACqZ,cAAc,S,qCAIlB,IAAD,OACZ/Z,MAAM,iBAAiB,CACnBuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAACoQ,SAAU/V,KAAKJ,MAAMmW,WAC3ClQ,QAAS,CACP,OAAU,mBACV,eAAgB,sBAGrBrF,MAAK,SAAAsF,GACAA,EAAIqS,GACN,EAAKvX,SAAS,CAACknB,YAAa,EAAKloB,MAAMmW,SAAW,cAElD,EAAKnV,SAAS,CAACknB,YAAa,yCAE9B,EAAKlnB,SAAS,CAACqZ,cAAc,IAC7B+G,YAAW,WACT2F,OAAOC,SAASsB,WACf,U,0CAKLloB,KAAKunB,UAAUvnB,KAAKJ,MAAMmW,UAC1B/V,KAAKmoB,yB,+BAqBL,OACE,kBAAC,IAAMvhB,SAAP,KACE,6BACE,kBAACyM,GAAA,EAAD,CACEnU,MAAO,CAACgG,OAAQ,uBAChBoO,QAAM,EACN9N,MAAOxF,KAAKJ,MAAMmW,SAClB1P,SAAUrG,KAAKsnB,kBACf/T,WAAY,CACVpR,KAAM,SACNmF,GAAI,WAGLtH,KAAKJ,MAAMmoB,iBAAiBrkB,KAAI,SAACmH,GAChC,OAAO,4BAAQnM,IAAKmM,EAAEkL,SAAUvQ,MAAOqF,EAAEkL,UAAWlL,EAAE1I,WAM5D,yBAAKjD,MAAO,CAACkpB,cAAe,MAAOljB,OAAQ,sBAAuBmS,SAAU,WAAYxU,MAAO,MAAOD,OAAQ,QAASmK,OAAQ,mBAC7H,kBAAC,kBAAD,CACE4a,KAAM3nB,KAAKJ,MAAM+nB,KACjBthB,SAAUrG,KAAK0nB,aACfW,UAAWroB,KAAKwnB,gBAChBc,SAAU,YAGd,yBAAKppB,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,kBAC5C,kBAACtB,EAAA,EAAD,CACE3H,MAAO,CAACgG,OAAQ,qBAChB8B,MAAM,UACNjI,QAAQ,YACRkI,QAASjH,KAAKgoB,gBACd5hB,UAAWpG,KAAKJ,MAAMgoB,qBAErB5nB,KAAKJ,MAAMme,YAEd,kBAAClX,EAAA,EAAD,CACE3H,MAAO,CAACgG,OAAQ,qBAChB8B,MAAM,YACNC,QAASjH,KAAKioB,aACd7hB,SAAmC,eAAxBpG,KAAKJ,MAAMmW,UAJxB,uBAQF,kBAAC3X,EAAA,EAAD,CACEG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMkD,KAAKJ,MAAMqa,aACjB3b,QAAS0B,KAAK6nB,oBACd1mB,QAASnB,KAAKJ,MAAMkoB,YACpBzpB,iBAAkB,IAClBK,IAAK,8B,GA7JelC,IAAM4H,WAuKpC,SAASmkB,KACP,IAAMnmB,EAAUuC,KAEhB,OACE,kBAAC,IAAMiC,SAAP,KACE,6BACE,6BACE,kBAACrE,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,kBAAhB,oBAMN,kBAACL,EAAA,EAAD,CAAMiB,UAAWlB,EAAQkG,MACvB,kBAACjG,EAAA,EAAD,CAAaiB,UAAWlB,EAAQyC,aAC9B,yCAAc,4CAAd,sBAAwD,4CAAxD,wBAAoG,mCAApG,uFAAoM,4CAApM,KACA,kBAAC,GAAD,MACA,uBAAG3F,MAAO,CAACwF,UAAW,SAAUkO,UAAW,SAAS,0BAAMuJ,KAAK,OAAX,gBAApD,iCAA4G,uBAAGzU,KAAK,4DAA4DnC,OAAO,SAAS6Q,IAAI,uBAAxF,iBAA5G,QAoBKoS,OAbf,SAAoBjsB,GAIhB,OAHAC,IAAMQ,WAAU,WACdmV,SAASnO,MAAQzH,EAAMyH,QACtB,CAACzH,EAAMyH,QAEN,kBAACqO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC4H,GAAI,GAAID,GAAI,IACpB,kBAAC8V,GAAD,S,yEC/MP5jB,GAAYC,cAAW,SAACN,GAAD,MAAY,CACvCN,MAAO,CACL7E,SAAU,IAEZ0F,YAAa,CACXN,QAAS,QAEXO,IAAK,CACHC,aAAc,GAEhBC,SAAU,CACR7F,SAAU,GACV8F,cAAe,SACfC,OAAQ,eAKZ,SAASujB,KACP,IAAMrmB,EAAUuC,KADO,EAECnI,IAAMC,UAAS,GAFhB,mBAEhBK,EAFgB,KAEVC,EAFU,OAGiBP,IAAMC,UAAS,GAHhC,mBAGhBwd,EAHgB,KAGFC,EAHE,KAqBjBvT,EAAc,WAClB5J,GAAQ,IAGV,OACE,kBAAC,IAAM6J,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQI,QAVY,WACtBlK,GAAQ,IAS4BmC,MAAO,CAAC4H,cAAe,OAAQC,MAAO,QAASqB,YAAa,OAAQpB,MAAM,WAC1G,kBAAC,KAAD,CAAY1D,UAAWlB,EAAQ4C,WADjC,6BAGA,kBAACkC,GAAA,EAAD,CACEpK,KAAMA,EACNwB,QAASqI,EACTQ,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAaC,GAAG,sBAAsB,oCACtC,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmBF,GAAG,4BAAtB,kFAIF,kBAACG,GAAA,EAAD,KACE,kBAACZ,EAAA,EAAD,CAAQI,QAtCM,WACpBlK,GAAQ,GACRmd,GAAgB,GAChBha,MAAM,cAAe,CAACuF,OAAQ,SAC7BjF,MAAK,SAAAsF,GACJ,GAAIA,EAAIqS,GAEN,OADAwO,OAAOC,SAASsB,UACT,MA+B2BlhB,MAAM,WAAtC,cAGA,kBAACH,EAAA,EAAD,CAAQI,QAASN,EAAaK,MAAM,YAAYW,WAAS,GAAzD,YAKJ,kBAACvJ,EAAA,EAAD,CACEG,aAAc,CAACC,SAAU,SAAUC,WAAY,UAC/C3B,KAAMmd,EACN9Y,QAAS,uDACT9C,iBAAkB,IAClBK,IAAK,qBAOb,SAASgqB,GAAWnsB,GAClB,IAAM6F,EAAUuC,KADS,EAEKnI,IAAMC,SAAS,IAFpB,mBAElBksB,EAFkB,KAETC,EAFS,OAGiBpsB,IAAMC,SAAS,IAHhC,mBAGlBosB,EAHkB,KAGHC,EAHG,KA+BzB,OAzBAtsB,IAAMQ,WAAU,WAAM,4CACpB,sBAAA2U,EAAA,sEACWzR,MAAM,oBACZM,MAAK,SAACC,GACL,OAAOA,EAASyN,UAEjB1N,MAAK,SAACG,GACLioB,EAAWjoB,MANjB,4CADoB,kEAWpB,sBAAAgR,EAAA,sEACWzR,MAAM,sEACZM,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLmoB,EAAiBnoB,EAAI,SAN3B,4CAXoB,uBAAC,WAAD,wBAqBlBooB,GArBkB,mCAsBlBC,KACD,IAGD,kBAAC,IAAMpiB,SAAP,KACA,6BACE,yBAAK1H,MAAO,CAACgJ,QAAS,OAAQC,eAAgB,gBAAiBpD,aAAc,QAC3E,kBAACxC,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,kBAAhB,YAIF,6BACE,kBAAC+lB,GAAD,MACA,kBAACQ,GAAA,EAAD,CAAMjiB,MAAM,UAAUkiB,UAAU,OAAOxhB,KAAK,oDAAoDnC,OAAO,SAAS6Q,IAAI,uBAClH,kBAACvP,EAAA,EAAD,CAAQ3H,MAAO,CAAC4H,cAAe,OAAQC,MAAO,QAASqB,YAAa,OAAQpB,MAAM,WAChF,kBAAC,KAAD,CAAe1D,UAAWlB,EAAQ4C,WADpC,2BAMN,kBAACqD,EAAA,EAAD,MACA,kBAAC9F,EAAA,EAAD,CAAYxD,QAAQ,aAClB,kBAAC0D,EAAA,EAAD,CAAKC,WAAW,iBAAiBxD,MAAO,CAACgG,OAAQ,oBAAqBgD,QAAQ,iBAC5E,kBAAC,KAAD,CAAqBhJ,MAAO,CAAEC,SAAU,GAAI8F,cAAe,YAD7D,uBAGA,kBAACxC,EAAA,EAAD,CAAKC,WAAW,oBAAoBxD,MAAO,CAACkJ,YAAa,OAAQF,QAAQ,iBACtEygB,GAEH,kBAAClmB,EAAA,EAAD,CAAKC,WAAW,iBAAiBxD,MAAO,CAACgG,OAAQ,oBAAqBgD,QAAQ,iBAC1E,kBAAC,KAAD,CAAYhJ,MAAO,CAAEC,SAAU,GAAI8F,cAAe,YADtD,6BAIA,kBAACxC,EAAA,EAAD,CAAKC,WAAW,oBAAoBxD,MAAO,CAACkJ,YAAa,OAAQF,QAAQ,iBACtE2gB,MAUX,SAASM,KACP,IAAM/mB,EAAUuC,KADW,EAGOnI,IAAMC,SAAS,IAHtB,mBAGpB2sB,EAHoB,KAGTC,EAHS,KAmB3B,OAdA7sB,IAAMQ,WAAU,WAAM,4CACpB,sBAAA2U,EAAA,sEACWzR,MAAM,kBACZM,MAAK,SAACC,GACL,OAAOA,EAASyN,UAEjB1N,MAAK,SAACG,GACL0oB,EAAa1oB,MANnB,4CADoB,uBAAC,WAAD,wBAUlBM,KACD,IAID,kBAAC,IAAM2F,SAAP,KACE,kBAACvE,EAAA,EAAD,CAAMiB,UAAWlB,EAAQkG,MACvB,kBAACjG,EAAA,EAAD,CAAaiB,UAAWlB,EAAQyC,aAChC,kBAACtC,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MAAnC,cAGE,yBAAK0d,wBAAyB,CAAEC,OAAQiJ,QAqBnCE,OAdf,SAAiB/sB,GAIb,OAHAC,IAAMQ,WAAU,WAChBmV,SAASnO,MAAQzH,EAAMyH,QACtB,CAACzH,EAAMyH,QAEJ,kBAACqO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC4H,GAAI,GAAID,GAAI,IACrB,kBAACiW,GAAD,MACA,kBAACS,GAAD,S,2FCnMNxkB,GAAYC,cAAW,SAACN,GAAD,MAAY,CACvCgE,KAAM,CACJsK,UAAW,QAEb5O,MAAO,CACL7E,SAAU,IAEZ0F,YAAa,CACXN,QAAS,QAEXO,IAAK,CACHC,aAAc,GAEhBwkB,WAAW,CACT1mB,MAAO,MACPqC,OAAQ,OACRH,aAAc,QAEhBykB,sBAAsB,CACpBzW,WAAY,YAMhB,SAAS2V,GAAWnsB,GACFoI,KAEhB,OACE,kBAAC,IAAMiC,SAAP,KACA,6BACE,6BACE,kBAACrE,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MACjC,kBAACC,EAAA,EAAD,CAAKC,WAAW,kBAAhB,eAYV,SAAS+mB,GAAT,GAA8D,IAA/BC,EAA8B,EAA9BA,6BAEvBtnB,EAAUuC,KAmBhB,OACE,yBAAKrB,UAAWlB,EAAQmnB,YACvB,kBAACI,GAAA,EAAD,CAAMC,OAAO,GAnBS,CACvB,CAACznB,KAAM,kBAAmB0nB,SAAU,GAAIjkB,YAAa,kBACrD,CAACzD,KAAM,yBAA0B0nB,SAAU,GAAIjkB,YAAa,kBAC5D,CAACzD,KAAM,sCAAuC0nB,SAAU,GAAIjkB,YAAa,mBAkBhEmL,QAAO,SAAA+Y,GAAM,OAAMJ,EAA6BK,SAASD,EAAO3nB,SAChEuB,KAAI,SAAAomB,GAAM,OACb,kBAACE,GAAA,EAAD,CAAUtrB,IAAKorB,EAAO3nB,MACpB,kBAAC8nB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQnrB,QAAQ,SAASG,MAAO,CAACsF,gBAAgB,YAC/C,kBAAC,YAAD,CAAUgB,MAAOskB,EAAO3nB,KAAMc,KAAM,OAGxC,kBAACknB,GAAA,EAAD,CACE3hB,QAASshB,EAAO3nB,KAChBioB,UAAWN,EAAOlkB,cAEpB,kBAACykB,GAAA,EAAD,KAEE,kBAACxjB,EAAA,EAAD,CACEI,SA9BSqjB,EA8BcR,EAAO3nB,KA9BL,kBACnCjC,MAAM,kBAAmB,CACvBuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAAC2kB,YAAaA,IACnCzkB,QAAS,CACP,OAAU,mBACV,eAAgB,wBAyBV9G,QAAQ,OACRkE,KAAK,QACL+D,MAAM,UACN9D,aAAW,SACXqnB,QAAS,kBAAC,KAAD,MACTjnB,UAAWlB,EAAQonB,uBAPrB,WAWA,kBAAC3iB,EAAA,EAAD,CACEa,KAAMoiB,EAAOD,SACbtkB,OAAO,SAAS6Q,IAAI,WACpBrX,QAAQ,OACRkE,KAAK,QACL+D,MAAM,UACN9D,aAAW,UACXkD,UAAW0jB,EAAOD,SAClBU,QAAS,kBAAC,KAAD,MACTjnB,UAAWlB,EAAQonB,uBATrB,UAxCU,IAACc,OAgEzB,SAASE,GAAT,GAAkD,IAAnBC,EAAkB,EAAlBA,iBAEvBroB,EAAUuC,KAgBhB,OACE,yBAAKrB,UAAWlB,EAAQmnB,YACvB,kBAACI,GAAA,EAAD,CAAMC,OAAO,GACTa,EAAiB/mB,KAAI,SAAAomB,GAAM,OAC1B,kBAACE,GAAA,EAAD,CAAUtrB,IAAKorB,EAAO3nB,MACpB,kBAAC8nB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQnrB,QAAQ,SAASG,MAAO,CAACsF,gBAAgB,YAC/C,kBAAC,YAAD,CAAUgB,MAAOskB,EAAO3nB,KAAMc,KAAM,OAGxC,kBAACknB,GAAA,EAAD,CACE3hB,QAASshB,EAAO3nB,KAChBioB,UAAWN,EAAOlkB,cAEpB,kBAACykB,GAAA,EAAD,KAEE,kBAACxjB,EAAA,EAAD,CACEI,SA5BWqjB,EA4BcR,EAAO3nB,KA5BL,kBACrCjC,MAAM,oBAAqB,CACzBuF,OAAQ,OACRC,KAAMnE,KAAKoE,UAAU,CAAC2kB,YAAaA,IACnCzkB,QAAS,CACP,OAAU,mBACV,eAAgB,wBAuBV9G,QAAQ,OACRkE,KAAK,QACL+D,MAAM,UACN9D,aAAW,SACXqnB,QAAS,kBAAC,KAAD,MACTjnB,UAAWlB,EAAQonB,uBAPrB,aAWA,kBAAC3iB,EAAA,EAAD,CACEa,KAAMoiB,EAAOD,SACbtkB,OAAO,SAAS6Q,IAAI,WACpBrX,QAAQ,OACRkE,KAAK,QACL+D,MAAM,UACN9D,aAAW,SACXkD,UAAW0jB,EAAOD,SAClBU,QAAS,kBAAC,KAAD,MACTjnB,UAAWlB,EAAQonB,uBATrB,UAtCY,IAACc,OA4D3B,SAASI,KACP,IAAMtoB,EAAUuC,KADQ,EAGwBnI,IAAMC,SAAS,IAHvC,mBAGjBguB,EAHiB,KAGCE,EAHD,KAmBxB,OAdAnuB,IAAMQ,WAAU,WAAM,4CACpB,sBAAA2U,EAAA,sEACWzR,MAAM,0BACZM,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACE,GACLiqB,EAAoBjqB,MAN1B,4CADoB,uBAAC,WAAD,wBAUlBO,KACD,IAID,kBAAC,IAAM2F,SAAP,KACE,kBAAC,GAAD,MACA,kBAACvE,EAAA,EAAD,CAAMiB,UAAWlB,EAAQkG,MACvB,kBAACjG,EAAA,EAAD,CAAaiB,UAAWlB,EAAQyC,aAC9B,8RAED,kBAACtC,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MAAnC,qBAGC,kBAACgoB,GAAD,CAAsBC,iBAAkBA,IAGzC,kBAACloB,EAAA,EAAD,CAAYxD,QAAQ,KAAKyD,UAAU,MAAnC,wCAGC,kBAACinB,GAAD,CAAsBC,6BAA8Be,EAAiB/mB,KAAI,SAAAomB,GAAM,OAAIA,EAAO3nB,UAG1F,uBAAGjD,MAAO,CAACwF,UAAW,SAAUkO,UAAW,SAAS,0BAAMuJ,KAAK,OAAX,gBAApD,iCAA4G,uBAAGzU,KAAK,uCAAuCnC,OAAO,SAAS6Q,IAAI,uBAAnE,WAA5G,QAsBKwU,OAdf,SAAiBruB,GAIb,OAHAC,IAAMQ,WAAU,WAChBmV,SAASnO,MAAQzH,EAAMyH,QACtB,CAACzH,EAAMyH,QAEJ,kBAACqO,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMvH,MAAI,EAAC4H,GAAI,GAAID,GAAI,IACrB,kBAACiY,GAAD,S,yNCzON/lB,GAAYC,cAAW,SAACN,GAAD,MAAY,CACvCgE,KAAM,CACJJ,QAAS,QAEX2iB,OAAO,eACJvmB,EAAMwmB,YAAYC,GAAG,MAAQ,CAC5BloB,MARc,IASdmoB,WAAY,IAGhBC,WAAW,aACT7iB,YAAa9D,EAAMiO,QAAQ,IAC1BjO,EAAMwmB,YAAYC,GAAG,MAAQ,CAC5B7iB,QAAS,SAGbgjB,YAAa,CACXroB,MAnBgB,KAqBlBsoB,OAAQ,CACJC,OAAQ9mB,EAAM8mB,OAAOP,OAAS,GAElC7mB,MAAO,CACLqnB,SAAU,GAEZC,WAAY,CACVD,SAAU,GAEZE,oBAAqB,CACjB,sBAAuB,CACnBvkB,MAAO,wBAGfwkB,WAAY,CACRxkB,MAAO,mBACP7H,SAAU,QAEdssB,aAAc,CACZC,SAAU,QAEZtQ,QAAS,CACPxI,UAAW,OACX7N,aAAc,YAMH,SAAS4mB,KACtB,IAAMvpB,EAAUuC,KADyB,EAGLnI,IAAMC,UAAS,GAHV,mBAGlCmvB,EAHkC,KAGtBC,EAHsB,OAIXrvB,IAAMC,SAAS,MAJJ,mBAIlCksB,EAJkC,KAIzBC,EAJyB,OAKCpsB,IAAMC,SAAS,MALhB,mBAKlCosB,EALkC,KAKnBC,EALmB,KAOzCtsB,IAAMQ,WAAU,WAAM,4CACpB,sBAAA2U,EAAA,sEACWzR,MAAM,oBACZM,MAAK,SAACC,GACL,OAAOA,EAASyN,UAEjB1N,MAAK,SAACG,GACLioB,EAAWjoB,MANjB,4CADoB,kEAWpB,sBAAAgR,EAAA,sEACWzR,MAAM,sEACZM,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLmoB,EAAiBnoB,EAAI,SAN3B,4CAXoB,uBAAC,WAAD,wBAqBlBooB,GArBkB,mCAsBlBC,KACD,IAGH,IAAM8C,EAAqB,WACzBD,GAAeD,IAGjB,SAASG,EAAWC,GAClB,OAAQrF,OAAOC,SAASqF,WAAaD,EAGvC,IAAME,EAAO,kBACX,yBAAK5oB,UAAWlB,EAAQ+pB,iBACtB,kBAACxC,GAAA,EAAD,KAEE,kBAACK,GAAA,EAAD,CAAUtiB,KAAK,YAAYlF,UAAU,IAAIggB,QAAM,EAAC9jB,IAAK,WAAY0tB,SAAUL,EAAW,MAAQA,EAAW,cACvG,kBAACM,GAAA,EAAD,CAAc/oB,UAAWlB,EAAQqpB,cAAc,kBAAC,KAAD,CAAuBzkB,MAAQ+kB,EAAW,MAAQA,EAAW,aAAgB,UAAY,YAAxI,KACA,kBAAC5B,GAAA,EAAD,CAAcmC,uBAAwB,CAACtlB,MAAO+kB,EAAW,MAAQA,EAAW,aAAe,UAAY,WAAYvjB,QAAS,cAG9H,kBAACwhB,GAAA,EAAD,CAAUxH,QAAM,EAAC9a,KAAK,eAAgBlF,UAAU,IAAI9D,IAAK,cAAe0tB,SAAUL,EAAW,iBAC3F,kBAACM,GAAA,EAAD,CAAc/oB,UAAWlB,EAAQqpB,cAAjC,IAAgD,kBAAC,GAAD,CAAgBzkB,MAAO+kB,EAAW,gBAAkB,UAAY,YAAhH,KACA,kBAAC5B,GAAA,EAAD,CAAcmC,uBAAwB,CAACtlB,MAAO+kB,EAAW,gBAAkB,UAAY,WAAYvjB,QAAS,iBAI9G,kBAACwhB,GAAA,EAAD,CAAUtiB,KAAK,eAAelF,UAAU,IAAIggB,QAAM,EAAC9jB,IAAK,cAAe0tB,SAAUL,EAAW,iBAC1F,kBAACM,GAAA,EAAD,CAAc/oB,UAAWlB,EAAQqpB,cAAc,kBAAC,KAAD,CAAazkB,MAAO+kB,EAAW,gBAAkB,UAAY,YAA5G,KACA,kBAAC5B,GAAA,EAAD,CAAcmC,uBAAwB,CAACtlB,MAAO+kB,EAAW,gBAAkB,UAAY,WAAYvjB,QAAS,iBAG9G,kBAACwhB,GAAA,EAAD,CAAUxH,QAAM,EAAC9a,KAAK,UAAWlF,UAAU,IAAI9D,IAAK,SAAU0tB,SAAUL,EAAW,YACjF,kBAACM,GAAA,EAAD,CAAc/oB,UAAWlB,EAAQqpB,cAAjC,IAAgD,kBAAC,KAAD,CAAsBzkB,MAAO+kB,EAAW,WAAa,UAAY,YAAjH,KACA,kBAAC5B,GAAA,EAAD,CAAcmC,uBAAwB,CAACtlB,MAAO+kB,EAAW,WAAa,UAAY,WAAYvjB,QAAS,mBAGzG,kBAACwhB,GAAA,EAAD,CAAUxH,QAAM,EAAC9a,KAAK,YAAalF,UAAU,IAAI9D,IAAK,WAAY0tB,SAAUL,EAAW,cACrF,kBAACM,GAAA,EAAD,CAAc/oB,UAAWlB,EAAQqpB,cAAjC,IAAgD,kBAAC,KAAD,CAAyBzkB,MAAO+kB,EAAW,aAAe,UAAY,YAAtH,KACA,kBAAC5B,GAAA,EAAD,CAAcmC,uBAAwB,CAACtlB,MAAO+kB,EAAW,aAAe,UAAY,WAAYvjB,QAAS,cAG3G,kBAACH,EAAA,EAAD,CAAS/E,UAAWlB,EAAQgZ,UAE5B,kBAAC4O,GAAA,EAAD,CAAUtiB,KAAK,WAAWlF,UAAU,IAAIggB,QAAM,EAAC9jB,IAAK,UAAW0tB,SAAUL,EAAW,kBAClF,kBAACM,GAAA,EAAD,CAAc/oB,UAAWlB,EAAQqpB,cAAc,kBAAC,KAAD,CAAwBzkB,MAAO+kB,EAAW,YAAc,UAAY,YAAnH,KACA,kBAAC5B,GAAA,EAAD,CAAcmC,uBAAwB,CAACtlB,MAAO+kB,EAAW,YAAc,UAAY,WAAYvjB,QAAS,aAG1G,kBAACwhB,GAAA,EAAD,CAAUtiB,KAAK,WAAWlF,UAAU,IAAIggB,QAAM,EAAC9jB,IAAI,UAAU0tB,SAAUL,EAAW,aAChF,kBAACM,GAAA,EAAD,CAAc/oB,UAAWlB,EAAQqpB,cAC/B,kBAACc,GAAA,EAAD,CAAOxtB,QAAQ,MAAMiI,MAAM,YAAYwlB,YAAc7D,GAAaE,GAAmBF,IAAYE,IAC/F,kBAAC,KAAD,CAAY7hB,MAAO+kB,EAAW,YAAc,UAAY,cAG5D,kBAAC5B,GAAA,EAAD,CAAcmC,uBAAwB,CAACtlB,MAAO+kB,EAAW,YAAc,UAAY,WAAYvjB,QAAS,aAG1G,yBAAKlF,UAAWlB,EAAQmpB,qBACtB,kBAACvB,GAAA,EAAD,CAAUzkB,OAAO,SAAS6Q,IAAI,sBAAsB1O,KAAK,6CAA6ClF,UAAU,IAAIggB,QAAM,EAAC9jB,IAAI,QAC7H,kBAAC2tB,GAAA,EAAD,CAAc/oB,UAAWlB,EAAQqpB,cAAc,kBAAC,KAAD,MAA/C,KACA,kBAACtB,GAAA,EAAD,CAAc3hB,QAAS,SACvB,kBAAC6hB,GAAA,EAAD,KACI,kBAAC,KAAD,CAAe/mB,UAAWlB,EAAQopB,mBAShD,OACI,kBAAC,IAAM5kB,SAAP,KAEE,yBAAKtD,UAAWlB,EAAQkpB,YACtB,kBAACmB,GAAA,EAAD,CAAQpV,SAAS,QAAQ/T,UAAWlB,EAAQ+oB,QAC1C,kBAACuB,GAAA,EAAD,CAAS3tB,QAAQ,SAEf,kBAAC4tB,GAAA,EAAD,CACE3lB,MAAM,UACN9D,aAAW,cACX0pB,KAAK,QACL3lB,QAAS6kB,EACTxoB,UAAWlB,EAAQ6oB,YAEnB,kBAAC,KAAD,OAGF,kBAAC1oB,EAAA,EAAD,CAAYxD,QAAQ,KAAKuE,UAAWlB,EAAQ4B,OAC1C,kBAACilB,GAAA,EAAD,CAAMjiB,MAAM,UAAUkiB,UAAU,OAAOxhB,KAAK,IAAIpE,UAAWlB,EAAQ4B,OAAnE,IAA2E,yBAAK6oB,IAAI,kBAAkBC,IAAI,mBAAmB5tB,MAAO,CAAC2D,MAAO,QAASD,OAAQ,UAA7J,MAEF,kBAACqmB,GAAA,EAAD,CAAMjiB,MAAM,UAAUkiB,UAAU,OAAOxhB,KAAK,6CAA6CnC,OAAO,SAAS6Q,IAAI,uBAC3G,kBAACvP,EAAA,EAAD,CAAQG,MAAM,UAAU9H,MAAO,CAAC4H,cAAe,SAA/C,QAA6D,kBAAC,KAAD,CAAiB5H,MAAO,CAAEC,SAAU,GAAI8F,cAAe,SAAU8N,WAAY,UAKlJ,kBAACga,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B,kBAACC,GAAA,EAAD,CACEnuB,QAAQ,YACRouB,OAAO,OACPrwB,KAAM8uB,EACNttB,QAASwtB,EACT1pB,QAAS,CACPgrB,MAAOhrB,EAAQ8oB,aAEjBmC,WAAY,CACVC,aAAa,IAGdpB,MAGL,kBAACa,GAAA,EAAD,CAAQQ,QAAM,EAACN,eAAe,OAC5B,kBAACC,GAAA,EAAD,CACE9qB,QAAS,CACPgrB,MAAOhrB,EAAQ8oB,aAEjBnsB,QAAQ,YACRjC,MAAI,EACJwG,UAAWlB,EAAQyoB,QAEnB,kBAAC6B,GAAA,EAAD,MACCR,O,mCCnON,SAASsB,GAAe7sB,GAC3B,IAAI8sB,EAAQ,CACRC,QAAS,6BACTC,MAAO,+BACPC,QAAS,YAETpoB,EAAQ,GACRqoB,EAAQltB,EAAKxC,MAAM,WACnBuvB,EAAU,KAmBd,OAlBAG,EAAMC,SAAQ,SAASxhB,GACnB,IAAGmhB,EAAMG,QAAQ5kB,KAAKsD,GAEhB,GAAGmhB,EAAME,MAAM3kB,KAAKsD,GAAM,CAC5B,IAAIrD,EAAQqD,EAAKrD,MAAMwkB,EAAME,OAC1BD,EACCloB,EAAMkoB,GAASzkB,EAAM,IAAMA,EAAM,GAEjCzD,EAAMyD,EAAM,IAAMA,EAAM,QAE1B,GAAGwkB,EAAMC,QAAQ1kB,KAAKsD,GAAM,CAC1BrD,EAAQqD,EAAKrD,MAAMwkB,EAAMC,SAC7BloB,EAAMyD,EAAM,IAAM,GAClBykB,EAAUzkB,EAAM,QACK,IAAhBqD,EAAKlL,QAAgBssB,IAC1BA,EAAU,SAGXloB,ECLX,IAAMlB,GAAQypB,YAAe,CAC3BC,QAAS,CACPC,WAAY,CACVrX,QAAS,WAEXpO,QAAS,CAEP0lB,KAAM,cAmFGC,OA1Ef,WAAgB,IAAD,EAEe3xB,IAAMC,SAAS,IAF9B,mBAENQ,EAFM,KAEEmxB,EAFF,KAuBb,OAnBA5xB,IAAMQ,WAAU,WAAM,4CAEpB,sBAAA2U,EAAA,sEACQzR,MAAM,0BACTM,MAAK,SAACC,GACH,GAAIA,EAAS0X,GACX,OAAO1X,EAASyN,OAEhB,MAAM,IAAIkK,MAAM,2BAGrB5X,MAAK,SAACvD,GACLmxB,EAAUZ,GAAevwB,OAE1B4D,OAAM,SAACkL,OAZZ,4CAFoB,uBAAC,WAAD,wBAgBpBwb,KACC,IAGD,kBAAC,IAAD,CAAkBjjB,MAAOA,IACvB,kBAAC+pB,EAAA,EAAD,MACA,yBAAKnvB,MAAO,CAACgJ,QAAS,SACpB,kBAACyjB,GAAD,MACA,0BAAMzsB,MAAO,CAACmsB,SAAU,EAAGiD,WAAYhqB,GAAMiO,QAAQ,GAAIgJ,YAAajX,GAAMiO,QAAQ,GAAI+I,aAAchX,GAAMiO,QAAQ,KAClH,kBAAC,IAAD,KACE,yBAAKjP,UAAU,iBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0oB,KAAK,gBACV,kBAAC,GAAD,CAAY/uB,OAAQA,EAAQ+G,MAAM,6BAClC,kBAAC,EAAD,CAA2B/G,OAAQA,KAErC,kBAAC,IAAD,CAAO+uB,KAAK,yBACV,kBAAC,GAAD,CAAoB/uB,OAAQA,EAAQ+G,MAAM,sCAC1C,kBAAC,EAAD,CAA2B/G,OAAQA,KAErC,kBAAC,IAAD,CAAO+uB,KAAK,aACV,kBAACuC,GAAD,CAAoBtxB,OAAQA,EAAQ+G,MAAM,2BAE5C,kBAAC,IAAD,CAAOgoB,KAAK,YACV,kBAAC,GAAD,CAAS/uB,OAAQA,EAAQ+G,MAAM,yBAC/B,kBAAC,EAAD,CAA2B/G,OAAQA,KAErC,kBAAC,IAAD,CAAO+uB,KAAK,aACV,kBAAC,GAAD,CAAS/uB,OAAQA,EAAQ+G,MAAM,0BAC/B,kBAAC,EAAD,CAA2B/G,OAAQA,KAErC,kBAAC,IAAD,CAAO+uB,KAAK,WACV,kBAAC,GAAD,CAAY/uB,OAAQA,EAAQ+G,MAAM,+BAClC,kBAAC,EAAD,CAA2B/G,OAAQA,KAErC,kBAAC,IAAD,CAAO+uB,KAAK,gBACV,kBAAC,GAAD,CAAa/uB,OAAQA,EAAQ+G,MAAM,8BAErC,kBAAC,IAAD,CAAOgoB,KAAK,YACV,kBAAC,GAAD,CAAS/uB,OAAQA,EAAQ+G,MAAM,yBAC/B,kBAAC,EAAD,CAA2B/G,OAAQA,KAErC,kBAAC,IAAD,CAAO+uB,KAAK,KACV,kBAACuC,GAAD,CAAoBtxB,OAAQA,EAAQ+G,MAAM,oCC1FxCwqB,QACW,cAA7B7H,OAAOC,SAAS6H,UAEe,UAA7B9H,OAAOC,SAAS6H,UAEhB9H,OAAOC,SAAS6H,SAASxlB,MACvB,2DCVNylB,IAAS1oB,OACP,kBAAC,IAAM2oB,WAAP,KACE,kBAAC,GAAD,OAEFxc,SAASyc,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvuB,MAAK,SAAAwuB,GACJA,EAAaC,gBAEdpuB,OAAM,SAAAkL,GACLhL,QAAQgL,MAAMA,EAAM5K,c","file":"static/js/main.25592f48.chunk.js","sourcesContent":["import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nfunction TactileButtonNotification(props) {\n  var [unit, setUnit] = React.useState(\"\")\n  var [renamedUnit, setRenamedUnit] = React.useState(\"\")\n  var [open, setOpen] = React.useState(false)\n\n  React.useEffect(() => {\n    if (!props.config['network.topology']){\n      return\n    }\n\n    const onMessageArrived = (msg) => {\n      if (msg.payloadString === \"1\"){\n        var unit = msg.topic.split(\"/\")[1]\n        setUnit(unit)\n        try {\n          setRenamedUnit(props.config['ui.rename'][unit])\n        }\n        catch {}\n        setOpen(true)\n      }\n      else {\n        setOpen(false)\n      }\n    }\n\n    const onSuccess = () => {\n      client.subscribe(\n      [\n        \"pioreactor\",\n        \"+\",\n        \"$experiment\",\n        \"monitor\",\n        \"button_down\"\n      ].join(\"/\"),\n      { qos: 1 }\n      )\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_TactileButtonNotification\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_TactileButtonNotification\" + Math.random()\n      );\n    }\n    client.connect({onSuccess: onSuccess, timeout: 180, reconnect: true});\n    client.onMessageArrived = onMessageArrived;\n\n  },[props.config])\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={null}\n      onClose={() => {}}\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      key={\"button-tactile-snackbar\"}\n      transitionDuration={{enter: 10}}\n    >\n    <Alert severity=\"info\" variant=\"filled\" icon={false}>\n      <AlertTitle style={{fontSize: 25}}>{unit + (renamedUnit ? \" / \" + renamedUnit : \"\")}</AlertTitle>\n      Holding <b>{unit}</b>'s button down\n    </Alert>\n    </Snackbar>\n)}\n\nexport default TactileButtonNotification;\n","import React from 'react'\n\nimport clsx from 'clsx';\nimport {Client} from 'paho-mqtt';\nimport moment from 'moment';\n\n\nimport {withStyles} from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"6px 10px 6px 10px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n  errorLog: {\n    backgroundColor: \"#ff7961\"\n  },\n  warningLog: {\n    backgroundColor: \"#FFEA8A\"\n  }\n});\n\nconst levelMappingToOrdinal = {\n  NOTSET: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARNING: 3,\n  ERROR: 4,\n  CRITICAL: 5\n}\n\n\nclass LogTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {listOfLogs: []};\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getData() {\n    if (!this.props.experiment){\n      return\n    }\n    await fetch(\"/recent_logs/\" + encodeURIComponent(this.props.experiment) + \"?\" + new URLSearchParams({\n        min_level: this.props.config.logging.ui_log_level\n      }))\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({listOfLogs: data});\n      }).catch((e) => {\n        console.log(e)\n      });\n  }\n\n  componentDidMount() {\n    this.getData()\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_LogTable\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_LogTable\" + Math.random()\n      );\n    }\n    this.client.connect({timeout: 180, 'onSuccess': this.onConnect, reconnect: true});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getData()\n     }\n  }\n\n  onConnect() {\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"logs\", \"+\"].join(\"/\"))\n      this.client.subscribe([\"pioreactor\", \"+\", \"$experiment\",         \"logs\", \"+\"].join(\"/\"))\n  }\n\n  onMessageArrived(message) {\n    if (this.state.listOfLogs.length > 50){\n      this.state.listOfLogs.pop()\n    }\n    const unit = message.topic.split(\"/\")[1]\n    const payload = JSON.parse(message.payloadString)\n\n    if (levelMappingToOrdinal[payload.level] < levelMappingToOrdinal[this.props.config.logging.ui_log_level]){\n      return\n    }\n\n    this.state.listOfLogs.unshift(\n      {timestamp: moment.utc().format('YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]'), pioreactor_unit: unit, message: payload.message, task: payload.task, is_error: (payload.level === \"ERROR\"), is_warning: (payload.level === \"WARNING\")}\n    )\n    this.setState({\n      listOfLogs: this.state.listOfLogs\n    });\n  }\n\n  renameUnit(name){\n    if (!this.props.config['ui.rename']){\n      return name\n    }\n    return (this.props.config['ui.rename'][name]) || name\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" component=\"h2\">\n            <Box fontWeight=\"fontWeightRegular\">\n              Recent event logs\n            </Box>\n          </Typography>\n          <TableContainer style={{ height: \"700px\", width: \"100%\", overflowY: \"scroll\"}}>\n            <Table stickyHeader size=\"small\" aria-label=\"log table\">\n               <TableHead>\n                <TableRow>\n                  <TableCell className={clsx(classes.headerCell)}>Time</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Pioreactor</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Source</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Message</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {this.state.listOfLogs.map((log, i) => (\n                  <TableRow key={i}>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>\n                      <span title={moment.utc(log.timestamp, 'YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]').local().format('YYYY-MM-DD HH:mm:ss.SS')}>{moment.utc(log.timestamp, 'YYYY-MM-DD[T]HH:mm:ss.SSSSS[Z]').local().format('HH:mm:ss')} </span>\n                    </TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}> {this.renameUnit(log.pioreactor_unit)}</TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>{log.task.replace(/_/g, ' ')}</TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}>{log.message}</TableCell>\n                  </TableRow>\n                  ))\n                }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n  )}\n}\n\n\n\nexport default withStyles(useStyles)(LogTable);\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport moment from \"moment\";\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ContentEditable from 'react-contenteditable'\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\n\n\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n});\n\n\n\nclass EditableDescription extends React.Component {\n  constructor(props) {\n    super(props)\n    this.contentEditable = React.createRef();\n    this.state = {\n      desc: \"\",\n    };\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({desc: this.props.description})\n    }\n  }\n\n  handleChange = evt => {\n    this.setState({desc: evt.target.value});\n    return fetch('update_experiment_desc', {\n        method: \"POST\",\n        body: JSON.stringify({experiment : this.props.experiment, description: evt.target.value}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200){\n          console.log(\"didn't save\")\n        }\n      })\n  };\n\n\n  render = () => {\n    return (\n      <div style={{padding: \"0px 5px 0px 5px\"}}>\n        <Box fontWeight=\"fontWeightBold\">\n          Description:\n        </Box>\n        <ContentEditable\n            innerRef={this.contentEditable}\n            html={this.state.desc} // innerHTML of the editable div\n            disabled={false}\n            onChange={this.handleChange} // handle innerHTML change\n            onBlur={this.onBlur}\n            tagName=\"p\"\n            style={{padding: \"3px 3px 3px 2px\", outline: \"none\"}}\n          />\n      </div>\n    )\n  };\n};\n\n\nfunction ButtonConfirmNewExperimentDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\"}} color=\"primary\" onClick={handleClickOpen}>\n        <AddIcon className={classes.textIcon}/> New experiment\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Starting a new experiment</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Starting a new experiment will stop data collection for the current experiment. Do you wish to proceed?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button href=\"/start-new-experiment\" color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nfunction ButtonConfirmStopProcessDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const onConfirm = () => {\n    fetch(\"/stop_all\", {method: \"POST\"})\n    handleClose()\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\"}} color=\"primary\" onClick={handleClickOpen}>\n        <ClearIcon className={classes.textIcon}/> End experiment\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"End experiment?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will halt all activies (stirring, dosing, optical density reading, etc.) in all Pioreactor units. You can manually start them again later. Do you wish to end the experiment?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onConfirm} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\n\nfunction ExperimentSummary(props){\n  const classes = useStyles();\n  const experiment = props.experimentMetadata.experiment || \"\"\n  const startedAt = props.experimentMetadata.timestamp || moment()\n  const desc = props.experimentMetadata.description || \"\"\n  const deltaHours = props.experimentMetadata.delta_hours || 0\n\n  return(\n    <React.Fragment>\n      <div>\n        <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n          <Typography variant=\"h5\" component=\"h1\">\n            <Box fontWeight=\"fontWeightBold\">\n              {experiment}\n            </Box>\n          </Typography>\n          <div >\n            <Button href=\"/export-data\" style={{textTransform: 'none', marginRight: \"0px\", float: \"right\"}} color=\"primary\">\n              <GetAppIcon className={classes.textIcon}/> Export experiment data\n            </Button>\n            <ButtonConfirmStopProcessDialog/>\n            <ButtonConfirmNewExperimentDialog/>\n          </div>\n        </div>\n\n        <Divider/>\n        <Typography variant=\"subtitle2\">\n          <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n            <CalendarTodayIcon style={{ fontSize: 12, verticalAlign: \"middle\" }}/> Experiment started:\n          </Box>\n          <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n            <span title={moment(startedAt).format(\"YYYY-MM-DD HH:mm:ss\")}>{moment(startedAt).format(\"dddd, MMMM D, YYYY\")}</span>\n          </Box>\n          <Box fontWeight=\"fontWeightBold\" style={{display:\"inline-block\", margin: \"10px 2px 10px 0px\"}}>\n            <TimelapseIcon style={{ fontSize: 12, verticalAlign: \"middle\"  }}/>Time elapsed:\n          </Box>\n          <Box fontWeight=\"fontWeightRegular\" style={{display:\"inline-block\"}}>\n           {deltaHours}h\n          </Box>\n        </Typography>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <EditableDescription experiment={experiment} description={desc} />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  )\n}\n\n\nexport default ExperimentSummary;\n","import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport {\n  VictoryChart,\n  VictoryLabel,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLine,\n  VictoryLegend,\n  createContainer,\n  VictoryTooltip,\n} from \"victory\";\nimport moment from \"moment\";\nimport Card from \"@material-ui/core/Card\";\n\nconst colors = [\n  {primary: \"#9C6ADE\", 0: \"#9C6ADE\", 1: \"#E3D0FF\", 2: \"#50248F\", 3: \"#ecdffb\"},\n  {primary: \"#F49342\", 0: \"#F49342\", 1: \"#FFC58B\", 2: \"#C05717\", 3: \"#4A1504\"},\n  {primary: \"#47C1BF\", 0: \"#47C1BF\", 1: \"#B7ECEC\", 2: \"#00848E\", 3: \"#003135\"},\n  {primary: \"#50B83C\", 0: \"#50B83C\", 1: \"#BBE5B3\", 2: \"#108043\", 3: \"#E3F1DF\"},\n  {primary: \"#DE3618\", 0: \"#DE3618\", 1: \"#FEAD9A\", 2: \"#BF0711\", 3: \"#FBEAE5\"},\n  {primary: \"#EEC200\", 0: \"#EEC200\", 1: \"#FFEA8A\", 2: \"#8A6116\", 3: \"#573B00\"},\n  {primary: \"#006FBB\", 0: \"#006FBB\", 1: \"#B4E1FA\", 2: \"#084E8A\", 3: \"#001429\"},\n  {primary: \"#43467F\", 0: \"#43467F\", 1: \"#B3B5CB\", 2: \"#1C2260\", 3: \"#00044C\"},\n];\n\nconst colorMaps = {}\n\nfunction getColorFromName(name){\n  if (name in colorMaps){\n    return colorMaps[name]\n  }\n\n  let sensorRe = /(.*)-[0123]/;\n  if (sensorRe.test(name)){\n    let primaryName = name.match(sensorRe)[1]\n    return getColorFromName(primaryName)\n  }\n  else{\n    var newPallete = colors.shift()\n    colorMaps[name] = newPallete.primary\n    colorMaps[name + \"-0\"] = newPallete[0]\n    colorMaps[name + \"-1\"] = newPallete[1]\n    colorMaps[name + \"-2\"] = newPallete[2]\n    colorMaps[name + \"-3\"] = newPallete[3]\n    return getColorFromName(name)\n  }\n}\n\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seriesMap: {},\n      hiddenSeries: new Set(),\n      names: [],\n      legendEvents: [],\n      fetched: false,\n    };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n    this.selectLegendData = this.selectLegendData.bind(this);\n    this.selectVictoryLines = this.selectVictoryLines.bind(this);\n\n  }\n\n  onConnect() {\n    this.client.subscribe(\n      [\"pioreactor\", \"+\", this.props.experiment, this.props.topic].join(\"/\")\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getData()\n     }\n  }\n\n  componentDidMount() {\n    this.getData()\n\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_Chart\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_Chart\" + Math.random()\n      );\n    }\n\n\n    this.client.connect({ onSuccess: this.onConnect, reconnect: true});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  async getData() {\n    if (!this.props.experiment){\n      return\n    }\n    const tweak = 0.95 // increase to filter more\n    await fetch(\"/time_series/\" + this.props.dataSource + \"/\" + this.props.experiment + \"?\" + new URLSearchParams({\n        filter_mod_N: Math.max(Math.floor(tweak * Math.min(this.props.deltaHours, this.props.lookback)), 1),\n        lookback: this.props.lookback\n      }))\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let initialSeriesMap = {};\n        for (const [i, v] of data[\"series\"].entries()) {\n          if (data[\"data\"][i].length > 0) {\n            initialSeriesMap[v] = {\n              data: (data[\"data\"][i]).map(item => ({y: item.y, x: moment.utc(item.x, 'YYYY-MM-DDTHH:mm:ss.SSSSS').local()})),\n              name: v,\n              color: getColorFromName(v),\n            };\n          }\n        }\n        let names = Object.keys(initialSeriesMap);\n        this.setState({\n          seriesMap: initialSeriesMap,\n          legendEvents: this.createLegendEvents(names),\n          names: names,\n          fetched: true\n        });\n      })\n      .catch((e) => {\n        console.log(e)\n        this.setState({fetched: true})\n      });\n  }\n\n  createLegendEvents(names) {\n    return names.map((name, idx) => {\n      return {\n        childName: [\"legend\"],\n        target: \"data\",\n        eventKey: String(idx),\n        eventHandlers: {\n          onClick: () => {\n            return [\n              {\n                childName: [\"line-\" + name],\n                target: \"data\",\n                mutation: () => { //this is dumb! I shouldn't mutate this way!\n                  if (!this.state.hiddenSeries.delete(name)) {\n                    // Was not already hidden => add to set\n                    this.state.hiddenSeries.add(name);\n                  }\n                  this.setState({\n                    hiddenSeries: new Set(this.state.hiddenSeries),\n                  });\n                  return null;\n                },\n              },\n            ];\n          },\n        },\n      };\n    });\n  }\n\n  onMessageArrived(message) {\n    if (!this.state.fetched){\n      return\n    }\n    if (message.retained){\n      return\n    }\n\n    if (!message.payloadString){\n      return\n    }\n\n    const payload = JSON.parse(message.payloadString)\n    const timestamp = moment.utc(payload.timestamp).local()\n    const value = parseFloat(payload[this.props.payloadKey])\n\n\n    var key = this.props.isODReading //TODO: change this variable name, something like: IsPartitionedBySensor\n      ? message.topic.split(\"/\")[1] + \"-\" + message.topic.split(\"/\")[5]\n      : message.topic.split(\"/\")[1];\n\n    try {\n      if (!(key in this.state.seriesMap)){\n        const newSeriesMap = {...this.state.seriesMap, [key]:  {\n          data: [{x: timestamp, y: value}],\n          name: key,\n          color: getColorFromName(key)\n        }}\n\n        this.setState({ seriesMap: newSeriesMap })\n        this.setState({\n          names: [...this.state.names, key]\n        })\n      } else {\n        // .push seems like bad state management, and maybe a hit to performance...\n        this.state.seriesMap[key].data.push({\n          x: timestamp,\n          y: value,\n        });\n        this.setState({ seriesMap: this.state.seriesMap })\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n    return;\n  }\n\n  breakString(string){\n    if (string.length > 11){\n      return string.slice(0, 5) + \"...\" + string.slice(string.length-2, string.length)\n    }\n    return string\n  }\n\n  renameAndFormatSeries(name){\n    if (!this.props.config['ui.rename']){\n      return name\n    }\n\n    if (name.match(/(.*)-([0123])/g)){\n      const results = name.match(/(.*)-([0123])/);\n      const index = results[1];\n      const sensor = results[2];\n      return this.breakString(this.props.config['ui.rename'][index] || index) + \"-\" + sensor\n    }\n    else {\n      return this.breakString(this.props.config['ui.rename'][name] || name)\n    }\n  }\n\n\n\n  createToolTip = (d) => {\n      return `${d.datum.x.format(\"MMM DD HH:mm\")}\n${this.renameAndFormatSeries(d.datum.childName)}: ${Math.round(d.datum.y * 1000) / 1000}`\n  }\n\n\n  selectLegendData(name){\n    if (!this.state.seriesMap) {\n      return {}\n    }\n    const line = this.state.seriesMap[name];\n    const item = {\n      name: this.renameAndFormatSeries(line.name),\n      symbol: { fill: line.color },\n    };\n    if (this.state.hiddenSeries.has(name)) {\n      return { ...item, symbol: { fill: \"white\" } };\n    }\n    return item;\n  }\n\n  selectVictoryLines(name) {\n    if (this.state.hiddenSeries.has(name)) {\n      return undefined;\n    }\n    return (\n      <VictoryLine\n        interpolation={this.props.interpolation}\n        key={\"line-\" + name + this.props.title}\n        name={name}\n        style={{\n          labels: {fill: this.state.seriesMap[name].color},\n          data: {\n            stroke: this.state.seriesMap[name].color,\n            strokeWidth: 2,\n          },\n          parent: { border: \"1px solid #ccc\" },\n        }}\n        data={this.state.seriesMap[name].data}\n        x=\"x\"\n        y=\"y\"\n      />\n    );\n  }\n\n  render() {\n    const VictoryVoronoiContainer = createContainer(\"voronoi\");\n    return (\n      <Card style={{ maxHeight: \"100%\"}}>\n        <VictoryChart\n          title={this.props.title}\n          domainPadding={10}\n          padding={{ left: 70, right: 50, bottom: 80, top: 50 }}\n          events={this.state.legendEvents}\n          responsive={true}\n          width={600}\n          height={315}\n          scale={{x: 'time'}}\n          theme={VictoryTheme.material}\n          containerComponent={\n            <VictoryVoronoiContainer\n              voronoiBlacklist={['parent']}\n              labels={this.createToolTip}\n              labelComponent={\n                <VictoryTooltip\n                  cornerRadius={0}\n                  flyoutStyle={{\n                    fill: \"white\",\n                    stroke: \"#90a4ae\",\n                    strokeWidth: 1.5,\n                  }}\n                />\n              }\n            />\n          }\n        >\n          <VictoryLabel\n            text={this.props.title}\n            x={300}\n            y={30}\n            textAnchor=\"middle\"\n            style={{\n              fontSize: 16,\n              fontFamily: \"inherit\",\n            }}\n          />\n          <VictoryAxis\n            style={{\n              tickLabels: {\n                fontSize: 14,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n            offsetY={80}\n            orientation=\"bottom\"\n          />\n          <VictoryAxis\n            crossAxis={false}\n            dependentAxis\n            domain={this.props.yAxisDomain}\n            tickFormat={this.props.yAxisTickFormat}\n            label={this.props.yAxisLabel}\n            axisLabelComponent={\n              <VictoryLabel\n                dy={-40}\n                style={{\n                  fontSize: 15,\n                  padding: 10,\n                  fontFamily: \"inherit\",\n                }}\n              />\n            }\n            style={{\n              tickLabels: {\n                fontSize: 14,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n          />\n          <VictoryLegend\n            x={65}\n            y={270}\n            symbolSpacer={6}\n            itemsPerRow={5}\n            name={\"legend\"}\n            borderPadding={{ right: 8 }}\n            orientation=\"horizontal\"\n            cursor={\"pointer\"}\n            gutter={15}\n            rowGutter={5}\n            style={{\n              labels: { fontSize: 13 },\n              data: { stroke: \"#485157\", strokeWidth: 0.5, size: 6.5 },\n            }}\n            data={this.state.names.map(this.selectLegendData)}\n          />\n          {Object.keys(this.state.seriesMap).map(this.selectVictoryLines)}\n        </VictoryChart>\n      </Card>\n    );\n  }\n}\n\nexport default Chart;\n","import React from 'react'\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\n\nfunction PioreactorIcon(props) {\n  return (\n    <SvgIcon {...props} >\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill={props.fillColor || \"none\"} fillRule=\"evenodd\">\n            <g id=\"Experiment-Page-1\" transform=\"translate(-728.000000, -1502.000000)\" stroke=\"currentColor\" strokeWidth=\"1.8\">\n                <g id=\"pioreactor\" transform=\"translate(729.000000, 1503.000000)\">\n                    <path d=\"M1.4,18.9 L1.4,14.7 L0,14.7 L0,11.2 L2.799,11.2 L2.8,0 L14,0 L13.999,11.2 L16.8,11.2 L16.8,14.7 L15.399,14.7 L15.4,18.9 L1.4,18.9 Z\" id=\"Combined-Shape\"></path>\n                    <circle id=\"Oval\" cx=\"8.4\" cy=\"13.3\" r=\"2.1\"></circle>\n                </g>\n            </g>\n        </g>\n    </SvgIcon>\n  );\n}\n\nexport default PioreactorIcon;\n","import React from 'react'\n\nimport clsx from 'clsx';\n\nexport default  function UnderlineSpan(props){\n  const title = props.title\n\n  return (\n    <span className={clsx({underlineSpan: title ? true : false})} title={title}>\n      {props.children}\n    </span>\n )\n}\n","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport {Client} from 'paho-mqtt';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport {withStyles} from '@material-ui/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport PioreactorIcon from \"./PioreactorIcon\"\nimport UnderlineSpan from \"./UnderlineSpan\"\n\n\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"8px 2px 6px 4px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n});\n\n\n\nclass MediaCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mediaThroughputPerUnit: {},\n        altMediaThroughputPerUnit: {},\n        mediaThroughput: 0,\n        altMediaThroughput: 0,\n        rates: {all: {mediaRate: 0, altMediaRate: 0}},\n        activeUnits: []\n      };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getRecentRates() {\n    if (!this.props.experiment){\n      return\n    }\n\n     await fetch(\"/recent_media_rates/\" + encodeURIComponent(this.props.experiment))\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      this.setState(prevState => ({...prevState, rates: data}))\n    });\n    return\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getRecentRates()\n     }\n  }\n\n  componentDidMount() {\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_MediaCard\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_MediaCard\" + Math.random()\n      );\n    }\n\n    this.client.connect({timeout: 180, 'onSuccess': this.onConnect});\n    this.client.onMessageArrived = this.onMessageArrived;\n    this.setState({activeUnits: Object.entries(this.props.config['network.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0])})\n    this.getRecentRates()\n  }\n\n\n  onConnect() {\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"throughput_calculating\", \"alt_media_throughput\"].join(\"/\"))\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"throughput_calculating\", \"media_throughput\"].join(\"/\"))\n  }\n\n  addOrUpdate(hash, object, value) {\n      if (Object.hasOwnProperty(hash)){\n        object[hash] = value + object[hash]\n      }\n      else{\n        object[hash] = value\n      }\n      return object\n  }\n\n  onMessageArrived(message) {\n    const topic = message.destinationName\n    const topicParts = topic.split(\"/\")\n    const payload = parseFloat(message.payloadString)\n    const unit = topicParts[1]\n    const objectRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughputPerUnit\"  : \"mediaThroughputPerUnit\"\n    const totalRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughput\"  : \"mediaThroughput\"\n\n    this.setState({\n      [objectRef]: this.addOrUpdate(unit, this.state[objectRef], payload)\n    });\n\n    var total = Object.values(this.state[objectRef]).reduce((a, b) => a + b, 0)\n\n    this.setState({\n      [totalRef]: total\n    })\n  }\n\n  getRenameIfAvailable(unit) {\n    return (this.props.config['ui.rename'] && this.props.config['ui.rename'][unit]) ? this.props.config['ui.rename'][unit] : unit\n  }\n\n  render(){\n    return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h2\">\n          <Box fontWeight=\"fontWeightRegular\">\n            Dosing\n          </Box>\n        </Typography>\n       <TableContainer style={{ width: \"100%\"}}>\n          <Table size=\"small\" aria-label=\"media throughput\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{padding: \"6px 0px\"}}></TableCell>\n                <TableCell style={{padding: \"6px 0px\"}} align=\"right\">Media</TableCell>\n                <TableCell style={{padding: \"6px 0px\"}} align=\"right\">Alt. Media</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow key=\"all\">\n                <TableCell style={{padding: \"6px 0px\"}} component=\"th\" scope=\"row\">\n                  All Pioreactors\n                </TableCell>\n                <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{this.state.mediaThroughput.toFixed(1)}mL (~{this.state.rates.all.mediaRate.toFixed(1)}mL/h)</TableCell>\n                <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{this.state.altMediaThroughput.toFixed(1)}mL (~{this.state.rates.all.altMediaRate.toFixed(1)}mL/h)</TableCell>\n              </TableRow>\n\n              {this.state.activeUnits.map((unit) => (\n                <TableRow key={unit}>\n                  <TableCell style={{padding: \"6px 0px\"}} component=\"th\" scope=\"row\">\n                      <PioreactorIcon style={{ fontSize: 14, verticalAlign: \"middle\" }} color=\"inherit\"/> <UnderlineSpan title={this.getRenameIfAvailable(unit) === unit ? null : unit}>{this.getRenameIfAvailable(unit)}</UnderlineSpan>\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{(this.state.mediaThroughputPerUnit[unit] || 0).toFixed(1)}mL (~{this.state.rates[unit] ? this.state.rates[unit].mediaRate.toFixed(1) : \"0.0\"}mL/h)</TableCell>\n                  <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{(this.state.altMediaThroughputPerUnit[unit] || 0).toFixed(1)}mL (~{this.state.rates[unit] ? this.state.rates[unit].altMediaRate.toFixed(1): \"0.0\"}mL/h)</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  )}\n}\n\nexport default  withStyles(useStyles)(MediaCard);\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport LogTable from \"./components/LogTable\";\nimport ExperimentSummary from \"./components/ExperimentSummary\";\nimport Chart from \"./components/Chart\";\nimport MediaCard from \"./components/MediaCard\";\nimport PioreactorIcon from './components/PioreactorIcon';\nimport TactileButtonNotification from \"./components/TactileButtonNotification\";\n\n\nfunction Overview(props) {\n\n  const [experimentMetadata, setExperimentMetadata] = React.useState({})\n\n  React.useEffect(() => {\n    document.title = props.title;\n    async function getLatestExperiment() {\n         await fetch(\"/get_latest_experiment\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperimentMetadata(data)\n        });\n      }\n    getLatestExperiment()\n  }, [props.title])\n\n\n  return (\n      <React.Fragment>\n        <Grid container spacing={2} justify=\"space-between\">\n\n          <Grid item xs={12} md={12}>\n            <ExperimentSummary experimentMetadata={experimentMetadata}/>\n          </Grid>\n\n\n          <Grid item xs={12} md={7} container spacing={2} justify=\"flex-start\" style={{height: \"100%\"}}>\n\n\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['implied_growth_rate'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                dataSource=\"growth_rates\"\n                title=\"Implied growth rate\"\n                topic=\"growth_rate_calculating/growth_rate\"\n                payloadKey=\"growth_rate\"\n                yAxisLabel=\"Growth rate, h⁻¹\"\n                experiment={experimentMetadata.experiment}\n                deltaHours={experimentMetadata.delta_hours}\n                interpolation=\"stepAfter\"\n                yAxisDomain={[-0.02, 0.1]}\n                lookback={100000}\n                yAxisTickFormat={(t) => `${t.toFixed(2)}`}\n              />\n            </Grid>\n            }\n\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['fraction_of_volume_that_is_alternative_media'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                yAxisDomain={[0.00, 0.05]}\n                dataSource=\"alt_media_fraction\"\n                interpolation=\"stepAfter\"\n                payloadKey=\"alt_media_fraction\"\n                title=\"Fraction of volume that is alternative media\"\n                topic=\"alt_media_calculating/alt_media_fraction\"\n                yAxisLabel=\"Fraction\"\n                experiment={experimentMetadata.experiment}\n                deltaHours={1} // hack to make all points display\n                yAxisTickFormat={(t) => `${t.toFixed(3)}`}\n                lookback={100000}\n              />\n            </Grid>\n            }\n\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['normalized_optical_density'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                isODReading={true}\n                dataSource=\"od_readings_filtered\"\n                title=\"Normalized optical density\"\n                payloadKey=\"od_filtered\"\n                topic=\"growth_rate_calculating/od_filtered/+\"\n                yAxisLabel=\"Current OD / initial OD\"\n                experiment={experimentMetadata.experiment}\n                deltaHours={experimentMetadata.delta_hours}\n                interpolation=\"stepAfter\"\n                lookback={parseFloat(props.config['ui.overview.settings']['filtered_od_lookback_hours'])}\n                yAxisTickFormat={(t) => `${t.toFixed(2)}`}\n              />\n            </Grid>\n            }\n\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['raw_optical_density'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                isODReading={true}\n                dataSource=\"od_readings_raw\"\n                title=\"Optical density\"\n                payloadKey=\"voltage\"\n                topic=\"od_reading/od_raw/+\"\n                yAxisLabel=\"Voltage\"\n                experiment={experimentMetadata.experiment}\n                deltaHours={experimentMetadata.delta_hours}\n                interpolation=\"stepAfter\"\n                lookback={parseFloat(props.config['ui.overview.settings']['raw_od_lookback_hours'])}\n                yAxisTickFormat={(t) => `${t.toFixed(3)}`}\n              />\n            </Grid>\n           }\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['temperature'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                dataSource=\"temperature_readings\"\n                title=\"Temperature of vials\"\n                topic=\"temperature_control/temperature\"\n                yAxisLabel=\"temperature, ℃\"\n                payloadKey=\"temperature\"\n                experiment={experimentMetadata.experiment}\n                deltaHours={experimentMetadata.delta_hours}\n                interpolation=\"stepAfter\"\n                lookback={10000}\n                yAxisDomain={[22.5, 37.5]}\n                yAxisTickFormat={(t) => `${t.toFixed(1)}`}\n              />\n            </Grid>\n           }\n          </Grid>\n\n          <Grid item xs={12} md={5} container spacing={1} justify=\"flex-end\" style={{height: \"100%\"}}>\n\n\n            {( props.config['ui.overview.cards'] && (props.config['ui.overview.cards']['dosings'] === \"1\")) &&\n              <Grid item xs={12} >\n                <MediaCard experiment={experimentMetadata.experiment} config={props.config}/>\n                <Button href=\"/pioreactors\" color=\"primary\" style={{textTransform: \"none\", verticalAlign: \"middle\", margin: \"0px 3px\"}}> <PioreactorIcon style={{ fontSize: 17 }} color=\"primary\"/> See all Pioreactor details </Button>\n              </Grid>\n            }\n\n\n            {( props.config['ui.overview.cards'] && (props.config['ui.overview.cards']['event_logs'] === \"1\")) &&\n              <Grid item xs={12}>\n                <LogTable experiment={experimentMetadata.experiment} config={props.config}/>\n              </Grid>\n            }\n\n          </Grid>\n        </Grid>\n        {props.config['ui.rename'] ? <TactileButtonNotification config={props.config}/> : null}\n      </React.Fragment>\n  );\n}\nexport default Overview;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  caption: {\n    marginLeft: \"30px\",\n    maxWidth: \"650px\"\n  }\n}));\n\n\n\nfunction ExperimentSelection(props) {\n  const classes = useStyles();\n\n  const [experiments, setExperiments] = React.useState([{experiment: \"<All experiments>\"}])\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_experiments\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperiments(prevState => [ ...data, ...prevState])\n          props.handleChange(data[0].experiment)\n        });\n      }\n      getData()\n  }, [])\n\n  const handleExperimentSelectionChange = (e) => {\n    props.handleChange(e.target.value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n\n        <Select\n          native\n          value={props.ExperimentSelection}\n          onChange={handleExperimentSelectionChange}\n          inputProps={{\n            name: 'experiment',\n            id: 'experiment',\n          }}\n        >\n          {experiments.map((v) => {\n            return <option value={v.experiment}>{v.experiment +  (v.timestamp ? ` (started ${moment(v.timestamp).format(\"MMMM D, YYYY\")})` : \"\")}</option>\n            }\n          )}\n        </Select>\n      </FormControl>\n\n    </div>\n  )\n}\n\n\n\nconst CheckboxesGroup = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Datasets</FormLabel>\n        <FormGroup>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.growth_rates} onChange={props.handleChange} name=\"growth_rates\" />}\n            label=\"Implied growth rate\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of the calculated (implied) growth rate. Same data as presented in the \"Implied growth rate\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_raw} onChange={props.handleChange} name=\"od_readings_raw\" />}\n            label=\"Raw optical density\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of raw voltages provided by the senors, the inputs for growth calculations and normalized optical densities. Same data as presented in the \"Raw optical density\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_filtered} onChange={props.handleChange} name=\"od_readings_filtered\" />}\n            label=\"Normalized optical density\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of normalized optical densities. Same data as presented in the \"Normalized optical density\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.temperature_readings} onChange={props.handleChange} name=\"temperature_readings\" />}\n            label=\"Temperature readings\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of temperature readings from the Pioreactors. Same data as presented in the \"Temperature of vials\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.experiments} onChange={props.handleChange} name=\"experiments\" />}\n            label=\"Experiment metadata\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The description and other metadata from the experiment.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.alt_media_fraction} onChange={props.handleChange} name=\"alt_media_fraction\" />}\n            label=\"Alternative media fraction\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A time series of how much alternative media is in each Pioreactor. Same data as presented in the \"Fraction of volume that is alternative media\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_events} onChange={props.handleChange} name=\"dosing_events\" />}\n            label=\"Dosing event log\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A detailed log table of all dosing events, including the volume exchanged, and the source of who or what triggered the event.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_automation_settings} onChange={props.handleChange} name=\"dosing_automation_settings\" />}\n            label=\"Dosing automation changelog\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            Whenever a dosing automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the dosing automation states\n            from this dataset.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_events} onChange={props.handleChange} name=\"led_events\" />}\n            label=\"LED event log\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A detailed log table of all LED events, including the channel, intensity, and the source of who or what triggered the event.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_automation_settings} onChange={props.handleChange} name=\"led_automation_settings\" />}\n            label=\"LED automation changelog\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            Whenever a LED automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the LED automation states\n            from this dataset.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.temperature_automation_settings} onChange={props.handleChange} name=\"temperature_automation_settings\" />}\n            label=\"Temperature automation changelog\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            Whenever a temperature automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the temperature automation states\n            from this dataset.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.kalman_filter_outputs} onChange={props.handleChange} name=\"kalman_filter_outputs\" />}\n            label=\"Kalman Filter outputs\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            An internal Kalman filter produces the normalized optical densities, growth rates, an acceleration term, and variances (and covariances) between the estimates.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.logs} onChange={props.handleChange} name=\"logs\" />}\n            label=\"Pioreactor logs\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The append-only collection of logs from all Pioreactors. A subset of the these logs are displayed in the Log Table in the Experiment Overview.\n            These are the logs that should be provided to get assistance when troubleshooting, but choose \"&lt;All experiments&gt;\" above.\n          </Typography>\n\n        </FormGroup>\n      </FormControl>\n    </div>\n)}\n\n\nfunction ExportDataContainer() {\n  const classes = useStyles();\n  const [isRunning, setIsRunning] = React.useState(false)\n  const [isError, setIsError] = React.useState(false)\n  const [errorMsg, setErrorMsg] = React.useState(\"\")\n  const [state, setState] = React.useState({\n    experimentSelection: \"\",\n    datasetCheckbox: {\n      growth_rates: false,\n      dosing_events: false,\n      led_events: false,\n      experiments: false,\n      od_readings_raw: false,\n      od_readings_filtered: false,\n      logs: false,\n      alt_media_fraction: false,\n      dosing_automation_settings: false,\n      led_automation_settings: false,\n      temperature_automation_settings: false,\n      kalman_filter_outputs: false,\n      temperature_readings: false\n    }\n  });\n\n  const onSubmit = (event) =>{\n    event.preventDefault()\n\n    if (!Object.values(state['datasetCheckbox']).some((e) => e)) {\n      setIsError(true)\n      setErrorMsg(\"At least one dataset must be selected.\")\n      return\n    }\n\n    setIsRunning(true)\n    fetch('export_datasets',{\n        method: \"POST\",\n        body: JSON.stringify(state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    }).then(res => res.json())\n      .then(res => {\n      var link = document.createElement(\"a\");\n      const filename = res['filename'].replace(/%/g, \"%25\")\n      link.setAttribute('export', filename);\n      link.href = \"/static/exports/\" + filename;\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setIsRunning(false)\n    }).catch(e => {\n      setIsRunning(false)\n      setIsError(true)\n      setErrorMsg(\"Server error occurred. Check logs.\")\n    });\n  }\n\n  const handleCheckboxChange = (event) => {\n    setState(prevState => ({\n      ...prevState,\n      datasetCheckbox: {...state.datasetCheckbox, [event.target.name]: event.target.checked }\n    }));\n  };\n\n  function handleExperimentSelectionChange(value) {\n    setState(prevState => ({\n      ...prevState,\n      experimentSelection: value\n    }));\n  };\n\n  const runningFeedback = isRunning ? <CircularProgress color=\"white\" size={24}/> : \"Export\"\n  const errorFeedbackOrDefault = isError ? <Box color=\"error.main\">{errorMsg}</Box>: \"\"\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Export Experiment Data\n            </Box>\n          </Typography>\n        </div>\n\n      </div>\n      <Card className={classes.root}>\n\n        <CardContent className={classes.cardContent}>\n          <form>\n            <Grid container spacing={0}>\n              <Grid item xs={12} md={12}>\n                <ExperimentSelection\n                experimentSelection={state.experimentSelection}\n                handleChange={handleExperimentSelectionChange}\n                />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <CheckboxesGroup\n                isChecked={state.datasetCheckbox}\n                handleChange={handleCheckboxChange}\n                />\n              </Grid>\n\n              <Grid item xs={0}/>\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  style={{width: \"120px\", marginLeft: 24}}\n                >\n                  {runningFeedback}\n                </Button>\n                <p style={{marginLeft: 24}}>{errorFeedbackOrDefault}</p>\n\n              </Grid>\n              <Grid item xs={12}>\n                <p style={{textAlign: \"center\", marginTop: \"30px\"}}>💡 Learn more about <a href=\"https://pioreactor.com/pages/exporting-data\" target=\"_blank\" rel=\"noopener noreferrer\">data exporting</a>.</p>\n              </Grid>\n            </Grid>\n          </form>\n        </CardContent>\n      </Card>\n  </React.Fragment>\n  )\n}\n\n\nfunction ExportData(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title]);\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <ExportDataContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default ExportData;\n\n","import React, {useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldCompact: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n    width: \"30ch\",\n  }\n}));\n\n\n\nfunction AutomationForm(props){\n  const classes = useStyles();\n  const defaults = Object.assign({}, ...props.fields.map(field => ({[field.key]: field.default})))\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [props.fields])\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n  var listOfTextField = props.fields.map(field =>\n        <TextField\n          size=\"small\"\n          id={field.key}\n          key={field.key}\n          label={field.label}\n          defaultValue={field.default}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">{field.unit}</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n  )\n\n  return (\n      <div>\n        {listOfTextField}\n    </div>\n)}\n\n\nexport default AutomationForm;","import React, { useState, useEffect } from \"react\";\n\nimport { Client, Message } from \"paho-mqtt\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport PioreactorIcon from \"./PioreactorIcon\"\nimport AutomationForm from \"./AutomationForm\"\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  formControl: {\n    marginTop: theme.spacing(2)\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n}));\n\n\n\n\nfunction ButtonChangeDosingDialog(props) {\n  const classes = useStyles();\n  const config = props.config\n  const [open, setOpen] = useState(false);\n  const [algoSettings, setAlgoSettings] = useState({dosing_automation: \"silent\", skip_first_run: false})\n  const [isClicked, setIsClicked] = useState(false)\n  const [client, setClient] = useState(null)\n  const [automations, setAutomations] = useState({})\n\n\n  useEffect(() => {\n    async function fetchDosingAutomations() {\n      await fetch(\"/contrib/automations/dosing\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfAuto) => {\n          setAutomations(Object.assign({}, ...listOfAuto.map(auto => ({ [auto.key]: auto}))))\n        })\n        .catch((error) => {})\n    }\n    fetchDosingAutomations();\n  }, [])\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    if (!config['network.topology']){\n      return\n    }\n\n    var client\n    if (config.remote && config.remote.ws_url) {\n      client = new Client(\n        `ws://${config.remote.ws_url}/`,\n        \"webui_ButtonChangeDosingDialog\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${config['network.topology']['leader_address']}`, 9001,\n        \"webui_ButtonChangeDosingDialog\" + Math.random()\n      );\n    }\n\n    client.connect();\n    setClient(client)\n\n  },[config])\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAlgoSelectionChange = (e) => {\n    setAlgoSettings({dosing_automation: e.target.value, skip_first_run: algoSettings.skip_first_run})\n  }\n\n  const handleSkipFirstRunChange = (e) => {\n    setAlgoSettings({...algoSettings, skip_first_run: e.target.checked})\n  }\n\n  const updateFromChild = (setting) => {\n    setAlgoSettings(prevState => ({...prevState, ...setting}))\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setIsClicked(true)\n    var message = new Message(JSON.stringify(algoSettings));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      \"dosing_control\",\n      \"dosing_automation\",\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    try{\n      client.publish(message);\n    }\n    catch (e){\n      console.log(e)\n    }\n    setOpen(false);\n  }\n\n  return (\n    <div>\n    <Button\n      style={{marginTop: \"10px\"}}\n      size=\"small\"\n      color=\"primary\"\n      disabled={!props.currentDosingAutomation}\n      onClick={handleClickOpen}\n    >\n      Change dosing automation\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {height: \"100%\"}}}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {props.title || ((config['ui.rename'] && config['ui.rename'][props.unit]) ? `${config['ui.rename'][props.unit]} (${props.unit})` : `${props.unit}`)}\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          Dosing automation\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Dosing automations control when and how much media to add to the Pioreactor. The settings below can be changed later. Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/Dosing-automations\">dosing automations</a>.\n        </Typography>\n\n        <form>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">Automation</FormLabel>\n            <Select\n              native\n              value={algoSettings[\"dosing_automation\"]}\n              onChange={handleAlgoSelectionChange}\n              style={{maxWidth: \"200px\"}}\n            >\n              {Object.keys(automations).map((key) => <option id={key} value={key} key={\"change-io\" + key}>{automations[key].name}</option>)}\n            </Select>\n\n            {Object.keys(automations).length > 0 && <AutomationForm fields={automations[algoSettings[\"dosing_automation\"]].fields} updateParent={updateFromChild}/>}\n\n            <FormControlLabel\n              control={<Checkbox checked={algoSettings.skip_first_run}\n                                  color=\"primary\"\n                                  onChange={handleSkipFirstRunChange}\n                                  size=\"small\"/>\n                      }\n              label=\"Skip first run\"\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color={isClicked ? \"default\" : \"primary\" }\n              onClick={onSubmit}\n              style={{width: \"120px\", marginTop: \"20px\"}}\n            >\n              Submit\n            </Button>\n          </FormControl>\n        </form>\n\n\n      </DialogContent>\n    </Dialog>\n    </div>\n)}\n\n\nexport default ButtonChangeDosingDialog;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Client, Message } from \"paho-mqtt\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PioreactorIcon from \"./PioreactorIcon\"\nimport AutomationForm from \"./AutomationForm\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: theme.spacing(2)\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n}));\n\n\n\nfunction ButtonChangeLEDDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [algoSettings, setAlgoSettings] = useState({led_automation: \"silent\", skip_first_run: false})\n  const [isClicked, setIsClicked] = useState(false)\n  const [client, setClient] = useState(null)\n  const [automations, setAutomations] = useState({})\n\n\n  useEffect(() => {\n    async function fetchLEDAutomations() {\n      await fetch(\"/contrib/automations/led\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfAuto) => {\n          setAutomations(Object.assign({}, ...listOfAuto.map(auto => ({ [auto.key]: auto}))))\n        })\n        .catch((error) => {})\n    }\n    fetchLEDAutomations();\n  }, [])\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    if (!props.config['network.topology']){\n      return\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_ButtonChangeLEDDialog\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_ButtonChangeLEDDialog\" + Math.random()\n      );\n    }\n\n    client.connect({timeout: 180});\n    setClient(client)\n\n  },[props.config])\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAlgoSelectionChange = (e) => {\n    setAlgoSettings({led_automation: e.target.value})\n  }\n\n  const updateFromChild = (setting) => {\n    setAlgoSettings(prevState => ({...prevState, ...setting}))\n  }\n\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setIsClicked(true)\n    var message = new Message(JSON.stringify(algoSettings));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      \"led_control\",\n      \"led_automation\",\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    try{\n      client.publish(message);\n    }\n    catch (e){\n      console.log(e)\n    }\n    setOpen(false);\n  }\n  return (\n    <div>\n    <Button\n      style={{marginTop: \"10px\"}}\n      size=\"small\"\n      color=\"primary\"\n      disabled={!props.currentLEDAutomation}\n      onClick={handleClickOpen}\n    >\n      Change LED automation\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {height: \"100%\"}}}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {props.title || ((props.config['ui.rename'] && props.config['ui.rename'][props.unit]) ? `${props.config['ui.rename'][props.unit]} (${props.unit})` : `${props.unit}`)}\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          LED automation\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          LED automations control how and when to provide light to the Pioreactor. The settings below can be changed later. Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/LED-automations\">LED automations</a>.\n        </Typography>\n\n        <form>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Automation</FormLabel>\n            <Select\n              native\n              value={algoSettings[\"led_automation\"]}\n              onChange={handleAlgoSelectionChange}\n              style={{maxWidth: \"200px\"}}\n            >\n              {Object.keys(automations).map((key) => <option id={key} value={key} key={\"change-io\" + key}>{automations[key].name}</option>)}\n\n            </Select>\n\n            {Object.keys(automations).length > 0 && <AutomationForm fields={automations[algoSettings[\"led_automation\"]].fields} updateParent={updateFromChild}/>}\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color={isClicked ? \"default\" : \"primary\" }\n              onClick={onSubmit}\n              style={{width: \"120px\", marginTop: \"20px\"}}\n            >\n              Submit\n            </Button>\n          </FormControl>\n        </form>\n\n\n      </DialogContent>\n    </Dialog>\n    </div>\n)}\n\n\nexport default ButtonChangeLEDDialog;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Client, Message } from \"paho-mqtt\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PioreactorIcon from \"./PioreactorIcon\"\nimport AutomationForm from \"./AutomationForm\"\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginTop: theme.spacing(2)\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n}));\n\n\nfunction ButtonChangeTemperatureDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [algoSettings, setAlgoSettings] = useState({temperature_automation: \"silent\", skip_first_run: false})\n  const [isClicked, setIsClicked] = useState(false)\n  const [client, setClient] = useState(null)\n  const [automations, setAutomations] = useState({})\n\n\n  useEffect(() => {\n    async function fetchTemperatureAutomations() {\n      await fetch(\"/contrib/automations/temperature\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfAuto) => {\n          setAutomations(Object.assign({}, ...listOfAuto.map(auto => ({ [auto.key]: auto}))))\n        })\n        .catch((error) => {})\n    }\n    fetchTemperatureAutomations();\n  }, [])\n\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    if (!props.config['network.topology']){\n      return\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_ButtonChangeTemperatureDialog\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_ButtonChangeTemperatureDialog\" + Math.random()\n      );\n    }\n\n    client.connect({timeout: 180});\n    setClient(client)\n  },[props.config])\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAlgoSelectionChange = (e) => {\n    setAlgoSettings({temperature_automation: e.target.value})\n  }\n\n  const updateFromChild = (setting) => {\n    setAlgoSettings(prevState => ({...prevState, ...setting}))\n  }\n\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setIsClicked(true)\n    var message = new Message(JSON.stringify(algoSettings));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      \"temperature_control\",\n      \"temperature_automation\",\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    try{\n      client.publish(message);\n    }\n    catch (e){\n      console.log(e)\n    }\n    setOpen(false);\n  }\n  return (\n    <div>\n    <Button\n      style={{marginTop: \"10px\"}}\n      size=\"small\"\n      color=\"primary\"\n      disabled={!props.currentTemperatureAutomation}\n      onClick={handleClickOpen}\n    >\n      Change temperature automation\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {height: \"100%\"}}}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {props.title || ((props.config['ui.rename'] && props.config['ui.rename'][props.unit]) ? `${props.config['ui.rename'][props.unit]} (${props.unit})` : `${props.unit}`)}\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          Temperature automation\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Temperature automations control the temperature of the Pioreactor's vial. The settings below can be changed later. Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/temperature-automations\">temperature automations</a>.\n        </Typography>\n\n        <form>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Automation</FormLabel>\n            <Select\n              native\n              value={algoSettings[\"temperature_automation\"]}\n              onChange={handleAlgoSelectionChange}\n              style={{maxWidth: \"200px\"}}\n            >\n              {Object.keys(automations).map((key) => <option id={key} value={key} key={\"change-io\" + key}>{automations[key].name}</option>)}\n\n            </Select>\n            {Object.keys(automations).length > 0 && <AutomationForm fields={automations[algoSettings[\"temperature_automation\"]].fields} updateParent={updateFromChild}/>}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color={isClicked ? \"default\" : \"primary\" }\n              onClick={onSubmit}\n              style={{width: \"120px\", marginTop: \"20px\"}}\n            >\n              Submit\n            </Button>\n          </FormControl>\n        </form>\n\n\n      </DialogContent>\n    </Dialog>\n    </div>\n)}\n\n\nexport default ButtonChangeTemperatureDialog;\n","import React, {useState} from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n    width: \"175px\",\n  },\n  actionForm: {\n    padding: \"20px 0px 0px 0px\",\n  }\n});\n\n\nconst actionToAct = {\n  \"remove_waste\": \"Removing waste\",\n  \"add_media\": \"Adding media\",\n  \"add_alt_media\": \"Adding alt. media\",\n\n}\n\nexport default function ActionPumpForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [mL, setML] = useState(EMPTYSTATE);\n  const [duration, setDuration] = useState(EMPTYSTATE);\n  const [isMLDisabled, setIsMLDisabled] = useState(false);\n  const [isDurationDisabled, setIsDurationDisabled] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (mL !== EMPTYSTATE || duration !== EMPTYSTATE) {\n      const params = mL !== \"\" ? { ml: mL, source_of_event: \"UI\"} : { duration: duration, source_of_event: \"UI\"};\n      fetch(`/run/${props.action}/${props.unit}`, {\n        method: \"POST\",\n        body: JSON.stringify(params),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      setOpenSnackbar(true);\n    }\n  }\n\n  function stopPump(e) {\n    fetch(`/stop/${props.action}/${props.unit}`, {method: \"POST\"})\n  }\n\n  function runPumpContinuously(e) {\n      fetch(`/run/add_media/${props.unit}`, {\n        method: \"POST\",\n        body: JSON.stringify({continuously: \"\", source_of_event: \"UI\"}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  function handleMLChange(e) {\n    setML(e.target.value);\n    setIsDurationDisabled(true);\n    if (e.target.value === EMPTYSTATE) {\n      setIsDurationDisabled(false);\n    }\n  }\n\n  function handleDurationChange(e) {\n    setDuration(e.target.value);\n    setIsMLDisabled(true);\n    if (e.target.value === EMPTYSTATE) {\n      setIsMLDisabled(false);\n    }\n  }\n\n  return (\n    <form id={props.action} className={classes.actionForm}>\n      <TextField\n        name=\"mL\"\n        value={mL}\n        size=\"small\"\n        id={props.action + \"_mL\"}\n        label=\"mL\"\n        variant=\"outlined\"\n        disabled={isMLDisabled}\n        onChange={handleMLChange}\n        className={classes.actionTextField}\n      />\n      <TextField\n        name=\"duration\"\n        value={duration}\n        size=\"small\"\n        id={props.action + \"_duration\"}\n        label=\"seconds\"\n        variant=\"outlined\"\n        disabled={isDurationDisabled}\n        onChange={handleDurationChange}\n        className={classes.actionTextField}\n      />\n      <br />\n      <br />\n      <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"small\"\n          color=\"primary\"\n          onClick={onSubmit}\n        >\n          {props.action.replace(/_/g, \" \")}\n        </Button>\n        <div>\n          {props.action === \"add_media\" && <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={runPumpContinuously}\n          >\n            Run continuously\n          </Button>\n        }\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            onClick={stopPump}\n          >\n            Interrupt\n          </Button>\n        </div>\n      </div>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={actionToAct[props.action] + (duration !== EMPTYSTATE ? (\" for \" +  duration + \" seconds.\") : (\" until \" + mL + \"mL.\"))}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.action}\n      />\n    </form>\n  );\n}","import React, {useState} from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n  },\n  actionForm: {\n    padding: \"10px 0px 0px 0px\",\n  }\n});\n\n\n\nexport default function ActionLEDForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [intensity, setIntensity] = useState(EMPTYSTATE);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (intensity !== EMPTYSTATE) {\n      // TODO: this could also fire an mqtt event to set it in LEDAlgorithm, in case that is running\n      const params = { intensity: intensity, channel: props.channel, source_of_event: \"UI\"}\n      fetch(`/run/led_intensity/${props.unit}`, {\n        method: \"POST\",\n        body: JSON.stringify(params),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n      );\n      setOpenSnackbar(true);\n    }\n  }\n\n\n  function handleChange(e) {\n    setIntensity(e.target.value);\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n\n  return (\n    <form id={props.action} className={classes.actionForm}>\n      <TextField\n        name=\"intensity\"\n        value={intensity}\n        size=\"small\"\n        id={props.channel + \"_intensity_edit\"}\n        label=\"new intensity\"\n        variant=\"outlined\"\n        onChange={handleChange}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n        }}\n        className={classes.actionTextField}\n      />\n      <br />\n      <br />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        onClick={onSubmit}\n      >\n      Submit\n      </Button>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={`Updating Channel ${props.channel} to ${intensity}%.`}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.channel}\n      />\n    </form>\n  );\n}","import clsx from 'clsx';\nimport { Client, Message } from \"paho-mqtt\";\n\nimport React, {useState, useEffect} from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport FlareIcon from '@material-ui/icons/Flare';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport TuneIcon from '@material-ui/icons/Tune';\n\nimport ButtonChangeDosingDialog from \"./components/ButtonChangeDosingDialog\"\nimport ButtonChangeLEDDialog from \"./components/ButtonChangeLEDDialog\"\nimport ButtonChangeTemperatureDialog from \"./components/ButtonChangeTemperatureDialog\"\nimport ActionDosingForm from \"./components/ActionDosingForm\"\nimport ActionLEDForm from \"./components/ActionLEDForm\"\nimport PioreactorIcon from \"./components/PioreactorIcon\"\nimport TactileButtonNotification from \"./components/TactileButtonNotification\";\nimport UnderlineSpan from \"./components/UnderlineSpan\";\n\n\nconst readyGreen = \"#4caf50\"\nconst disconnectedGrey = \"grey\"\nconst lostRed = \"#DE3618\"\n\nconst useStyles = makeStyles((theme) => ({\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n  pioreactorCard: {\n    marginTop: \"0px\",\n    marginBottom: \"20px\",\n  },\n  cardContent: {\n    padding: \"10px 20px 20px 20px\"\n  },\n  unitTitle: {\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    fontWeight: 500,\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n  disabledText: {\n    color: \"rgba(0, 0, 0, 0.38)\",\n  },\n  textbox:{\n    width: \"127px\",\n    marginTop: \"10px\"\n  },\n  textboxLabel:{\n    width: \"100px\",\n    marginTop: \"10px\",\n    marginRight: \"5px\"\n  },\n  footnote: {\n    marginBottom: 0,\n    fontSize: 12,\n  },\n  textField: {\n    marginTop: \"15px\",\n    maxWidth: \"180px\",\n  },\n  textFieldWide: {\n    marginTop: \"15px\",\n    maxWidth: \"220px\",\n  },\n  textFieldCompact: {\n    marginTop: \"15px\",\n    width: \"120px\",\n  },\n  slider: {\n    width: \"70%\",\n    margin: \"40px auto 0px auto\",\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n  jobButton: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\"\n  },\n  unitSettingsSubtext:{\n    fontSize: \"11px\"\n  },\n  unitSettingsSubtextEmpty:{\n    minHeight: \"15px\"\n  },\n  ledBlock:{\n    width: \"55px\",\n    display: \"inline-block\"\n  },\n  rowOfUnitSettingDisplay:{\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"stretch\",\n    alignContent: \"stretch\",\n  }\n}));\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      key={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>{children}</div>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n\nfunction UnitSettingDisplaySubtext(props){\n  const classes = useStyles();\n\n  if (props.subtext){\n    return <div className={classes.unitSettingsSubtext}><code>{props.subtext}</code></div>\n  }\n  else{\n    return <div className={classes.unitSettingsSubtextEmpty}></div>\n  };\n}\n\n\nfunction UnitSettingDisplay(props) {\n  const classes = useStyles();\n  const stateDisplay = {\n    \"init\":          {display: \"Starting\", color: readyGreen},\n    \"ready\":         {display: \"On\", color: readyGreen},\n    \"sleeping\":      {display: \"Paused\", color: disconnectedGrey},\n    \"disconnected\":  {display: \"Off\", color: disconnectedGrey},\n    \"lost\":          {display: \"Lost\", color: lostRed},\n    \"NA\":            {display: \"Not available\", color: disconnectedGrey},\n  }\n  const value = props.value === null ?  \"\"  : props.value\n  if (props.isStateSetting) {\n    if (!props.isUnitActive) {\n      return <div className={clsx({[classes.disabledText]: !props.isUnitActive})}> {stateDisplay[value].display} </div>;\n    } else {\n      var displaySettings = stateDisplay[value]\n      return (\n        <React.Fragment>\n          <div style={{ color: displaySettings.color, fontWeight: 500}}>\n            {displaySettings.display}\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n    )}\n  } else if (props.isLEDIntensity) {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>;\n    } else {\n      const ledIntensities = JSON.parse(value)\n        // the | {} is here to protect against the UI loading from a broken config.\n      const LEDMap = props.config['leds']\n      const renamedA = (LEDMap['A']) ? (LEDMap['A'].replace(\"_\", \" \")) : null\n      const renamedB = (LEDMap['B']) ? (LEDMap['B'].replace(\"_\", \" \")) : null\n      const renamedC = (LEDMap['C']) ? (LEDMap['C'].replace(\"_\", \" \")) : null\n      const renamedD = (LEDMap['D']) ? (LEDMap['D'].replace(\"_\", \" \")) : null\n\n      return(\n        <React.Fragment>\n          <div style={{fontSize: \"13px\"}}>\n            <div>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedA ? renamedA : null}>A</UnderlineSpan>: {ledIntensities[\"A\"]}%\n              </span>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedB ? renamedB : null}>B</UnderlineSpan>: {ledIntensities[\"B\"]}%\n              </span>\n            </div>\n            <div>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedC ? renamedC : null}>C</UnderlineSpan>: {ledIntensities[\"C\"]}%\n              </span>\n              <span className={classes.ledBlock}>\n                <UnderlineSpan title={renamedD ? renamedD : null}>D</UnderlineSpan>: {ledIntensities[\"D\"]}%\n              </span>\n            </div>\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      )\n    }\n  } else {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return (\n        <React.Fragment>\n          <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div style={{ fontSize: \"13px\"}}>\n            {(typeof value === \"string\"\n              ? value\n              : +value.toFixed(props.precision)) +\n              (props.measurementUnit ? props.measurementUnit : \"\")}\n          </div>\n          <UnitSettingDisplaySubtext subtext={props.subtext}/>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\n\n\nfunction ButtonConfirmStopProcessDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const onConfirm = () => {\n    fetch(\"/stop_all\", {method: \"POST\"})\n    handleClose()\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\"}} color=\"secondary\" onClick={handleClickOpen}>\n        <ClearIcon className={classes.textIcon}/> Stop all activity\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Stop all Pioreactor activity?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will stop all activies (stirring, dosing, optical density reading, etc.) in <b>all</b> Pioreactor units. Do you wish to stop all activities?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onConfirm} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\n\nfunction AddNewPioreactor(props){\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [isRunning, setIsRunning] = React.useState(false)\n  const [errorMsg, setErrorMsg] = React.useState(\"\")\n  const [isError, setIsError] = React.useState(\"\")\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n  const handleNameChange = evt => {\n    setName(evt.target.value)\n  }\n\n  const onSubmit = (event) =>{\n    event.preventDefault()\n    if (!name) {\n      setIsError(true)\n      setErrorMsg(\"Provide a name for the new Pioreactor\")\n      return\n    }\n    setIsError(false)\n    setIsRunning(true)\n    fetch('add_new_pioreactor',{\n        method: \"POST\",\n        body: JSON.stringify({newPioreactorName: name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    })\n    .then(response => {\n        if(!response.ok){\n          setIsError(true)\n          setIsRunning(false)\n          response.json().then(data => setErrorMsg(`Unable to complete installation. ${data.stderr}`))\n        }\n    })\n  }\n\n  const runningFeedback = isRunning ? <CircularProgress color=\"inherit\" size={24}/> : \"Install and connect\"\n\n  return (\n    <React.Fragment>\n    <Button onClick={handleClickOpen} style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n      <AddIcon className={classes.textIcon}/> Add new Pioreactor\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        <Typography className={classes.unitTitleDialog}>\n        Add new Pioreactor\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n      <p> To add a new Pioreactor, you'll need the following: </p>\n      <ul>\n        <li>A RaspberryPi, with power cord</li>\n        <li>A blank microSD card</li>\n        <li>A computer with the <a href=\"https://www.raspberrypi.org/software/\">RaspberryPi Imager</a> installed and that can read & write to the microSD card</li>\n        <li>The Pioreactor hardware hat</li>\n      </ul>\n      <p> With that all ready, let's begin: </p>\n      <ol>\n        <li>Insert your microSD card into your computer.</li>\n        <li>Open the <a href=\"https://www.raspberrypi.org/software/\">RaspberryPi Imager</a>, and hold \"ctrl-shift-x\" to bring up the settings menu</li>\n        <li>Check \"Enable SSH\", with password <code>raspberry</code>. <b>This is important</b>.</li>\n        <li>Check \"Configure wifi\", and add your credentials.</li>\n        <li> Click \"Save\".</li>\n        <li>Choose the \"Raspberry Pi OS Lite\" and your storage, and click \"write\". </li>\n        <li>When done, unmount the microSD, insert it into the RaspberryPi, and attach the Pioreactor hat to the RaspberryPi.</li>\n        <li>Turn on the RaspberryPi by inserting the power cord.</li>\n      </ol>\n\n      <p>Below, provide a unique name for your new Pioreactor (letters and digits only), and\n      your existing Pioreactors will automatically install the required software and connect it to the cluster.\n      </p>\n\n      <p>It may take up to 5 minutes to install the software. When finished, the new Pioreactor\n      will show up on this page. You don't need to stay on this page while it's installing.</p>\n\n\n      <div >\n        <TextField\n          size=\"small\"\n          id=\"new-pioreactor-name\"\n          label=\"Provide a name\"\n          variant=\"outlined\"\n          className={classes.textFieldWide}\n          onChange={handleNameChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <PioreactorIcon style={{fontSize: \"1.1em\"}}/>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n\n      <div style={{minHeight: \"50px\"}}>\n        {isError? <p><Box color=\"error.main\">{errorMsg}</Box></p> : <p></p>}\n        {isRunning? <p>Installation is occuring in the background. You may navigate away from this page, including adding more Pioreactors. </p> : <p> </p>}\n      </div>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{marginTop: \"15px\"}}\n        onClick={onSubmit}\n        type=\"submit\"\n      >\n        {runningFeedback}\n      </Button>\n\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={\"Installing new Pioreactor\"}\n      autoHideDuration={7000}\n      key={\"snackbar-add-new\"}\n    />\n    </React.Fragment>\n)}\n\n\n\nfunction PioreactorHeader(props) {\n\n  return (\n    <div>\n      <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n        <Typography variant=\"h5\" component=\"h1\">\n          <Box fontWeight=\"fontWeightBold\">\n            Pioreactors\n          </Box>\n        </Typography>\n        <div >\n          <SettingsActionsDialogAll config={props.config} experiment={props.experiment}/>\n          <AddNewPioreactor config={props.config}/>\n          <ButtonConfirmStopProcessDialog/>\n        </div>\n      </div>\n      <Divider/>\n    </div>\n  )\n}\n\n\n\nfunction PatientButton(props) {\n  const [buttonText, setButtonText] = useState(props.buttonText)\n\n  useEffect(\n    () => {\n      setButtonText(props.buttonText)\n    }\n  , [props.buttonText])\n\n  function wrappingOnClick() {\n    function f() {\n      setButtonText(<CircularProgress color=\"inherit\" size={22}/>)\n      props.onClick()\n    }\n    return f\n  }\n\n  return (\n    <Button\n      disableElevation\n      style={{width: \"70px\", marginTop: \"5px\"}}\n      color={props.color}\n      variant={props.variant}\n      size=\"small\"\n      onClick={wrappingOnClick()}\n    >\n      {buttonText}\n    </Button>\n  )\n}\n\nfunction CalibrateDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [tabValue, setTabValue] = React.useState(0);\n\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setTabValue(0)\n    setOpen(false);\n  };\n\n\n  function startPioreactorJob(job){\n    return function() {\n      fetch(\"/run/\" + job + \"/\" + props.unit, {method: \"POST\"}).then(res => {\n      })\n    }\n  }\n\n  function clearBlank() {\n    return function() {\n      var message = new Message(\"\");\n      message.retained = true\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        props.experiment,\n        \"od_blank\",\n        \"mean\",\n      ].join(\"/\");\n      props.client.publish(message);\n    }\n  }\n\n  function createUserButtonsBasedOnState(jobState, job){\n\n    switch (jobState){\n      case \"disconnected\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"ready\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                buttonText=\"Running\"\n               />\n              </div>)\n      default:\n        return(<div></div>)\n    }\n   }\n\n  const blankODButton = createUserButtonsBasedOnState(props.odBlankJobState, \"od_blank\")\n\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', float: \"right\" }} color=\"primary\" disabled={props.disabled} onClick={handleClickOpen}>\n        <TuneIcon color={props.disabled ? \"disabled\" : \"primary\"} className={classes.textIcon}/> Calibrate\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle>\n          <Typography className={classes.suptitle}>\n            <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {(props.config['ui.rename'] &&  props.config['ui.rename'][props.unit]) ? `${props.config['ui.rename'][props.unit]} / ${props.unit}` : `${props.unit}`}\n          </Typography>\n        <Tabs\n          value={tabValue}\n          onChange={handleTabChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          >\n          <Tab label=\"Blanks\"/>\n          <Tab label=\"Dosing\" disabled={true}/>\n        </Tabs>\n        </DialogTitle>\n        <DialogContent>\n          <TabPanel value={tabValue} index={0}>\n            <Typography  gutterBottom>\n             Record optical densities of blank (optional)\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              For more accurate growth rate and biomass inferences, you can subtract out the\n              media's optical density per sensor. Read more about <a href=\"\">using blanks</a>.\n            </Typography>\n\n            <div style={{display: \"flex\", marginBottom: \"10px\"}}>\n              <span style={{marginRight: \"5px\"}}>Stirring:</span>\n              <UnitSettingDisplay\n                value={props.stirringJobState}\n                isUnitActive={true}\n                default=\"disconnected\"\n                isStateSetting\n              />\n            </div>\n\n            {blankODButton}\n\n            <Typography variant=\"body2\" component=\"p\" style={{marginTop: \"20px\"}}>\n              Recorded optical densities of blank vial: <code>{props.odBlankReading ? Object.entries(JSON.parse(props.odBlankReading)).map( ([k, v]) => `${k}:${v.toFixed(3)}` ).join(\", \") : \"—\"}</code> <Button color=\"primary\" size=\"small\" disabled={!props.odBlankReading} onClick={clearBlank()}>Clear</Button>\n            </Typography>\n            <Divider className={classes.divider} />\n\n          </TabPanel>\n        </DialogContent>\n      </Dialog>\n  </React.Fragment>)\n}\n\n\n\n\n\n\nfunction SettingsActionsDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n\n  function setPioreactorJobState(job, state) {\n    return function() {\n      setPioreactorJobAttr(`${job}/$state`, state)\n    };\n  }\n\n  function startPioreactorJob(job){\n    return function() {\n      fetch(\"/run/\" + job + \"/\" + props.unit, {method: \"POST\"}).then(res => {\n      })\n    }\n  }\n\n  function stopPioreactorJob(job){\n    return function() {\n      setPioreactorJobAttr(`${job}/$state`, \"disconnected\")\n      //fetch(\"/stop/\" + job + \"/\" + props.unit, {method: \"POST\"}).then(res => {})\n    }\n  }\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 1;\n    try{\n      props.client.publish(message);\n    }\n    catch (e) {\n      console.log(e)\n      props.client.connect({onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n  function setPioreactorJobAttrOnEnter(e) {\n    if (e.key === \"Enter\") {\n      setPioreactorJobAttr(e.target.id, e.target.value);\n      setSnackbarMessage(`Updated to ${e.target.value}.`)\n      setSnackbarOpen(true)\n    }\n  }\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setTabValue(0)\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n\n  function createUserButtonsBasedOnState(jobState, job){\n    switch (jobState){\n      case \"lost\":\n        return (<div key={\"patient_buttons_\" + job}>\n          <PatientButton\n            color=\"secondary\"\n            variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n            buttonText=\"Start\"\n          />\n        </div>)\n      case \"disconnected\":\n       return (<div key={\"patient_buttons_\" + job}>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"init\":\n        return (<div key={\"patient_buttons_\" + job}>\n          <PatientButton\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>(false)}\n            buttonText=<CircularProgress color=\"inherit\" size={22}/>\n          />\n          <PatientButton\n            color=\"secondary\"\n            onClick={stopPioreactorJob(job)}\n            buttonText=\"Stop\"\n          />\n        </div>)\n      case \"ready\":\n        return (<div key={\"patient_buttons_\" + job}>\n          <PatientButton\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={setPioreactorJobState(job, \"sleeping\")}\n            buttonText=\"Pause\"\n          />\n          <PatientButton\n            color=\"secondary\"\n            onClick={stopPioreactorJob(job)}\n            buttonText=\"Stop\"\n          />\n        </div>)\n      case \"sleeping\":\n        return (\n          <div key={\"patient_buttons_\" + job}>\n            <PatientButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={setPioreactorJobState(job, \"ready\")}\n              buttonText=\"Resume\"\n            />\n            <PatientButton\n              color=\"secondary\"\n              onClick={stopPioreactorJob(job)}\n              buttonText=\"Stop\"\n            />\n          </div>\n          )\n      default:\n        return(<div key={\"patient_buttons_\" + job}></div>)\n    }\n   }\n  const LEDMap = props.config['leds']\n  const buttons = Object.fromEntries(Object.entries(props.jobs).map( ([job_key, job], i) => [job_key, createUserButtonsBasedOnState(job.state, job_key)]))\n\n  const stateDisplay = {\n    \"init\":          {display: \"Starting\", color: readyGreen},\n    \"ready\":         {display: \"On\", color: readyGreen},\n    \"sleeping\":      {display: \"Paused\", color: disconnectedGrey},\n    \"disconnected\":  {display: \"Off\", color: disconnectedGrey},\n    \"lost\":          {display: \"Lost\", color: lostRed},\n    \"NA\":            {display: \"Not available\", color: disconnectedGrey},\n  }\n\n  return (\n    <div>\n    <Button style={{textTransform: 'none', float: \"right\" }} disabled={props.disabled} onClick={handleClickOpen} color=\"primary\">\n      <SettingsIcon color={props.disabled ? \"disabled\" : \"primary\"} className={classes.textIcon}/> Manage\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {(props.config['ui.rename'] &&  props.config['ui.rename'][props.unit]) ? `${props.config['ui.rename'][props.unit]} / ${props.unit}` : `${props.unit}`}\n        </Typography>\n      <Tabs\n        value={tabValue}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        >\n        <Tab label=\"Activities\"/>\n        <Tab label=\"Settings\"/>\n        <Tab label=\"Dosing\"/>\n        <Tab label=\"LEDs\"/>\n      </Tabs>\n      </DialogTitle>\n      <DialogContent>\n        <TabPanel value={tabValue} index={0}>\n          {/* Activities panel */}\n          {Object.entries(props.jobs)\n            .filter(([job_key, job]) => job.metadata.display)\n            .map(([job_key, job]) =>\n            <div key={job_key}>\n              <div style={{justifyContent: \"space-between\", display: \"flex\"}}>\n                <Typography display=\"block\">\n                  {job.metadata.name}\n                </Typography>\n                <Typography display=\"block\" gutterBottom>\n                  <span style={{color:stateDisplay[job.state].color}}>{stateDisplay[job.state].display}</span>\n                </Typography>\n              </div>\n              <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"textSecondary\">\n                {job.metadata.source !== \"app\" ? `Installed by ${job.metadata.source}` : \"\"}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: job.metadata.description}}/>\n              </Typography>\n\n              {buttons[job_key]}\n\n              <Divider className={classes.divider} />\n            </div>\n          )}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          {Object.values(props.jobs)\n            .filter(job => job.metadata.display)\n            .map(job =>\n            Object.entries(job)\n              .filter(([key, setting]) => (key !== \"state\") && (key !== \"metadata\"))\n              .filter(([_, setting]) => setting.display)\n              .map(([key, setting]) =>\n            <React.Fragment>\n              <Typography  gutterBottom>\n                {setting.label}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                {setting.description}\n              </Typography>\n              <TextField\n                size=\"small\"\n                id={`${job.metadata.key.replace(\"_control\", \"_automation\")}/${key}`}\n                defaultValue={setting.value}\n                InputProps={{\n                  endAdornment: <InputAdornment position=\"end\">{setting.unit}</InputAdornment>,\n                }}\n                variant=\"outlined\"\n                onKeyPress={setPioreactorJobAttrOnEnter}\n                className={classes.textFieldCompact}\n              />\n              <Divider className={classes.divider} />\n            </React.Fragment>\n\n          ))}\n\n\n          <Typography  gutterBottom>\n            Dosing automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            {props.jobs.dosing_control && props.jobs.dosing_control.state !== \"disconnected\" &&\n              <React.Fragment>\n              Currently running dosing automation <code>{props.jobs.dosing_control.dosing_automation.value}</code>.\n              Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/dosing-automations\">dosing automations</a>.\n              </React.Fragment>\n            }\n            {props.jobs.dosing_control && props.jobs.dosing_control.state === \"disconnected\" &&\n\n              <React.Fragment>\n              You can change the dosing automation after starting the Dosing control activity.\n              </React.Fragment>\n            }\n          </Typography>\n\n          <ButtonChangeDosingDialog\n            unit={props.unit}\n            config={props.config}\n            experiment={props.experiment}\n            currentDosingAutomation={props.jobs.dosing_control && props.jobs.dosing_control.dosing_automation.value}\n          />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            LED automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            {props.jobs.led_control && props.jobs.led_control.state !== \"disconnected\" &&\n              <React.Fragment>\n              Currently running LED automation <code>{props.jobs.led_control.led_automation.value}</code>.\n              Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/led-automations\">LED automations</a>.\n              </React.Fragment>\n            }\n            {props.jobs.led_control && props.jobs.led_control.state  === \"disconnected\" &&\n\n              <React.Fragment>\n              You can change the LED automation after starting the LED control activity.\n              </React.Fragment>\n            }\n          </Typography>\n\n          <ButtonChangeLEDDialog\n            unit={props.unit}\n            config={props.config}\n            experiment={props.experiment}\n            currentLEDAutomation={props.jobs.led_control && props.jobs.led_control.led_automation.value}\n          />\n          <Divider className={classes.divider} />\n\n          <Typography  gutterBottom>\n            Temperature automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            {props.jobs.temperature_control && props.jobs.temperature_control.state !== \"disconnected\" &&\n              <React.Fragment>\n              Currently running temperature automation <code>{props.jobs.temperature_control.temperature_automation.value}</code>.\n              Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/temperature-automations\">temperature automations</a>.\n              </React.Fragment>\n            }\n            {props.jobs.temperature_control && props.jobs.temperature_control.state === \"disconnected\" &&\n\n              <React.Fragment>\n              You can change the temperature automation after starting the Temperature control activity.\n              </React.Fragment>\n            }\n          </Typography>\n\n          <ButtonChangeTemperatureDialog\n            unit={props.unit}\n            config={props.config}\n            experiment={props.experiment}\n            currentTemperatureAutomation={props.jobs.temperature_control && props.jobs.temperature_control.temperature_automation.value}\n          />\n          <Divider className={classes.divider} />\n\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={2}>\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the media pump for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_media\" unit={props.unit} />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the waste pump for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"remove_waste\" unit={props.unit} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the alternative media pump for a set duration (seconds), or a set\n            volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_alt_media\" unit={props.unit} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['A']) ? \"Channel A\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['A']) ? (LEDMap['A'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel A\" }\n          </Typography>\n          <ActionLEDForm channel=\"A\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['B']) ? \"Channel B\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['B']) ? (LEDMap['B'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel B\" }\n          </Typography>\n          <ActionLEDForm channel=\"B\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['C']) ? \"Channel C\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['C']) ? (LEDMap['C'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel C\" }\n          </Typography>\n\n          <ActionLEDForm channel=\"C\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(LEDMap['D']) ? \"Channel D\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(LEDMap['D']) ? (LEDMap['D'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel D\" }\n          </Typography>\n          <ActionLEDForm channel=\"D\" unit={props.unit} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      resumeHideDuration={2000}\n      key={\"snackbar\" + props.unit + \"settings\"}\n    />\n    </div>\n  );\n}\n\n\nfunction SettingsActionsDialogAll({config, experiment}) {\n\n  const classes = useStyles();\n  const unit = \"$broadcast\"\n  const [open, setOpen] = useState(false);\n  const [client, setClient] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [tabValue, setTabValue] = React.useState(0);\n  const [jobs, setJobs] = React.useState({});\n\n\n  useEffect(() => {\n    function fetchContribBackgroundJobs() {\n      fetch(\"/contrib/background_jobs\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfJobs) => {\n          var jobs_ = {}\n          for (const job of listOfJobs){\n            var metaData_ = {state: \"disconnected\", metadata: {name: job.name, subtext: job.subtext, display: job.display, description: job.description, key: job.job_name, source:job.source}}\n            for(var i = 0; i < job[\"editable_settings\"].length; ++i){\n              var field = job[\"editable_settings\"][i]\n              metaData_[field.key] = {value: field.default, label: field.label, type: field.type, unit: field.unit || null, display: field.display, description: field.description}\n            }\n            jobs_[job.job_name] = metaData_\n          }\n          setJobs((prev) => ({...prev, ...jobs_}))\n        })\n        .catch((error) => {})\n    }\n    fetchContribBackgroundJobs();\n  }, [])\n\n\n  useEffect(() => {\n    if (!config['network.topology']){\n      return\n    }\n\n    var client\n    if (config.remote && config.remote.ws_url) {\n      client = new Client(\n        `ws://${config.remote.ws_url}/`,\n        \"webui_SettingsActionsDialogAll\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${config['network.topology']['leader_address']}`, 9001,\n        \"webui_SettingsActionsDialogAll\" + Math.random()\n      );\n    }\n    client.connect({timeout: 180, reconnect: true});\n    setClient(client)\n  },[config])\n\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  function setPioreactorJobState(job, state) {\n    return function sendMessage() {\n      var message = new Message(String(state));\n      message.destinationName = [\n        \"pioreactor\",\n        unit,\n        experiment,\n        job.metadata.key,\n        \"$state\",\n        \"set\",\n      ].join(\"/\");\n      message.qos = 1;\n      try{\n        client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 750)\n      }\n      finally {\n        const verbs = {\n          \"sleeping\":  \"Pausing\",\n          \"disconnected\":  \"Stopping\",\n          \"ready\":  \"Resuming\",\n        }\n        setSnackbarMessage(`${verbs[state]} ${job.metadata.name.toLowerCase()} on all active Pioreactors`)\n        setSnackbarOpen(true)\n      }\n    };\n  }\n\n  function startPioreactorJob(job){\n    return function() {\n      setSnackbarMessage(`Starting ${job.metadata.name.toLowerCase()} on all active Pioreactors`)\n      setSnackbarOpen(true)\n      fetch(\"/run/\" + job.metadata.key + \"/\" + unit, {method: \"POST\"})\n    }\n  }\n\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      unit,\n      experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 1;\n    try{\n      client.publish(message);\n      setSnackbarOpen(true)\n    }\n    catch (e) {\n      console.log(e)\n      client.connect({onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n  function setPioreactorJobAttrOnEnter(e) {\n    if (e.key === \"Enter\") {\n      setPioreactorJobAttr(e.target.id, e.target.value);\n      setSnackbarMessage(`Updated to ${e.target.value}.`)\n      setSnackbarOpen(true)\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setTabValue(0)\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n\n  function createUserButtonsBasedOnState(job){\n    return (<div key={job.key}>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={startPioreactorJob(job)}\n        >\n          Start\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setPioreactorJobState(job, \"sleeping\")}\n        >\n          Pause\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setPioreactorJobState(job, \"ready\")}\n        >\n          Resume\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"secondary\"\n          onClick={setPioreactorJobState(job, \"disconnected\")}\n        >\n          Stop\n        </Button>\n      </div>\n  )}\n\n\n  const buttons = Object.fromEntries(Object.entries(jobs).map( ([job_key, job], i) => [job_key, createUserButtonsBasedOnState(job)]))\n\n\n  return (\n    <React.Fragment>\n    <Button style={{textTransform: 'none', float: \"right\" }} onClick={handleClickOpen} color=\"primary\">\n      <SettingsIcon className={classes.textIcon}/> Manage all Pioreactors\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle style={{backgroundColor: \"#edeaf9\"}}>\n        <Typography className={classes.suptitle}>\n          All active Pioreactors\n        </Typography>\n      <Tabs\n        value={tabValue}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n      >\n        <Tab label=\"Activities\"/>\n        <Tab label=\"Settings\"/>\n        <Tab label=\"Dosing\"/>\n        <Tab label=\"LEDs\"/>\n      </Tabs>\n      </DialogTitle>\n      <DialogContent>\n\n        <TabPanel value={tabValue} index={0}>\n          {Object.entries(jobs)\n            .filter(([job_key, job]) => job.metadata.display)\n            .map(([job_key, job]) =>\n            <div key={job_key}>\n              <Typography gutterBottom>\n                {job.metadata.name}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                <div dangerouslySetInnerHTML={{__html: job.metadata.description}}/>\n              </Typography>\n\n              {buttons[job_key]}\n\n              <Divider className={classes.divider} />\n            </div>\n          )}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          {Object.values(jobs)\n            .filter(job => job.metadata.display)\n            .map(job =>\n            Object.entries(job)\n              .filter(([key, setting]) => (key !== \"state\") && (key !== \"metadata\"))\n              .filter(([_, setting]) => setting.display)\n              .map(([key, setting]) =>\n            <React.Fragment>\n              <Typography  gutterBottom>\n                {setting.label}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                {setting.description}\n              </Typography>\n              <TextField\n                size=\"small\"\n                id={`${job.metadata.key.replace(\"_control\", \"_automation\")}/${key}`}\n                defaultValue={setting.value}\n                InputProps={{\n                  endAdornment: <InputAdornment position=\"end\">{setting.unit}</InputAdornment>,\n                }}\n                variant=\"outlined\"\n                onKeyPress={setPioreactorJobAttrOnEnter}\n                className={classes.textFieldCompact}\n              />\n              <Divider className={classes.divider} />\n            </React.Fragment>\n\n          ))}\n\n          <Typography  gutterBottom>\n            Dosing automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/Dosing-automations\">dosing automations</a>.\n          </Typography>\n\n          <ButtonChangeDosingDialog\n            unit={unit}\n            config={config}\n            experiment={experiment}\n            currentDosingAutomation={true}\n            title=\"All active Pioreactors\"\n          />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            LED automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/LED-automations\">LED automations</a>.\n          </Typography>\n\n          <ButtonChangeLEDDialog\n            unit={unit}\n            config={config}\n            experiment={experiment}\n            currentLEDAutomation={true}\n            title=\"All active Pioreactors\"\n          />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Temperature automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              Learn more about <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/temperature-automations\">temperature automations</a>.\n          </Typography>\n\n          <ButtonChangeTemperatureDialog\n            unit={unit}\n            config={config}\n            experiment={experiment}\n            currentTemperatureAutomation={true}\n            title=\"All active Pioreactors\"\n          />\n          <Divider className={classes.divider} />\n\n        </TabPanel>\n        <TabPanel value={tabValue} index={2}>\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the media pumps for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_media\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the alternative media pumps for a set duration (seconds), or a set\n            volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_alt_media\" unit={unit} />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the waste pumps for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"remove_waste\" unit={unit} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel A\n          </Typography>\n          <ActionLEDForm channel=\"A\" unit={unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel B\n          </Typography>\n          <ActionLEDForm channel=\"B\" unit={unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel C\n          </Typography>\n          <ActionLEDForm channel=\"C\" unit={unit} />\n\n          <Divider className={classes.divider} />\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel D\n          </Typography>\n          <ActionLEDForm channel=\"D\" unit={unit} />\n\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      resumeHideDuration={2000}\n      key={\"snackbar\" + unit + \"settings\"}\n    />\n    </React.Fragment>\n  );\n}\n\n\nfunction ActiveUnits(props){\n  return (\n  <React.Fragment>\n    <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\", marginTop: \"15px\"}}>\n      <Typography variant=\"h5\" component=\"h2\">\n        <Box fontWeight=\"fontWeightRegular\">\n          Active Pioreactors\n        </Box>\n      </Typography>\n      <div >\n\n      </div>\n    </div>\n    {props.units.map(unit =>\n      <PioreactorCard isUnitActive={true} key={unit} unit={unit} config={props.config} experiment={props.experiment}/>\n  )}\n  </React.Fragment>\n)}\n\n\nfunction FlashLEDButton(props){\n  const classes = useStyles();\n\n  const [flashing, setFlashing] = useState(false)\n\n\n  const onClick = () => {\n    setFlashing(true)\n    const sendMessage = () => {\n      var message = new Message(\"1\");\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        \"$experiment\",\n        \"monitor\",\n        \"flicker_led\",\n      ].join(\"/\");\n      message.qos = 0;\n      try{\n        props.client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 1000)\n      }\n    }\n\n    sendMessage()\n    setTimeout(() => {setFlashing(false)}, 3600 ) // .9 * 4\n  }\n\n  return (\n    <Button style={{textTransform: 'none', float: \"right\"}} className={clsx({blinkled: flashing})} disabled={props.disabled} onClick={onClick} color=\"primary\">\n      <FlareIcon color={props.disabled ? \"disabled\" : \"primary\"} className={classes.textIcon}/> <span >  Blink  </span>\n    </Button>\n)}\n\n\nfunction PioreactorCard(props){\n  const classes = useStyles();\n  const unit = props.unit\n  const isUnitActive = props.isUnitActive\n  const experiment = props.experiment\n  const config = props.config\n  const [fetchComplete, setFetchComplete] = useState(false)\n\n  const [client, setClient] = useState(null)\n  const [jobs, setJobs] = useState({\n    monitor: {\n      state : \"disconnected\", metadata: {display: false}\n    },\n  })\n\n\n\n  useEffect(() => {\n    function fetchContribBackgroundJobs() {\n      fetch(\"/contrib/background_jobs\")\n        .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((listOfJobs) => {\n          var jobs_ = {}\n          for (const job of listOfJobs){\n            var metaData_ = {state: \"disconnected\", metadata: {name: job.name, subtext: job.subtext, display: job.display, description: job.description, key: job.job_name, source: job.source}}\n            for(var i = 0; i < job[\"editable_settings\"].length; ++i){\n              var field = job[\"editable_settings\"][i]\n              metaData_[field.key] = {value: field.default, label: field.label, type: field.type, unit: field.unit || null, display: field.display, description: field.description}\n            }\n            jobs_[job.job_name] = metaData_\n          }\n          setJobs((prev) => ({...prev, ...jobs_}))\n          setFetchComplete(true)\n        })\n        .catch((error) => {})\n    }\n    fetchContribBackgroundJobs();\n  }, [])\n\n  useEffect(() => {\n    const onConnect = () => {\n      client.subscribe([\"pioreactor\", unit, \"$experiment\", \"monitor\", \"$state\"].join(\"/\"));\n\n      for (const job of Object.keys(jobs)) {\n        if (job === \"monitor\") {continue;}\n        client.subscribe([\"pioreactor\", unit, experiment, job, \"$state\"].join(\"/\"));\n        for (const setting of Object.keys(jobs[job])){\n          if ((setting !== \"state\") && (setting !== \"metadata\")){\n            client.subscribe([\"pioreactor\", unit, experiment, setting.endsWith(\"_automation\") ? job : job.replace(\"_control\", \"_automation\"), setting].join(\"/\"));\n          }\n        }\n      }\n    }\n\n    const onMessageArrived = (message) => {\n      var parsedFloat = parseFloat(message.payloadString); // try to parse it as a float first\n      var payload = isNaN(parsedFloat) ? message.payloadString : parsedFloat;\n      var [job, setting] = message.topic.split('/').slice(-2)\n      if (setting === \"$state\"){\n        setJobs((prev) => ({...prev, [job]: {...prev[job], state: payload}}))\n      } else if (job.endsWith(\"_automation\")) {\n        // needed because settings are attached to _automations, not _control\n        job = job.replace(\"_automation\", \"_control\")\n        setJobs((prev) => ({...prev, [job]: {...prev[job], [setting]: {...prev[job][setting], value: payload }}}))\n      } else {\n        setJobs((prev) => ({...prev, [job]: {...prev[job], [setting]: {...prev[job][setting], value: payload }}}))\n      }\n    }\n\n    if (!props.config['network.topology']){\n      return\n    }\n\n    if (!isUnitActive){\n      return\n    }\n\n    if (!experiment){\n      return\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui\" + Math.random()\n      );\n    }\n    client.onMessageArrived = onMessageArrived\n    client.connect({onSuccess: onConnect, reconnect: true});\n    setClient(client)\n  },[config, experiment, fetchComplete, isUnitActive])\n\n  const indicatorDotColor = (jobs.monitor.state === \"disconnected\") ? disconnectedGrey : ((jobs.monitor.state === \"lost\") ? lostRed : readyGreen)\n  const indicatorDotShadow = (jobs.monitor.state === \"disconnected\") ? 0 : 6\n  const indicatorLabel = (jobs.monitor.state === \"disconnected\") ? (isUnitActive ? \"Offline, need to power up\" : \"Offline, change inventory status in config.ini\") : ((jobs.monitor.state === \"lost\") ? \"Lost, something went wrong...\" : \"Online\")\n\n\n  return (\n    <Card className={classes.pioreactorCard} id={unit}>\n\n      <CardContent className={classes.cardContent}>\n        <div className={\"fixme\"}>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(props.config['ui.rename'] && props.config['ui.rename'][unit]) ? unit : \"\"}\n          </Typography>\n          <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n            <div style={{display: \"flex\", justifyContent: \"left\"}}>\n              <Typography className={clsx(classes.unitTitle, {[classes.disabledText]: !isUnitActive})} gutterBottom>\n                <PioreactorIcon color={isUnitActive ? \"inherit\" : \"disabled\"} style={{verticalAlign: \"middle\"}}/>\n                {(props.config['ui.rename'] && props.config['ui.rename'][unit]) ? props.config['ui.rename'][unit] : unit }\n              </Typography>\n              <Tooltip title={indicatorLabel} placement=\"right\">\n                <div>\n                  <div aria-label={indicatorLabel} className=\"indicator-dot\" style={{boxShadow: `0 0 ${indicatorDotShadow}px ${indicatorDotColor}, inset 0 0 12px  ${indicatorDotColor}`}}/>\n                </div>\n              </Tooltip>\n            </div>\n            <div style={{display: \"flex\", justifyContent: \"flex-end\", flexDirection: \"row\", flexWrap: \"wrap\"}}>\n              <div>\n                <FlashLEDButton client={client} disabled={!isUnitActive} config={props.config} unit={unit}/>\n              </div>\n              <div>\n                <CalibrateDialog\n                  config={props.config}\n                  client={client}\n                  odBlankReading={jobs['od_blank'] ? jobs['od_blank'].mean.value : null}\n                  odBlankJobState={jobs['od_blank'] ? jobs['od_blank'].state : null}\n                  stirringJobState={jobs['stirring'] ? jobs['stirring'].state : null}\n                  experiment={experiment}\n                  unit={unit}\n                  disabled={!isUnitActive}\n                />\n              </div>\n              <SettingsActionsDialog\n                config={props.config}\n                client={client}\n                unit={unit}\n                disabled={!isUnitActive}\n                experiment={experiment}\n                jobs={jobs}\n              />\n            </div>\n          </div>\n        </div>\n\n\n      <div style={{\n          display: \"flex\",\n          margin: \"15px 20px 20px 0px\",\n          flexDirection: \"row\",\n        }}>\n        <div className={classes.textboxLabel}>\n          <Typography variant=\"body2\">\n            <Box fontWeight=\"fontWeightBold\" className={clsx({[classes.disabledText]: !isUnitActive})}>\n              Activities:\n            </Box>\n          </Typography>\n        </div>\n        <div\n         className={classes.rowOfUnitSettingDisplay}\n        >\n          {Object.values(jobs)\n              .filter(job => job.metadata.display)\n              .map(job => (\n            <div className={classes.textbox} key={job.metadata.key}>\n              <Typography variant=\"body2\" style={{fontSize: \"0.82rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n                {job.metadata.name}\n              </Typography>\n              <UnitSettingDisplay\n                value={job.state}\n                isUnitActive={isUnitActive}\n                default=\"disconnected\"\n                subtext={job.metadata.subtext ? job[job.metadata.subtext].value : null}\n                isStateSetting\n              />\n            </div>\n         ))}\n\n        </div>\n      </div>\n\n      <Divider/>\n\n      <div style={{\n          display: \"flex\",\n          margin: \"15px 20px 20px 0px\",\n          flexDirection: \"row\",\n        }}>\n        <div className={classes.textboxLabel}>\n          <Typography variant=\"body2\">\n            <Box fontWeight=\"fontWeightBold\" className={clsx({[classes.disabledText]: !isUnitActive})}>\n              Settings:\n            </Box>\n          </Typography>\n        </div>\n        <div\n         className={classes.rowOfUnitSettingDisplay}\n        >\n          {Object.values(jobs).map(job =>\n            Object.entries(job)\n              .filter(([key, setting]) => (key !== \"state\") && (key !== \"metadata\"))\n              .filter(([_, setting]) => setting.display)\n              .map(([key, setting]) =>\n            <div className={classes.textbox} key={job.metadata.key + key}>\n              <Typography variant=\"body2\" style={{fontSize: \"0.82rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n                {setting.label}\n              </Typography>\n              <UnitSettingDisplay\n                value={setting.value}\n                isUnitActive={isUnitActive}\n                measurementUnit={setting.unit}\n                precision={2}\n                default=\"—\"\n                isLEDIntensity={setting.label === \"LED intensity\"}\n                config={props.config}\n              />\n            </div>\n         ))}\n        </div>\n      </div>\n\n\n      </CardContent>\n    </Card>\n)}\n\n\nfunction InactiveUnits(props){\n\n  return (\n  <React.Fragment>\n    <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\", marginTop: \"15px\"}}>\n      <Typography variant=\"h5\" component=\"h2\">\n        <Box fontWeight=\"fontWeightRegular\">\n          Inactive Pioreactors\n        </Box>\n      </Typography>\n    </div>\n    {props.units.map(unit =>\n      <PioreactorCard isUnitActive={false} key={unit} unit={unit} config={props.config} experiment={props.experiment}/>\n  )}\n    </React.Fragment>\n)}\n\nfunction Pioreactors({title, config}) {\n    const [experimentMetadata, setExperimentMetadata] = React.useState({})\n\n    React.useEffect(() => {\n      document.title = title;\n      async function getLatestExperiment() {\n           await fetch(\"/get_latest_experiment\")\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            setExperimentMetadata(data)\n          });\n        }\n      getLatestExperiment()\n    }, [title])\n\n    const entries = (a) => Object.entries(a)\n\n    return (\n        <Grid container spacing={2} >\n\n\n          <Grid item md={12} xs={12}>\n            <PioreactorHeader config={config} experiment={experimentMetadata.experiment}/>\n            <ActiveUnits experiment={experimentMetadata.experiment} config={config} units={config['network.inventory'] ? entries(config['network.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0]) : [] }/>\n            <InactiveUnits experiment={experimentMetadata.experiment} config={config} units={config['network.inventory'] ? entries(config['network.inventory']).filter((v) => v[1] === \"0\").map((v) => v[0]) : [] }/>\n          </Grid>\n          {config['ui.rename'] ? <TactileButtonNotification config={config}/> : null}\n        </Grid>\n    )\n}\n\nexport default Pioreactors;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  divInstructions: {\n    marginBottom: theme.spacing(3),\n  }\n}));\n\n\n\nfunction CycleLiquid(props) {\n  const classes = useStyles();\n  const liquid = props.liquid\n  const [isClicked, setIsClicked] = React.useState(false)\n\n  const onSubmit = () => {\n    fetch(\"/run/remove_waste/$broadcast\", {\n        method: \"POST\",\n        body: JSON.stringify({duration: 90, duty_cycle: 100}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n    });\n    fetch(\"/run/add_media/$broadcast\", {\n        method: \"POST\",\n        body: JSON.stringify({duration: 50, duty_cycle: 55}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n    });\n    fetch(\"/run/add_alt_media/$broadcast\", {\n        method: \"POST\",\n        body: JSON.stringify({duration: 50, duty_cycle: 55}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n    });\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p>{props.additionalMsg}</p>\n      <p>Add <b>{liquid}</b> to the non-waste containers. We will cycle this solution through our system. Click the button below once the {liquid} is in place.</p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Cycle {liquid}</Button>\n    </div>\n    )\n}\n\n\nfunction MediaFlush(props) {\n  const classes = useStyles();\n  const isAlt = props.altMedia\n  const [isClicked, setIsClicked] = React.useState(false)\n\n  const onSubmit = () => {\n    fetch(\"/run/remove_waste/$broadcast\", {\n        method: \"POST\",\n        body: JSON.stringify({duration: 90, duty_cycle: 100}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n    })\n    if (isAlt){\n      fetch(\"/run/add_alt_media/$broadcast\", {\n        method: \"POST\",\n        body: JSON.stringify({duration: 50, duty_cycle: 66}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n    })\n    } else {\n      fetch(\"/run/add_media/$broadcast\", {\n        method: \"POST\",\n        body: JSON.stringify({duration: 50, duty_cycle: 55}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n    })\n    }\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p>Next, we will prime the {isAlt ? \"alt-\" : \"\"}media tubes with our {isAlt ? \"alt-\" : \"\"}media.</p>\n      <p>Replace the container attached to the {isAlt ? \"alt-\" : \"\"}media outflow tubes with the sterlized {isAlt ? \"alt-\" : \"\"}media container. Remember to use proper sanitation techniques!</p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Run {isAlt ? \"alt-\" : \"\"}media and waste pumps</Button>\n    </div>\n    )\n}\n\nfunction AddFinalVolumeOfMedia(props) {\n  const classes = useStyles();\n  const [isClicked, setIsClicked] = React.useState(false)\n\n\n  const onSubmit = () => {\n    fetch(\"/run/add_media/$broadcast\", {\n        method: \"POST\",\n        body: JSON.stringify({ml: 12}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n    });\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p> Finally, we will add fresh media to our vials </p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Add 12mL of media</Button>\n    </div>\n    )\n}\n\n\nfunction getSteps() {\n  return [\n    'Setup inflow and outflow tubes',\n    '10% bleach cycling',\n    '70% alcohol cycling',\n    'Distilled water cycling',\n    'Media preparation',\n    'Alt media preparation',\n    'Replace vials',\n    'Add initial media to vials'];\n}\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return `For each pioreactor unit, connect the media inflow, alt-media inflow, and waste out flow tubes to an empty\n      vial with hat. Connect the all the media outflow tubes to a single empty container, all the alt-media outflow tubes to a single empty container, and\n      all the waste inflow tubes to a single, empty, large container.`;\n    case 1:\n      return <CycleLiquid liquid={\"10% bleach solution\"}/>;\n    case 2:\n      return <CycleLiquid additionalMsg={\"Remove any excess bleach from the containers, and empty the waste container. Bleach and alcohol should not mix.\"} liquid={\"70% alcohol\"}/>;\n    case 3:\n      return <CycleLiquid liquid={\"distilled water\"}/>;\n    case 4:\n      return <MediaFlush />;\n    case 5:\n      return <MediaFlush altMedia={true}/>;\n    case 6:\n      return `Using proper sanitation techniques, replace the pioreactor vials - now full of water and media - with the empty-but-innocculated vials`;\n    case 7:\n      return <AddFinalVolumeOfMedia/>;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function VerticalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All cleaning and preparation steps completed!</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}","import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Chart from \"./Chart\";\n\n\n\nfunction StartStirringButton(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const onClick = (e) => {\n    setIsClicked(true)\n    fetch(\"/run/stirring/$broadcast\", {\n        method: \"POST\"}\n      ).then(res => {\n      if (res.status === 200){\n        setOpenSnackbar(true);\n      }\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p> To get an accurate reading, we need to start start the stirring. This also provides gas transfer and keeps the cells in suspension.</p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start stirring </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={\"Stirring starting\"}\n      autoHideDuration={7000}\n      key={\"snackbarStirring\"}\n    />\n  </div>\n  )\n}\n\n\nfunction StartODReading(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const onClick = (e) => {\n    setIsClicked(true)\n    fetch(\"/run/od_reading/$broadcast\",  {method: \"POST\"}).then(res => {\n      if (res.status === 200){\n        setOpenSnackbar(true);\n      }\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p> Next, we will turn on the optical density reading. We also call this <em>OD readings</em>. This will provide us with a measure of cell density. After a minute or so, you should see the data in the chart below. </p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start OD readings </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={\"OD reading starting\"}\n      autoHideDuration={7000}\n      key={\"snackbarOD\"}\n    />\n  </div>\n  )\n}\n\n\nfunction StartSensors(props){\n\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={2}/>\n      <Grid item xs={10}><StartStirringButton/></Grid>\n      <Grid item xs={10}><StartODReading/></Grid>\n      <Grid item xs={12}>\n        <Chart\n          config={props.config}\n          isODReading={true}\n          fontScale={1.0}\n          interpolation=\"stepAfter\"\n          title=\"Optical density\"\n          topic=\"od_raw/+/+\"\n          yAxisLabel=\"Voltage\"\n          experiment=\"+\"\n        />\n      </Grid>\n      <Grid item xs={2}/>\n    </Grid>\n)}\n\n\nexport default StartSensors;\n","\nimport React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Chart from \"./Chart\";\n\n\n\nfunction StartGrowthRate(props){\n\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\n  const [isClicked, setIsClicked] = React.useState(false);\n\n  const onClick = (e) => {\n    fetch(\"/run/growth_rate_calculating/$broadcast\", {method: \"POST\"}).then(r => {\n      setSnackbarMessage(\"Growth rate calculating starting\")\n      setOpenSnackbar(true)\n      setIsClicked(true)\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p>Because of the varying strength & quality of the electronics, not all readings look the same - even for the same density of cells. So we compute a baseline measurement from the OD readings, and measure all growth against that baseline. </p>\n      <p>From the (normalized) OD readings, we can calculate the <em>implied hourly growth rate</em>, which is our measure of growth. </p>\n      <p>Let's start the growth rate calculations. This first computes the normalization constants, <b>which can take up to two minutes to complete</b>. After that, the graph below should start to populate.</p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start growth rate calculations </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      key={\"snackbarGR\"}\n      />\n  </div>\n  )\n}\n\n\n\n\nfunction StartCalculations(props){\n  const [experiment, setExperiment] = React.useState(\"null_exp\")\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_latest_experiment\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperiment(data.experiment)\n        });\n      }\n      getData()\n  }, [])\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={2}/>\n      <Grid item xs={10}><StartGrowthRate experiment={experiment}/></Grid>\n      <Grid item xs={12}>\n      <Chart\n        config={props.config}\n        interpolation=\"stepAfter\"\n        fontScale={1}\n        title=\"Implied growth rate\"\n        topic=\"growth_rate\"\n        yAxisLabel=\"Growth rate, h⁻¹\"\n        experiment={experiment}\n      />\n      </Grid>\n      <Grid item xs={2}/>\n    </Grid>\n)}\n\n\nexport default StartCalculations;\n","import { Client, Message } from \"paho-mqtt\";\n\nfunction clearChartCommand(props, publishCallback) {\n  var client\n  if (props.config.remote && props.config.remote.ws_url) {\n    client = new Client(\n      `ws://${props.config.remote.ws_url}/`,\n      \"webui_ClearChartButton\" + Math.random()\n    )}\n  else {\n    client = new Client(\n      `${props.config['network.topology']['leader_address']}`, 9001,\n      \"webui_ClearChartButton\" + Math.random()\n    );\n  }\n\n  if (publishCallback){\n    client.onMessageDelivered = publishCallback\n  }\n\n  client.connect({onSuccess: () => {\n    for (var jobName of ['od_raw', 'od_filtered', 'growth_rate', 'alt_media_fraction']) {\n      var message = new Message(\"\");\n\n      message.destinationName = [\n        \"pioreactor\",\n        props.config['network.topology']['leader_hostname'],\n        \"$experiment\",\n        `${jobName}_time_series_aggregating`,\n        \"aggregated_time_series\",\n        \"set\",\n      ].join(\"/\");\n\n      client.publish(message);\n    }\n  }});\n}\n\n\nexport default clearChartCommand","import React from \"react\";\nimport moment from \"moment\";\nimport { Client, Message } from \"paho-mqtt\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport Button from \"@material-ui/core/Button\";\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport TextField from '@material-ui/core/TextField';\n\nimport CleaningScript from \"./components/CleaningScript\"\nimport StartSensors from \"./components/StartSensors\"\nimport StartCalculations from \"./components/StartCalculations\"\nimport clearChartCommand from \"./components/clearChartCommand\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"60%\"\n  },\n  textField:{\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  halfTextField: {\n    width: \"95%\"\n  },\n}));\n\n\n\nfunction ExperimentSummaryForm(props) {\n  const classes = useStyles();\n  const [formError, setFormError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [expName, setExpName] = React.useState(\"\");\n  const [timestamp, setTimestamp] = React.useState(moment.utc());\n  const [description, setDescription] = React.useState(\"\");\n\n\n  function publishExpNameToMQTT(){\n\n    function onConnect() {\n      var message = new Message(expName.trim());\n      message.destinationName = \"pioreactor/latest_experiment\"\n      message.qos = 1;\n      message.retained = true;\n      client.publish(message);\n    }\n\n    var client\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_publishExpNameToMQTT\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_publishExpNameToMQTT\" + Math.random()\n      );\n    }\n    client.connect({ onSuccess: onConnect, timeout: 180});\n\n  }\n\n  function populateFields(){\n    fetch(\"/get_latest_experiment\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExpName(data.experiment)\n        setDescription(data.description)\n      });\n  }\n\n\n\n\n  function killExistingJobs(){\n     fetch('/stop_all', {method: \"POST\"})\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (expName === \"\"){\n      setFormError(true)\n      setHelperText(\"Can't be blank\")\n      return\n    }\n    fetch('create_experiment',{\n        method: \"POST\",\n        body: JSON.stringify({experiment : expName.trim(), timestamp: timestamp.toISOString(), description: description}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200){\n          publishExpNameToMQTT()\n          setHelperText(\"\")\n          setFormError(false);\n          killExistingJobs()\n          clearChartCommand(props)\n          props.handleNext()\n        }\n        else{\n          setFormError(true);\n          setHelperText(\"Experiment name already used.\")\n        }\n      }\n     )\n  }\n\n  const onExpNameChange = (e) => {\n    setExpName(e.target.value)\n  }\n  const onDescChange = (e) => {\n    setDescription(e.target.value)\n  }\n  const onTimestampChange = (e) => {\n    setTimestamp(e.target.value)\n  }\n\n\n  return (\n    <div className={classes.root}>\n        <FormGroup>\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              error={formError}\n              id=\"expName\"\n              label=\"Experiment name\"\n              value={expName}\n              required className={`${classes.halfTextField} ${classes.textField}`}\n              onChange={onExpNameChange}\n              helperText={helperText}\n              />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              id=\"datetime\"\n              label=\"Start time\"\n              type=\"datetime-local\"\n              defaultValue={timestamp.local().format(\"YYYY-MM-DDTHH:mm:ss\")}\n              className={`${classes.halfTextField} ${classes.textField}`}\n              onChange={onTimestampChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <TextField\n              label=\"Description\"\n              rowsMax={4}\n              placeholder={\"Add a description: what microbe are you using? What is the media composition? This description can always be changed later.\"}\n              multiline\n              value={description}\n              className={classes.textField}\n              onChange={onDescChange}\n              fullWidth={true}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={4}/>\n          <Grid item xs={12} md={8}>\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n              <Button size=\"small\" color=\"primary\" onClick={populateFields}>Populate with previous experiment</Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}> Create </Button>\n            </div>\n          </Grid>\n        </Grid>\n        </FormGroup>\n    </div>\n  )\n}\n\n\n\n\n\nfunction StartNewExperimentContainer(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const getStepContent = (index) => {\n    return steps[index].content\n  }\n  const isStepOptional = (index) => {\n    return steps[index].optional\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    if (activeStep === steps.length - 1){\n      window.location.href = \"/overview\";\n    } else {\n\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(activeStep);\n      }\n\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped(newSkipped);\n      window.scrollTo({top: 0})\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const steps = [\n    {title: 'Experiment summary', content: <ExperimentSummaryForm config={props.config} handleNext={handleNext}/>, optional: true},\n    {title: 'Cleaning and preparation', content: <CleaningScript config={props.config}/>, optional: true},\n    {title: 'Start sensors', content: <StartSensors config={props.config}/>, optional: true},\n    {title: 'Start calculations', content: <StartCalculations config={props.config}/>, optional: false},\n  ];\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" component=\"h1\">\n          Start a new experiment\n        </Typography>\n        <Stepper activeStep={activeStep}>\n          {steps.map((step, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (step.optional) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={step.title} {...stepProps}>\n                <StepLabel {...labelProps}>{step.title}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                {isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n\n                <Button\n                  variant=\"contained\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Go to overview' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n\n\nfunction StartNewExperiment(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12} md={12}>\n            <StartNewExperimentContainer config={props.config}/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default StartNewExperiment;\n\n","import React from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport {Typography} from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Select from '@material-ui/core/Select';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { CodeFlaskReact } from \"react-codeflask\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n}));\n\nclass EditableCodeDiv extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"\",\n      openSnackbar: false,\n      filename: \"config.ini\",\n      snackbarMsg: \"\",\n      buttonText: \"Save\",\n      hasChangedSinceSave: true,\n      availableConfigs: [\n        {name: \"shared config.ini\", filename: \"config.ini\"},\n      ]\n    };\n    this.saveCurrentCode = this.saveCurrentCode.bind(this);\n    this.deleteConfig = this.deleteConfig.bind(this);\n  }\n\n  async getConfig(filename) {\n    await fetch(\"/get_config/\" + filename)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        this.setState({code: text});\n      })\n  }\n\n  async getListOfConfigFiles(filename) {\n    await fetch(\"/get_configs\")\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        this.setState(prevState => ({\n          availableConfigs: [...prevState.availableConfigs, ...json.filter(e => (e !== 'config.ini')).map(e => ({name: e, filename: e}))]\n        }));\n      })\n  }\n\n  saveCurrentCode() {\n    this.setState({buttonText: <CircularProgress color=\"inherit\" size={24}/>})\n    fetch('/save_new_config',{\n        method: \"POST\",\n        body: JSON.stringify({code :this.state.code, filename: this.state.filename}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({snackbarMsg: this.state.filename + \" saved and synced.\", hasChangedSinceSave: false, buttonText: \"Saved\"})\n      } else {\n        this.setState({snackbarMsg: \"Hm. Something when wrong saving or syncing...\", hasChangedSinceSave: true, buttonText: \"Save\"})\n      }\n      this.setState({openSnackbar: true});\n    })\n  }\n\n  deleteConfig(){\n    fetch('/delete_config',{\n        method: \"POST\",\n        body: JSON.stringify({filename: this.state.filename}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({snackbarMsg: this.state.filename + \" deleted.\"})\n      } else {\n        this.setState({snackbarMsg: \"Hm. Something when wrong deleting...\"})\n      }\n      this.setState({openSnackbar: true});\n      setTimeout(function () {\n        window.location.reload();\n      }, 750);\n    })\n  }\n\n  componentDidMount() {\n    this.getConfig(this.state.filename)\n    this.getListOfConfigFiles()\n  }\n\n  onSelectionChange = (e) => {\n    this.setState({filename: e.target.value})\n    this.getConfig(e.target.value)\n  }\n\n  getCodeFlaskRef = (codeFlask) => {\n    this.codeFlask = codeFlask\n  }\n\n  onTextChange = (code) => {\n    this.setState({code: code, hasChangedSinceSave: true, buttonText: \"Save\"})\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({openSnackbar: false});\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <Select\n            style={{margin: \"10px 10px 10px 10px\"}}\n            native\n            value={this.state.filename}\n            onChange={this.onSelectionChange}\n            inputProps={{\n              name: 'config',\n              id: 'config',\n            }}\n          >\n            {this.state.availableConfigs.map((v) => {\n              return <option key={v.filename} value={v.filename}>{v.name}</option>\n              }\n            )}\n          </Select>\n        </div>\n\n        <div style={{letterSpacing: \"0em\", margin: \"10px auto 10px auto\", position: \"relative\", width: \"98%\", height: \"300px\", border: \"1px solid #ccc\"}}>\n          <CodeFlaskReact\n            code={this.state.code}\n            onChange={this.onTextChange}\n            editorRef={this.getCodeFlaskRef}\n            language={\"python\"}\n          />\n        </div>\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <Button\n            style={{margin: \"5px 12px 5px 12px\"}}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={this.saveCurrentCode}\n            disabled={!this.state.hasChangedSinceSave}\n            >\n            {this.state.buttonText}\n          </Button>\n          <Button\n            style={{margin: \"5px 10px 5px 10px\"}}\n            color=\"secondary\"\n            onClick={this.deleteConfig}\n            disabled={(this.state.filename === \"config.ini\")}>\n            Delete config file\n          </Button>\n        </div>\n        <Snackbar\n          anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n          open={this.state.openSnackbar}\n          onClose={this.handleSnackbarClose}\n          message={this.state.snackbarMsg}\n          autoHideDuration={2000}\n          key={\"edit-config-snackbar\"}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\n\n\n\nfunction EditConfigContainer(){\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Configuration\n            </Box>\n          </Typography>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <p>Update the <code>config.ini</code> files. The shared <code>config.ini</code> will be deployed to <em>all</em> Pioreactors, but configuration can be overwritten by editing specific Pioreactor's <code>config.ini</code>.</p>\n          <EditableCodeDiv/>\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}><span role=\"img\">💡</span> Learn more about Pioreactor  <a href=\"https://pioreactor.com/pages/Configuration-via-config-ini\" target=\"_blank\" rel=\"noopener noreferrer\">configuration</a>.</p>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction EditConfig(props) {\n    React.useEffect(() => {\n      document.title = props.title;\n    }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n             <EditConfigContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default EditConfig;\n\n","import React from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport {Typography} from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Link from '@material-ui/core/Link';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Divider from '@material-ui/core/Divider';\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}));\n\n\nfunction ConfirmDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openSnackbar, setOpenSnackbar] = React.useState(false)\n\n  const updateVersion = () => {\n    setOpen(false)\n    setOpenSnackbar(true)\n    fetch(\"/update_app\", {method: \"POST\"})\n    .then(res => {\n      if (res.ok) {\n        window.location.reload();\n        return false\n      }\n    })\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleClickOpen} style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n        <UpdateIcon className={classes.textIcon}/> Update to latest release\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirm update to latest release\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Updating will not stop or change currently running activities or experiments.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={updateVersion} color=\"primary\">\n            Update now\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        message={\"Updating in the background - you may leave this page\"}\n        autoHideDuration={20000}\n        key={\"snackbar-update\"}\n      />\n    </React.Fragment>\n  );\n}\n\n\nfunction PageHeader(props) {\n  const classes = useStyles();\n  const [version, setVersion] = React.useState(\"\")\n  const [latestVersion, setLatestVersion] = React.useState(\"\")\n\n\n  React.useEffect(() => {\n    async function getCurrentApp() {\n         await fetch(\"/get_app_version\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setVersion(data)\n        });\n      }\n\n    async function getLatestVersion() {\n         await fetch(\"https://api.github.com/repos/pioreactor/pioreactor/releases/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setLatestVersion(data['name'])\n        });\n      }\n\n      getCurrentApp()\n      getLatestVersion()\n  }, [])\n\n  return (\n    <React.Fragment>\n    <div>\n      <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n        <Typography variant=\"h5\" component=\"h1\">\n          <Box fontWeight=\"fontWeightBold\">\n            Updates\n          </Box>\n        </Typography>\n        <div >\n          <ConfirmDialog/>\n          <Link color=\"inherit\" underline=\"none\" href=\"https://github.com/Pioreactor/pioreactor/releases\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Button style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n              <OpenInNewIcon className={classes.textIcon}/> View latest release\n            </Button>\n          </Link>\n        </div>\n      </div>\n      <Divider/>\n      <Typography variant=\"subtitle2\">\n        <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n          <SystemUpdateAltIcon style={{ fontSize: 14, verticalAlign: \"middle\" }}/> Version installed:\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n          {version}\n        </Box>\n        <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n            <UpdateIcon style={{ fontSize: 14, verticalAlign: \"middle\" }}/>\n          Latest version available:\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n          {latestVersion}\n        </Box>\n      </Typography>\n    </div>\n    </React.Fragment>\n  )\n}\n\n\n\nfunction ChangelogContainer(){\n  const classes = useStyles();\n\n  const [changelog, setChangelog] = React.useState(\"\")\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_changelog\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setChangelog(data)\n        });\n      }\n      getData()\n  }, [])\n\n\n  return(\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n        <Typography variant=\"h6\" component=\"h6\">\n            Change log\n        </Typography>\n          <div dangerouslySetInnerHTML={{ __html: changelog }} />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Updates(props) {\n    React.useEffect(() => {\n    document.title = props.title;\n  }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <PageHeader/>\n            <ChangelogContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default Updates;\n\n","import { Hashicon } from \"@emeraldpay/hashicon-react\";\nimport React from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport {Typography} from '@material-ui/core';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Avatar from '@material-ui/core/Avatar';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  pluginList:{\n    width: \"95%\",\n    margin: \"auto\",\n    marginBottom: \"15px\"\n  },\n  secondaryActionButton:{\n    marginLeft: \"10px\"\n  }\n}));\n\n\n\nfunction PageHeader(props) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n    <div>\n      <div>\n        <Typography variant=\"h5\" component=\"h2\">\n          <Box fontWeight=\"fontWeightBold\">\n            Plugins\n          </Box>\n        </Typography>\n      </div>\n    </div>\n    </React.Fragment>\n  )\n}\n\n\n\nfunction ListAvailablePlugins({alreadyInstalledPluginsNames}){\n\n  const classes = useStyles();\n\n  const availablePlugins = [\n    {name: 'PhotoPioreactor', homepage: '', description: \"This is a test\"},\n    {name: 'pioreactor-air-bubbler', homepage: '', description: \"This is a test\"},\n    {name: 'pioreactor-custom-dosing-automation', homepage: '', description: \"This is a test\"},\n  ]\n\n  const installPlugin = (plugin_name) => () => (\n      fetch('/install_plugin', {\n        method: \"POST\",\n        body: JSON.stringify({plugin_name: plugin_name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n  )\n\n  return (\n    <div className={classes.pluginList}>\n     <List dense={true}>\n        {availablePlugins\n            .filter(plugin => (!alreadyInstalledPluginsNames.includes(plugin.name)))\n            .map(plugin =>\n          <ListItem key={plugin.name}>\n            <ListItemAvatar>\n              <Avatar variant=\"square\" style={{backgroundColor:\"#FFFFFF\"}}>\n                <Hashicon value={plugin.name} size={40} />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={plugin.name}\n              secondary={plugin.description}\n            />\n            <ListItemSecondaryAction>\n\n              <Button\n                onClick={installPlugin(plugin.name)}\n                variant=\"text\"\n                size=\"small\"\n                color=\"inherit\"\n                aria-label=\"delete\"\n                endIcon={<GetAppIcon />}\n                className={classes.secondaryActionButton}\n              >\n                Install\n              </Button>\n              <Button\n                href={plugin.homepage}\n                target=\"_blank\" rel=\"noopener\"\n                variant=\"text\"\n                size=\"small\"\n                color=\"inherit\"\n                aria-label=\"install\"\n                disabled={!plugin.homepage}\n                endIcon={<OpenInNewIcon />}\n                className={classes.secondaryActionButton}\n              >\n                View\n              </Button>\n              </ListItemSecondaryAction>\n\n          </ListItem>,\n        )}\n      </List>\n    </div>\n  )\n}\n\n\n\nfunction ListInstalledPlugins({installedPlugins}){\n\n  const classes = useStyles();\n\n\n\n\n  const uninstallPlugin = (plugin_name) => () => (\n      fetch('/uninstall_plugin', {\n        method: \"POST\",\n        body: JSON.stringify({plugin_name: plugin_name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n  )\n\n  return (\n    <div className={classes.pluginList}>\n     <List dense={true}>\n        {installedPlugins.map(plugin =>\n          <ListItem key={plugin.name}>\n            <ListItemAvatar>\n              <Avatar variant=\"square\" style={{backgroundColor:\"#FFFFFF\"}}>\n                <Hashicon value={plugin.name} size={40} />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={plugin.name}\n              secondary={plugin.description}\n            />\n            <ListItemSecondaryAction>\n\n              <Button\n                onClick={uninstallPlugin(plugin.name)}\n                variant=\"text\"\n                size=\"small\"\n                color=\"inherit\"\n                aria-label=\"delete\"\n                endIcon={<DeleteIcon />}\n                className={classes.secondaryActionButton}\n              >\n                Uninstall\n              </Button>\n              <Button\n                href={plugin.homepage}\n                target=\"_blank\" rel=\"noopener\"\n                variant=\"text\"\n                size=\"small\"\n                color=\"inherit\"\n                aria-label=\"delete\"\n                disabled={!plugin.homepage}\n                endIcon={<OpenInNewIcon />}\n                className={classes.secondaryActionButton}\n              >\n                View\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>,\n        )}\n      </List>\n    </div>\n  )\n}\n\n\nfunction PluginContainer(){\n  const classes = useStyles();\n\n  const [installedPlugins, setInstalledPlugins] = React.useState([])\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_installed_plugins\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          setInstalledPlugins(json)\n        });\n      }\n      getData()\n  }, [])\n\n\n  return(\n    <React.Fragment>\n      <PageHeader/>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <p> Install, manage, and discover new Pioreactor plugins created by the community. These plugins can provide new functionalities for your Pioreactor (additional hardware may be necessary), or new automations to control dosing, temperature and LED operations.</p>\n\n         <Typography variant=\"h6\" component=\"h3\">\n          Installed plugins\n         </Typography>\n          <ListInstalledPlugins installedPlugins={installedPlugins}/>\n\n\n         <Typography variant=\"h6\" component=\"h3\">\n          Available plugins from the community\n         </Typography>\n          <ListAvailablePlugins alreadyInstalledPluginsNames={installedPlugins.map(plugin => plugin.name)}/>\n\n\n          <p style={{textAlign: \"center\", marginTop: \"30px\"}}><span role=\"img\">💡</span> Learn more about Pioreactor  <a href=\"https://pioreactor.com/pages/plugins\" target=\"_blank\" rel=\"noopener noreferrer\">plugins</a>.</p>\n\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Plugins(props) {\n    React.useEffect(() => {\n    document.title = props.title;\n  }, [props.title])\n    return (\n        <Grid container spacing={2} >\n          <Grid item md={12} xs={12}>\n            <PluginContainer/>\n          </Grid>\n        </Grid>\n    )\n}\n\n\nexport default Plugins;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Badge from '@material-ui/core/Badge';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {AppBar, Typography, Link, Button} from '@material-ui/core';\nimport Hidden from '@material-ui/core/Hidden';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport PioreactorIcon from './PioreactorIcon';\nimport LibraryAddOutlinedIcon from '@material-ui/icons/LibraryAddOutlined';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport InsertChartOutlinedIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst drawerWidth = 212;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarRoot: {\n    flexGrow: 1,\n  },\n  hiddenIconContainer: {\n      \"&:hover $hiddenIcon\": {\n          color: 'rgba(0, 0, 0, 0.54)',\n      }\n  },\n  hiddenIcon: {\n      color: 'rgba(0, 0, 0, 0)',\n      fontSize: \"18px\",\n  },\n  listItemIcon: {\n    minWidth: \"40px\"\n  },\n  divider: {\n    marginTop: \"15px\",\n    marginBottom: \"15px\",\n  }\n}));\n\n\n\nexport default function SideNavAndHeader() {\n  const classes = useStyles();\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [version, setVersion] = React.useState(null)\n  const [latestVersion, setLatestVersion] = React.useState(null)\n\n  React.useEffect(() => {\n    async function getCurrentApp() {\n         await fetch(\"/get_app_version\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setVersion(data)\n        });\n      }\n\n    async function getLatestVersion() {\n         await fetch(\"https://api.github.com/repos/pioreactor/pioreactor/releases/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setLatestVersion(data['name'])\n        });\n      }\n\n      getCurrentApp()\n      getLatestVersion()\n  }, [])\n\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  function isSelected(path) {\n    return (window.location.pathname === path)\n  }\n\n  const list = () => (\n    <div className={classes.drawerContainer}>\n      <List>\n\n        <ListItem href=\"/overview\" component=\"a\" button key={\"overview\"} selected={isSelected(\"/\") || isSelected(\"/overview\")}>\n          <ListItemIcon className={classes.listItemIcon}><DashboardOutlinedIcon color={(isSelected(\"/\") || isSelected(\"/overview\")) ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/\") || isSelected(\"/overview\") ? \"primary\" : \"inherit\"}} primary={\"Overview\"} />\n        </ListItem>\n\n        <ListItem button href=\"/pioreactors\"  component=\"a\" key={\"pioreactors\"} selected={isSelected(\"/pioreactors\")}>\n          <ListItemIcon className={classes.listItemIcon}> <PioreactorIcon color={isSelected(\"/pioreactors\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/pioreactors\") ? \"primary\" : \"inherit\"}} primary={\"Pioreactors\"} />\n        </ListItem>\n\n\n        <ListItem href=\"/export-data\" component=\"a\" button key={\"export_data\"} selected={isSelected(\"/export-data\")}>\n          <ListItemIcon className={classes.listItemIcon}><SaveAltIcon color={isSelected(\"/export-data\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/export-data\") ? \"primary\" : \"inherit\"}} primary={\"Export data\"} />\n        </ListItem>\n\n        <ListItem button href=\"/config\"  component=\"a\" key={\"config\"} selected={isSelected(\"/config\")}>\n          <ListItemIcon className={classes.listItemIcon}> <SettingsOutlinedIcon color={isSelected(\"/config\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/config\") ? \"primary\" : \"inherit\"}} primary={\"Configuration\"} />\n        </ListItem>\n\n        <ListItem button href=\"/analysis\"  component=\"a\" key={\"analysis\"} selected={isSelected(\"/analysis\")}>\n          <ListItemIcon className={classes.listItemIcon}> <InsertChartOutlinedIcon color={isSelected(\"/analysis\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/analysis\") ? \"primary\" : \"inherit\"}} primary={\"Analysis\"} />\n        </ListItem>\n\n        <Divider className={classes.divider} />\n\n        <ListItem href=\"/plugins\" component=\"a\" button key={\"plugins\"} selected={isSelected(\"/plugins-data\")}>\n          <ListItemIcon className={classes.listItemIcon}><LibraryAddOutlinedIcon color={isSelected(\"/plugins\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/plugins\") ? \"primary\" : \"inherit\"}} primary={\"Plugins\"} />\n        </ListItem>\n\n        <ListItem href=\"/updates\" component=\"a\" button key=\"updates\" selected={isSelected(\"/updates\")}>\n          <ListItemIcon className={classes.listItemIcon}>\n            <Badge variant=\"dot\" color=\"secondary\" invisible={!((version) && (latestVersion) && (version !== latestVersion))}>\n              <UpdateIcon color={isSelected(\"/updates\") ? \"primary\" : \"inherit\"}/>\n            </Badge>\n          </ListItemIcon>\n          <ListItemText primaryTypographyProps={{color: isSelected(\"/updates\") ? \"primary\" : \"inherit\"}} primary={\"Updates\"}/>\n        </ListItem>\n\n        <div className={classes.hiddenIconContainer}>\n          <ListItem target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pioreactor.com/pages/documentation\" component=\"a\" button key=\"help\">\n            <ListItemIcon className={classes.listItemIcon}><HelpOutlineIcon/> </ListItemIcon>\n            <ListItemText primary={\"Help\"}/>\n            <ListItemSecondaryAction>\n                <OpenInNewIcon className={classes.hiddenIcon}/>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </div>\n\n      </List>\n    </div>\n  );\n\n  return (\n      <React.Fragment>\n\n        <div className={classes.appBarRoot}>\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar variant=\"dense\">\n\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n\n              <Typography variant=\"h6\" className={classes.title}>\n                <Link color=\"inherit\" underline=\"none\" href=\"/\" className={classes.title}> <img alt=\"pioreactor logo\" src=\"white_colour.png\" style={{width: \"120px\", height: \"29px\"}}/> </Link>\n              </Typography>\n              <Link color=\"inherit\" underline=\"none\" href=\"https://pioreactor.com/pages/documentation\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button color=\"inherit\" style={{textTransform: \"none\"}}>Help <HelpOutlineIcon style={{ fontSize: 18, verticalAlign: \"middle\", marginLeft: 5 }}/></Button>\n              </Link>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {list()}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n            className={classes.drawer}\n          >\n            <Toolbar />\n            {list()}\n          </Drawer>\n        </Hidden>\n      </React.Fragment>\n  );\n}\n","\nexport function parseINIString(data){\n    var regex = {\n        section: /^\\s*\\[\\s*([^\\]]*)\\s*\\]\\s*$/,\n        param: /^\\s*([^=]+?)\\s*=\\s*(.*?)\\s*$/,\n        comment: /^\\s*;.*$/\n    };\n    var value = {};\n    var lines = data.split(/[\\r\\n]+/);\n    var section = null;\n    lines.forEach(function(line){\n        if(regex.comment.test(line)){\n            return;\n        }else if(regex.param.test(line)){\n            var match = line.match(regex.param);\n            if(section){\n                value[section][match[1]] = match[2];\n            }else{\n                value[match[1]] = match[2];\n            }\n        }else if(regex.section.test(line)){\n            var match = line.match(regex.section);\n            value[match[1]] = {};\n            section = match[1];\n        }else if(line.length === 0 && section){\n            section = null;\n        };\n    });\n    return value;\n}","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport TactileButtonNotification from \"./components/TactileButtonNotification\";\nimport ExperimentOverview from \"./ExperimentOverview\";\nimport ExportData from \"./ExportData\";\nimport Pioreactors from \"./Pioreactors\";\nimport StartNewExperiment from \"./StartNewExperiment\";\nimport EditConfig from \"./EditConfig\";\nimport Updates from \"./Updates\";\nimport Plugins from \"./Plugins\";\nimport SideNavAndHeader from \"./components/SideNavAndHeader\";\n\nimport \"fontsource-roboto/300-normal.css\"\nimport \"fontsource-roboto/400-normal.css\"\nimport \"fontsource-roboto/500-normal.css\"\nimport \"fontsource-roboto/700-normal.css\"\nimport './styles.css';\nimport {parseINIString} from \"./utilities\"\n\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#f6f6f7\",\n    },\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#5331CA',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n  },\n});\n\n\n\nfunction App() {\n\n  const [config, setConfig] = React.useState({})\n\n  React.useEffect(() => {\n\n    async function getConfig() {\n      await fetch(\"/get_config/config.ini\")\n        .then((response) => {\n            if (response.ok) {\n              return response.text();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((config) => {\n          setConfig(parseINIString(config)); // TODO: parse on server side and send a json object\n        })\n        .catch((error) => {})\n    }\n    getConfig();\n  }, [])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <div style={{display: 'flex'}}>\n        <SideNavAndHeader />\n        <main style={{flexGrow: 1, paddingTop: theme.spacing(9), paddingLeft: theme.spacing(4), paddingRight: theme.spacing(4)}}>\n          <Router>\n            <div className=\"pageContainer\">\n              <Switch>\n                <Route path=\"/export-data\">\n                  <ExportData config={config} title=\"Pioreactor ~ Export data\"/>\n                  <TactileButtonNotification config={config}/>\n                </Route>\n                <Route path=\"/start-new-experiment\">\n                  <StartNewExperiment config={config} title=\"Pioreactor ~ Start new experiment\" />\n                  <TactileButtonNotification config={config}/>\n                </Route>\n                <Route path=\"/overview\">\n                  <ExperimentOverview config={config} title=\"Pioreactor ~ Overview\"/>\n                </Route>\n                <Route path=\"/plugins\">\n                  <Plugins config={config} title=\"Pioreactor ~ Plugins\"/>\n                  <TactileButtonNotification config={config}/>\n                </Route>\n                <Route path=\"/analysis\">\n                  <Plugins config={config} title=\"Pioreactor ~ Analysis\"/>\n                  <TactileButtonNotification config={config}/>\n                </Route>\n                <Route path=\"/config\">\n                  <EditConfig config={config} title=\"Pioreactor ~ Configuration\"/>\n                  <TactileButtonNotification config={config}/>\n                </Route>\n                <Route path=\"/pioreactors\">\n                  <Pioreactors config={config} title=\"Pioreactor ~ Pioreactors\"/>\n                </Route>\n                <Route path=\"/Updates\">\n                  <Updates config={config} title=\"Pioreactor ~ Updates\"/>\n                  <TactileButtonNotification config={config}/>\n                </Route>\n                <Route path=\"/\">\n                  <ExperimentOverview config={config} title=\"Pioreactor ~ Pioreactor\"/>\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </main>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}