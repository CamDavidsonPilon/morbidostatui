{"version":3,"sources":["components/TactileButtonNotification.jsx","components/PioreactorIcon.jsx","components/Drawer.jsx","components/Header.jsx","components/LogTable.jsx","components/ExperimentSummary.jsx","components/Chart.jsx","components/MediaCard.jsx","components/ClearChartButton.jsx","components/ClearLogButton.jsx","ExperimentOverview.jsx","DownloadData.jsx","utilities.js","components/ButtonChangeDosingDialog.jsx","components/ButtonChangeLEDDialog.jsx","components/ActionDosingForm.jsx","components/ActionLEDForm.jsx","Pioreactors.jsx","components/CleaningScript.jsx","components/StartSensors.jsx","components/StartCalculations.jsx","StartNewExperiment.jsx","EditConfig.jsx","Updates.jsx","App.jsx","serviceWorker.js","index.js"],"names":["TactileButtonNotification","props","React","useState","unit","setUnit","renamedUnit","setRenamedUnit","open","setOpen","useEffect","config","client","remote","ws_url","Client","Math","random","connect","onSuccess","subscribe","join","qos","timeout","reconnect","onMessageArrived","msg","payloadString","topic","split","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","key","transitionDuration","enter","Alert","severity","variant","icon","AlertTitle","style","fontSize","PioreactorIcon","SvgIcon","id","stroke","strokeWidth","fill","fillColor","fillRule","transform","d","cx","cy","r","SideDrawer","isOpen","setIsOpen","isSelected","path","window","location","pathname","toggleDrawer","event","type","Fragment","IconButton","color","aria-label","edge","onClick","Drawer","anchor","onOpen","role","onKeyDown","alt","src","width","marginLeft","marginTop","List","ListItem","href","component","button","selected","ListItemIcon","ListItemText","primary","Divider","useStyles","makeStyles","theme","root","flexGrow","title","Header","classes","className","AppBar","position","Toolbar","Typography","Link","underline","height","target","rel","Button","textTransform","verticalAlign","LogTable","state","listOfLogs","onConnect","bind","fetch","then","response","json","data","setState","this","getData","message","length","pop","payload","unshift","timestamp","moment","format","is_error","includes","is_warning","string","slice","name","Card","CardContent","Box","fontWeight","TableContainer","overflowY","Table","stickyHeader","size","TableHead","TableRow","TableCell","clsx","headerCell","TableBody","map","log","i","tightCell","smallText","errorLog","warningLog","renameUnit","Component","withStyles","padding","backgroundColor","tightRight","textAlign","cardContent","pos","marginBottom","textIcon","margin","EditableDescription","handleChange","evt","desc","value","onBlur","originalDesc","method","body","JSON","stringify","experiment","description","headers","res","status","openSnackBar","handleSnackbarClose","e","reason","render","innerRef","contentEditable","html","disabled","onChange","tagName","createRef","prevProps","ExperimentSummary","experimentMetadata","startedAt","display","justifyContent","marginRight","float","diff","colors","0","1","2","3","colorMaps","getColorFromName","sensorRe","test","match","newPallete","shift","Chart","createToolTip","datum","x","renameAndFormatSeries","childName","round","y","seriesMap","hiddenSeries","Set","names","legendEvents","fetched","selectLegendData","selectVictoryLines","dataFile","initialSeriesMap","entries","v","filter","filterDataPoints","item","Object","keys","createLegendEvents","idx","eventKey","String","eventHandlers","mutation","delete","add","retained","currentTime","isODReading","push","parseFloat","newSeriesMap","error","console","results","index","sensor","breakString","totalLength","line","symbol","has","interpolation","labels","parent","border","VictoryVoronoiContainer","createContainer","maxHeight","domainPadding","left","right","bottom","top","events","responsive","scale","VictoryTheme","material","containerComponent","voronoiBlacklist","labelComponent","cornerRadius","flyoutStyle","text","textAnchor","fontFamily","tickLabels","offsetY","orientation","crossAxis","dependentAxis","label","yAxisLabel","axisLabelComponent","dy","symbolSpacer","itemsPerRow","borderPadding","cursor","gutter","MediaCard","mediaThroughputPerUnit","altMediaThroughputPerUnit","mediaThroughput","altMediaThroughput","rates","all","mediaRate","altMediaRate","activeUnits","prevState","getRecentRates","hash","object","hasOwnProperty","topicParts","destinationName","objectRef","totalRef","addOrUpdate","total","values","reduce","a","b","align","scope","toFixed","ClearChartButton","jobName","Message","publish","reload","ClearLogButton","Overview","setExperimentMetadata","getLatestExperiment","Grid","container","spacing","justify","xs","paddingRight","md","paddingLeft","domain","formControl","caption","maxWidth","ExperimentSelection","experiments","setExperiments","FormControl","FormLabel","Select","native","inputProps","CheckboxesGroup","FormGroup","FormControlLabel","control","Checkbox","checked","isChecked","growth_rates","gutterBottom","od_readings_raw","od_readings_filtered","alt_media_fraction","dosing_events","dosing_automation_settings","led_events","led_automation_settings","logs","DownloadDataFormContainer","isRunning","setIsRunning","isError","setIsError","errorMsg","setErrorMsg","experimentSelection","datasetCheckbox","runningFeedback","CircularProgress","errorFeedbackOrDefault","preventDefault","some","link","document","createElement","setAttribute","appendChild","click","remove","catch","DownloadData","parseINIString","regex","section","param","comment","lines","forEach","textFieldCompact","unitTitle","unitTitleDialog","suptitle","SilentForm","defaults","duration","updateParent","TextField","defaultValue","InputProps","endAdornment","InputAdornment","PIDTurbidostatForm","volume","target_od","onSettingsChange","PIDMorbidostatForm","target_growth_rate","ChemostatForm","ButtonChangeDosingDialog","dosing_automation","algoSettings","setAlgoSettings","isClicked","setIsClicked","setClient","updateFromChild","setting","currentDosingautomation","Dialog","aria-labelledby","PaperProps","DialogTitle","DialogContent","mode","switchToForm","ButtonChangeLEDDialog","led_automation","currentLEDautomation","actionTextField","actionForm","actionToAct","ActionPumpForm","mL","setML","setDuration","isMLDisabled","setIsMLDisabled","isDurationDisabled","setIsDurationDisabled","openSnackbar","setOpenSnackbar","action","params","ml","source_of_event","URLSearchParams","replace","ActionLEDForm","intensity","setIntensity","channel","pioreactorCard","disabledText","textbox","textboxLabel","footnote","textField","textFieldWide","slider","divider","TabPanel","children","other","hidden","UnitSettingDisplay","stateDisplay","isStateSetting","isUnitActive","displaySettings","isLEDIntensity","unpacked","parse","default","precision","measurementUnit","ButtonConfirmStopProcessDialog","handleClose","aria-describedby","DialogContentText","DialogActions","autoFocus","AddNewPioreactor","snackbarOpen","setSnackbarOpen","setName","startAdornment","newPioreactorName","ok","Error","PioreactorHeader","SettingsActionsDialogAll","PatientButton","buttonText","setButtonText","disableElevation","SettingsActionsDialog","defaultStirring","setDefaultStirring","snackbarMessage","setSnackbarMessage","tabValue","setTabValue","setPioreactorJobState","job","sendMessage","setTimeout","startPioreactorJob","job_attr","setPioreactorJobAttr","setPioreactorJobAttrOnEnter","fetchData","createUserButtonsBasedOnState","jobState","stirringButtons","stirringJobState","odButtons","ODReadingJobState","grButtons","growthRateJobState","dosingButtons","dosingControlJobState","ledButtons","ledControlJobState","invertedLEDMap","fromEntries","k","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","isPlural","Slider","parseInt","stirringDC","step","valueLabelDisplay","onChangeCommitted","marks","onKeyPress","targetOD","targetGrowthRate","dosingautomation","ledautomation","hrJobs","jobButton","ActiveUnits","units","PioreactorCard","FlashLEDButton","flashing","setFlashing","setStirringJobState","setODReadingJobState","setGrowthRateJobState","setSosingControlJobState","monitorJobState","setMonitorJobState","temperatureControllingJobState","setTemperatureControllingJobState","setLEDControllingJobState","setStirringDC","setTargetOD","setTargetGrowthRate","setVolume","setDosingautomation","setLedautomation","ledIntensity","setLEDIntensity","topicsToCallback","parsedFloat","isNaN","indicatorDotColor","indicatorDotShadow","indicatorLabel","Tooltip","placement","class","boxShadow","alignRight","InactiveUnits","Pioreactors","actionsContainer","resetContainer","divInstructions","CycleLiquid","liquid","additionalMsg","duty_cycle","MediaFlush","isAlt","altMedia","AddFinalVolumeOfMedia","VerticalLinearStepper","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","Step","StepLabel","StepContent","getStepContent","Paper","square","elevation","StartStirringButton","StartODReading","StartSensors","direction","alignItems","fontScale","StartGrowthRate","StartCalculations","setExperiment","instructions","halfTextField","ExperimentSummaryForm","formError","setFormError","expName","setExpName","setTimestamp","setDescription","required","InputLabelProps","shrink","rowsMax","placeholder","multiline","fullWidth","publishExpNameToMQTT","StartNewExperimentContainer","skipped","setSkipped","content","optional","isStepOptional","isStepSkipped","stepProps","labelProps","completed","prevSkipped","newSkipped","scrollTo","StartNewExperiment","EditableCodeDiv","onSelectionChange","filename","getConfig","getCodeFlaskRef","codeFlask","onTextChange","code","snackbarMsg","availableConfigs","saveCurrentCode","getListOfConfigFiles","letterSpacing","editorRef","language","EditConfigContainer","EditConfig","ConfirmDialog","PageHeader","version","setVersion","latestVersion","setLatestVersion","getCurrentApp","getLatestVersion","ChangelogContainer","changelog","setChangelog","dangerouslySetInnerHTML","__html","Updates","createMuiTheme","palette","background","main","App","setConfig","CssBaseline","ExperimentOverview","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c50fad19.chunk.js","sourcesContent":["import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nfunction TactileButtonNotification(props) {\n  var [unit, setUnit] = React.useState(\"\")\n  var [renamedUnit, setRenamedUnit] = React.useState(\"\")\n  var [open, setOpen] = React.useState(false)\n\n  React.useEffect(() => {\n    if (!props.config['network.topology']){\n      return\n    }\n\n    const onMessageArrived = (msg) => {\n      if (msg.payloadString === \"1\"){\n        var unit = msg.topic.split(\"/\")[1]\n        setUnit(unit)\n        try {\n          setRenamedUnit(props.config['ui.rename'][unit])\n        }\n        catch {}\n        setOpen(true)\n      }\n      else {\n        setOpen(false)\n      }\n    }\n\n    const onSuccess = () => {\n      client.subscribe(\n      [\n        \"pioreactor\",\n        \"+\",\n        \"$experiment\",\n        \"monitor\",\n        \"button_down\"\n      ].join(\"/\"),\n      { qos: 1 }\n      )\n    }\n\n    var client = null\n    if (props.config.remote && props.config.remote.ws_url) {\n      client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_TactileButtonNotification\" + Math.random()\n      )}\n    else {\n      client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_TactileButtonNotification\" + Math.random()\n      );\n    }\n    client.connect({onSuccess: onSuccess, timeout: 180, reconnect: true});\n    client.onMessageArrived = onMessageArrived;\n\n  },[props.config])\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={null}\n      onClose={() => {}}\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      key={\"button-tactile-snackbar\"}\n      transitionDuration={{enter: 10}}\n    >\n    <Alert severity=\"info\" variant=\"filled\" icon={false}>\n      <AlertTitle style={{fontSize: 25}}>{unit + (renamedUnit ? \" / \" + renamedUnit : \"\")}</AlertTitle>\n      Holding <b>{unit}</b>'s button down\n    </Alert>\n    </Snackbar>\n)}\n\nexport default TactileButtonNotification;\n","import React from 'react'\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\n\nfunction PioreactorIcon(props) {\n  return (\n    <SvgIcon {...props}>\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill={props.fillColor || \"none\"} fillRule=\"evenodd\">\n            <g id=\"Experiment-Page-1\" transform=\"translate(-728.000000, -1502.000000)\" stroke=\"currentColor\" strokeWidth=\"1.8\">\n                <g id=\"pioreactor\" transform=\"translate(729.000000, 1503.000000)\">\n                    <path d=\"M1.4,18.9 L1.4,14.7 L0,14.7 L0,11.2 L2.799,11.2 L2.8,0 L14,0 L13.999,11.2 L16.8,11.2 L16.8,14.7 L15.399,14.7 L15.4,18.9 L1.4,18.9 Z\" id=\"Combined-Shape\"></path>\n                    <circle id=\"Oval\" cx=\"8.4\" cy=\"13.3\" r=\"2.1\"></circle>\n                </g>\n            </g>\n        </g>\n    </SvgIcon>\n  );\n}\n\nexport default PioreactorIcon;\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport PioreactorIcon from './PioreactorIcon';\n\nexport default function SideDrawer() {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  function isSelected(path) {\n    return (window.location.pathname === path)\n  }\n\n\n\n  const toggleDrawer = (open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setIsOpen(open);\n  };\n\n  const list = () => (\n    <div\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <img alt=\"pioreactor logo\" src=\"grey_color.png\" width=\"40%\" style={{marginLeft: \"70px\", marginTop: \"5px\"}}/>\n      <List>\n\n        <ListItem href=\"/\" component=\"a\" button key={\"overview\"} selected={isSelected(\"/\") || isSelected(\"/overview\")}>\n          <ListItemIcon><DashboardIcon color={(isSelected(\"/\") || isSelected(\"/overview\")) ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Experiment Overview\"} />\n        </ListItem>\n        <ListItem button href=\"/pioreactors\"  component=\"a\" key={\"pioreactors\"} selected={isSelected(\"/pioreactors\")}>\n          <ListItemIcon> <PioreactorIcon color={isSelected(\"/pioreactors\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Pioreactors\"} />\n        </ListItem>\n\n\n      </List>\n      <Divider />\n      <List>\n        <ListItem button href=\"/edit-config\"  component=\"a\" key={\"edit_config\"} selected={isSelected(\"/edit-config\")}>\n          <ListItemIcon> <EditIcon color={isSelected(\"/edit-config\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Edit config.ini\"} />\n        </ListItem>\n        <ListItem href=\"/download-data\" component=\"a\" button key={\"download_data\"} selected={isSelected(\"/download-data\")}>\n          <ListItemIcon><SaveAltIcon color={isSelected(\"/download-data\") ? \"primary\" : \"inherit\"}/> </ListItemIcon>\n          <ListItemText primary={\"Download data\"} />\n        </ListItem>\n\n      </List>\n      <Divider />\n      <List>\n        <ListItem href=\"https://github.com/Pioreactor/pioreactor/wiki\" component=\"a\" button key=\"help\">\n          <ListItemIcon><HelpOutlineIcon/> </ListItemIcon>\n          <ListItemText primary={\"Documentation\"} />\n        </ListItem>\n        <ListItem href=\"/updates\" component=\"a\" button key=\"updates\">\n          <ListItemIcon><UpdateIcon/> </ListItemIcon>\n          <ListItemText primary={\"Updates\"} />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n      <React.Fragment key={\"leftDrawer\"}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={toggleDrawer(true)}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Drawer\n          anchor={\"left\"}\n          open={isOpen}\n          onClose={toggleDrawer(false)}\n          onOpen={toggleDrawer(true)}\n        >\n          {list()}\n        </Drawer>\n      </React.Fragment>\n  );\n}\n","import React from 'react'\nimport {AppBar, Toolbar, Typography, Link, Button} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/styles';\nimport SideDrawer from './Drawer'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nconst Header = () => {\n    const classes = useStyles();\n    return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <SideDrawer />\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link color=\"inherit\" underline=\"none\" href=\"/\" className={classes.title}> <img alt=\"pioreactor logo\" src=\"white_colour.png\" style={{width: \"120px\", height: \"29px\"}}/> </Link>\n          </Typography>\n          <Link color=\"inherit\" underline=\"none\" href=\"https://github.com/Pioreactor/pioreactor/wiki\" target=\"_blank\" rel=\"noopener\">\n            <Button color=\"inherit\" style={{textTransform: \"none\"}}>Help <HelpOutlineIcon style={{ fontSize: 18, verticalAlign: \"middle\", marginLeft: 5 }}/></Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n    )\n}\n\nexport default Header;\n","import React from 'react'\n\nimport clsx from 'clsx';\nimport {Client} from 'paho-mqtt';\nimport moment from 'moment';\n\n\nimport {withStyles} from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"8px 2px 6px 4px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n  errorLog: {\n    backgroundColor: \"#ff7961\"\n  },\n  warningLog: {\n    backgroundColor: \"#FFEA8A\"\n  }\n});\n\nclass LogTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {listOfLogs: []};\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getData() {\n    await fetch(\"./data/all_pioreactor.log.json\")\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({listOfLogs: data});\n      });\n  }\n\n  componentDidMount() {\n    this.getData()\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_LogTable\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_LogTable\" + Math.random()\n      );\n    }\n    this.client.connect({timeout: 180, 'onSuccess': this.onConnect, reconnect: true});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  onConnect() {\n      this.client.subscribe([\"pioreactor\", \"+\", \"+\", \"app_logs_for_ui\"].join(\"/\"))\n  }\n\n  onMessageArrived(message) {\n    if (this.state.listOfLogs.length > 50){\n      this.state.listOfLogs.pop()\n    }\n    const unit = message.topic.split(\"/\")[1]\n    const payload = message.payloadString\n    this.state.listOfLogs.unshift(\n      {timestamp: moment().format(\"x\"), unit: unit, message: payload, is_error: payload.includes(\"Error\"), is_warning: payload.includes(\"Warning\")}\n    )\n    this.setState({\n      listOfLogs: this.state.listOfLogs\n    });\n  }\n\n  breakString(string){\n    if (string.length > 5){\n      return string.slice(0, 4) + \"...\"\n    }\n    return string\n  }\n\n  renameUnit(name){\n    if (!this.props.config['ui.overview.rename']){\n      return name\n    }\n    return (this.props.config['ui.overview.rename'][name]) || name\n  }\n\n  render(){\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" component=\"h2\">\n            <Box fontWeight=\"fontWeightRegular\">\n              Event Logs\n            </Box>\n          </Typography>\n          <TableContainer style={{ height: \"700px\", width: \"100%\", overflowY: \"scroll\"}}>\n            <Table stickyHeader size=\"small\" aria-label=\"log table\">\n               <TableHead>\n                <TableRow>\n                  <TableCell className={clsx(classes.headerCell)}>Timestamp</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Message</TableCell>\n                  <TableCell className={clsx(classes.headerCell)}>Pioreactor</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {this.state.listOfLogs.map((log, i) => (\n                  <TableRow key={i}>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}> {moment(log.timestamp, 'x').format('HH:mm:ss')} </TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}> {log.message} </TableCell>\n                    <TableCell className={clsx(classes.tightCell, classes.smallText, {[classes.errorLog]: log.is_error, [classes.warningLog]: log.is_warning})}> {this.renameUnit(log.unit)}</TableCell>\n                  </TableRow>\n                  ))\n                }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n  )}\n}\n\n\n\nexport default withStyles(useStyles)(LogTable);\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport moment from \"moment\";\nimport Box from '@material-ui/core/Box';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ContentEditable from 'react-contenteditable'\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n});\n\n\n\nclass EditableDescription extends React.Component {\n  constructor(props) {\n    super(props)\n    this.contentEditable = React.createRef();\n    this.state = {desc: \"\", openSnackBar: false, originalDesc: \"\"};\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({desc: `${this.props.description}`, originalDesc: `${this.props.description}`})\n    }\n  }\n\n  handleChange = evt => {\n    this.setState({desc: evt.target.value});\n  };\n\n  onBlur = evt => {\n    if (this.state.desc !== this.state.originalDesc) {\n      this.setState({originalDesc: this.state.desc})\n      return fetch('update_experiment_desc', {\n          method: \"POST\",\n          body: JSON.stringify({experiment : this.props.experiment, description: this.state.desc}),\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          if (res.status === 200){\n            this.setState({openSnackBar: true});\n          }\n        })\n    }\n  };\n\n  handleSnackbarClose = (e, reason) => {\n    if (reason !== \"clickaway\"){\n      this.setState({openSnackBar: false});\n    }\n  };\n\n  render = () => {\n    return (\n      <div style={{\"padding\": \"0px 5px 0px 5px\"}}>\n        <Box fontWeight=\"fontWeightBold\">\n          Description:\n        </Box>\n        <ContentEditable\n            innerRef={this.contentEditable}\n            html={this.state.desc} // innerHTML of the editable div\n            disabled={false}       // use true to disable editing\n            onChange={this.handleChange} // handle innerHTML change\n            onBlur={this.onBlur}\n            tagName=\"p\"\n            style={{\"padding\": \"3px 3px 3px 2px\"}}\n          />\n          <Snackbar\n            anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n            open={this.state.openSnackBar}\n            onClose={this.handleSnackbarClose}\n            message={\"Updated description\"}\n            autoHideDuration={2500}\n            key={\"snackbarEditDesc\"}\n          />\n      </div>\n    )\n  };\n};\n\n\nfunction ExperimentSummary(props){\n  const classes = useStyles();\n  const experiment = props.experimentMetadata.experiment || \"\"\n  const startedAt = props.experimentMetadata.timestamp || moment()\n  const desc = props.experimentMetadata.description || \"\"\n\n  return(\n    <React.Fragment>\n      <div>\n        <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n          <Typography variant=\"h5\" component=\"h1\">\n            <Box fontWeight=\"fontWeightBold\">\n              {experiment}\n            </Box>\n          </Typography>\n          <div >\n            <Button href=\"/download-data\" style={{textTransform: 'none', marginRight: \"0px\", float: \"right\"}} color=\"primary\">\n              <GetAppIcon className={classes.textIcon}/> Download experiment data\n            </Button>\n            <Button href=\"/start-new-experiment\" style={{textTransform: 'none', float: \"right\", marginRight: \"10px\"}} color=\"primary\">\n              <AddIcon className={classes.textIcon}/> New experiment\n            </Button>\n          </div>\n        </div>\n\n        <Divider/>\n        <Typography variant=\"subtitle2\">\n          <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n            <CalendarTodayIcon style={{ fontSize: 12, verticalAlign: \"middle\" }}/> Experiment started:\n          </Box>\n          <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n            <span title={moment(startedAt).format(\"YYYY-MM-DD HH:mm:ss\")}>{moment(startedAt).format(\"dddd, MMMM D YYYY\")}</span>\n          </Box>\n          <Box fontWeight=\"fontWeightBold\" style={{display:\"inline-block\", margin: \"10px 2px 10px 0px\"}}>\n            <TimelapseIcon style={{ fontSize: 12, verticalAlign: \"middle\"  }}/>Time elapsed:\n          </Box>\n          <Box fontWeight=\"fontWeightRegular\" style={{display:\"inline-block\"}}>\n           {(moment().diff(moment(startedAt), 'H'))}h\n          </Box>\n        </Typography>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <EditableDescription experiment={experiment} description={desc} />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  )\n}\n\n\nexport default ExperimentSummary;\n","import React from \"react\";\nimport { Client } from \"paho-mqtt\";\nimport {\n  VictoryChart,\n  VictoryLabel,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLine,\n  VictoryLegend,\n  createContainer,\n  VictoryTooltip,\n} from \"victory\";\nimport moment from \"moment\";\nimport Card from \"@material-ui/core/Card\";\n\nconst colors = [\n  //generated with https://medialab.github.io/iwanthue/\n  // and https://maketintsandshades.com/#50b47b,b74873,6c81d9,bf903b,5b388a,b94f3d,7fa443,c169ba\n  {primary: \"#50b47b\", 0: \"#50b47b\", 1: \"#73c395\", 2: \"#387e56\", 3: \"#a8dabd\"},\n  {primary: \"#b74873\", 0: \"#b74873\", 1: \"#c56d8f\", 2: \"#923a5c\", 3: \"#dba4b9\"},\n  {primary: \"#6c81d9\", 0: \"#6c81d9\", 1: \"#98a7e4\", 2: \"#4c5a98\", 3: \"#c4cdf0\"},\n  {primary: \"#bf903b\", 0: \"#bf903b\", 1: \"#cca662\", 2: \"#866529\", 3: \"#dfc89d\"},\n  {primary: \"#5b388a\", 0: \"#5b388a\", 1: \"#7c60a1\", 2: \"#402761\", 3: \"#ad9cc5\"},\n  {primary: \"#b94f3d\", 0: \"#b94f3d\", 1: \"#ce8477\", 2: \"#943f31\", 3: \"#dca79e\"},\n  {primary: \"#7fa443\", 0: \"#7fa443\", 1: \"#a5bf7b\", 2: \"#59732f\", 3: \"#bfd2a1\"},\n  {primary: \"#c169ba\", 0: \"#c169ba\", 1: \"#d496cf\", 2: \"#874a82\", 3: \"#e6c3e3\"},\n];\n\nconst colorMaps = {}\n\nfunction getColorFromName(name){\n  if (name in colorMaps){\n    return colorMaps[name]\n  }\n\n  let sensorRe = /(.*)-[0123]/;\n  if (sensorRe.test(name)){\n    let primaryName = name.match(sensorRe)[1]\n    return getColorFromName(primaryName)\n  }\n  else{\n    var newPallete = colors.shift()\n    colorMaps[name] = newPallete.primary\n    colorMaps[name + \"-0\"] = newPallete[0]\n    colorMaps[name + \"-1\"] = newPallete[1]\n    colorMaps[name + \"-2\"] = newPallete[2]\n    colorMaps[name + \"-3\"] = newPallete[3]\n    return getColorFromName(name)\n  }\n}\n\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seriesMap: {},\n      hiddenSeries: new Set(),\n      names: [],\n      legendEvents: [],\n      fetched: false,\n    };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n    this.selectLegendData = this.selectLegendData.bind(this);\n    this.selectVictoryLines = this.selectVictoryLines.bind(this);\n\n  }\n\n  onConnect() {\n    this.client.subscribe(\n      [\"pioreactor\", \"+\", this.props.experiment, this.props.topic].join(\"/\")\n    );\n  }\n\n  componentDidMount() {\n    this.getData();\n\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_Chart\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_Chart\" + Math.random()\n      );\n    }\n\n\n    this.client.connect({ onSuccess: this.onConnect, reconnect: true});\n    this.client.onMessageArrived = this.onMessageArrived;\n  }\n\n  async getData() {\n    await fetch(this.props.dataFile)\n      .then((response) => {\n        this.setState({fetched: true})\n        return response.json();\n      })\n      .then((data) => {\n        let initialSeriesMap = {};\n        for (const [i, v] of data[\"series\"].entries()) {\n          if (data[\"data\"][i].length > 0) {\n            initialSeriesMap[v] = {\n              data: (data[\"data\"][i]).filter(this.filterDataPoints(data[\"data\"][i].length)).map(item => ({y: item.y, x: moment(item.x, 'x')})),\n              name: v,\n              color: getColorFromName(v),\n            };\n          }\n        }\n        let names = Object.keys(initialSeriesMap);\n        this.setState({\n          seriesMap: initialSeriesMap,\n          legendEvents: this.createLegendEvents(names),\n          names: names,\n        });\n      });\n  }\n\n  createLegendEvents(names) {\n    return names.map((name, idx) => {\n      return {\n        childName: [\"legend\"],\n        target: \"data\",\n        eventKey: String(idx),\n        eventHandlers: {\n          onClick: () => {\n            return [\n              {\n                childName: [\"line-\" + name],\n                target: \"data\",\n                mutation: () => { //this is dumb! I shouldn't mutate this way!\n                  if (!this.state.hiddenSeries.delete(name)) {\n                    // Was not already hidden => add to set\n                    this.state.hiddenSeries.add(name);\n                  }\n                  this.setState({\n                    hiddenSeries: new Set(this.state.hiddenSeries),\n                  });\n                  return null;\n                },\n              },\n            ];\n          },\n        },\n      };\n    });\n  }\n\n  onMessageArrived(message) {\n    if (!this.state.fetched){\n      return\n    }\n    if (message.retained){\n      return\n    }\n    const currentTime = moment()\n\n    var key = this.props.isODReading\n      ? message.topic.split(\"/\")[1] + \"-\" + message.topic.split(\"/\")[5]\n      : message.topic.split(\"/\")[1];\n\n    try {\n      if (!(key in this.state.seriesMap)){\n        const newSeriesMap = {...this.state.seriesMap, [key]:  {\n          data: [{x: currentTime, y: parseFloat(message.payloadString)}],\n          name: key,\n          color: getColorFromName(key)\n        }}\n\n        this.setState({ seriesMap: newSeriesMap })\n        this.setState({\n          names: [...this.state.names, key]\n        })\n      } else {\n        // .push seems like bad state management, and maybe a hit to performance...\n        this.state.seriesMap[key].data.push({\n          x: currentTime,\n          y: parseFloat(message.payloadString),\n        });\n        this.setState({ seriesMap: this.state.seriesMap })\n      }\n    }\n    catch (error) {\n      console.log(error)\n    }\n    return;\n  }\n\n  breakString(string){\n    if (string.length > 7){\n      return string.slice(0, 5) + \"...\" + string.slice(string.length-2, string.length)\n    }\n    return string\n  }\n\n  renameAndFormatSeries(name){\n    if (!this.props.config['ui.overview.rename']){\n      return name\n    }\n\n    if (name.match(/(.*)([0123])/g)){\n      const results = name.match(/(.*)([0123])/);\n      const index = results[1];\n      const sensor = results[2];\n      return this.breakString(this.props.config['ui.overview.rename'][index] || index) + sensor\n    }\n    else {\n      return this.breakString(this.props.config['ui.overview.rename'][name] || name)\n    }\n  }\n\n\n  filterDataPoints(totalLength){\n    return function(value, index){\n      if (totalLength < 500){\n        return true\n      }\n      if ((index === 0) || (index === (totalLength - 1))){\n        return true\n      }\n      else if (index % Math.round(totalLength/500) === 0){\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n\n  createToolTip = (d) => {\n      return `${d.datum.x.format(\"MMM DD HH:mm\")}\n${this.renameAndFormatSeries(d.datum.childName)}: ${Math.round(d.datum.y * 1000) / 1000}`\n  }\n\n\n  selectLegendData(name){\n    if (!this.state.seriesMap) {\n      return {}\n    }\n    const line = this.state.seriesMap[name];\n    const item = {\n      name: this.renameAndFormatSeries(line.name),\n      symbol: { fill: line.color },\n    };\n    if (this.state.hiddenSeries.has(name)) {\n      return { ...item, symbol: { fill: \"white\" } };\n    }\n    return item;\n  }\n\n  selectVictoryLines(name) {\n    if (this.state.hiddenSeries.has(name)) {\n      return undefined;\n    }\n    return (\n      <VictoryLine\n        interpolation={this.props.interpolation}\n        key={\"line-\" + name + this.props.title}\n        name={name}\n        style={{\n          labels: {fill: this.state.seriesMap[name].color},\n          data: {\n            stroke: this.state.seriesMap[name].color,\n            strokeWidth: 2,\n          },\n          parent: { border: \"1px solid #ccc\" },\n        }}\n        data={this.state.seriesMap[name].data}\n        x=\"x\"\n        y=\"y\"\n      />\n    );\n  }\n\n  render() {\n    const VictoryVoronoiContainer = createContainer(\"voronoi\");\n    return (\n      <Card style={{ maxHeight: \"100%\"}}>\n        <VictoryChart\n          title={this.props.title}\n          domainPadding={10}\n          padding={{ left: 70, right: 50, bottom: 80, top: 50 }}\n          events={this.state.legendEvents}\n          responsive={true}\n          width={600}\n          height={315}\n          scale={{x: 'time'}}\n          theme={VictoryTheme.material}\n          containerComponent={\n            <VictoryVoronoiContainer\n              voronoiBlacklist={['parent']}\n              labels={this.createToolTip}\n              labelComponent={\n                <VictoryTooltip\n                  cornerRadius={0}\n                  flyoutStyle={{\n                    fill: \"white\",\n                    stroke: \"#90a4ae\",\n                    strokeWidth: 1.5,\n                  }}\n                />\n              }\n            />\n          }\n        >\n          <VictoryLabel\n            text={this.props.title}\n            x={300}\n            y={30}\n            textAnchor=\"middle\"\n            style={{\n              fontSize: 15,\n              fontFamily: \"inherit\",\n            }}\n          />\n          <VictoryAxis\n            style={{\n              tickLabels: {\n                fontSize: 13,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n            offsetY={80}\n            orientation=\"bottom\"\n          />\n          <VictoryAxis\n            crossAxis={false}\n            dependentAxis\n            label={this.props.yAxisLabel}\n            axisLabelComponent={\n              <VictoryLabel\n                dy={-40}\n                style={{\n                  fontSize: 15,\n                  padding: 10,\n                  fontFamily: \"inherit\",\n                }}\n              />\n            }\n            style={{\n              tickLabels: {\n                fontSize: 13,\n                padding: 5,\n                fontFamily: \"inherit\",\n              },\n            }}\n          />\n          <VictoryLegend\n            x={60}\n            y={267}\n            symbolSpacer={10}\n            itemsPerRow={6}\n            name={\"legend\"}\n            borderPadding={{ right: 8 }}\n            orientation=\"horizontal\"\n            cursor={\"pointer\"}\n            gutter={15}\n            style={{\n              labels: { fontSize: 12 },\n              data: { stroke: \"#485157\", strokeWidth: 0.5, size: 6.5 },\n            }}\n            data={this.state.names.map(this.selectLegendData)}\n          />\n          {Object.keys(this.state.seriesMap).map(this.selectVictoryLines)}\n        </VictoryChart>\n      </Card>\n    );\n  }\n}\n\nexport default Chart;\n","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport {Client} from 'paho-mqtt';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport {withStyles} from '@material-ui/styles';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport PioreactorIcon from \"./PioreactorIcon\"\n\n\n\nconst useStyles = theme => ({\n  tightCell: {\n    padding: \"8px 2px 6px 4px\",\n    fontSize: 13,\n  },\n  smallText: {\n    fontSize: 12,\n  },\n  headerCell: {\n    backgroundColor: \"white\",\n    padding: \"8px 6px 6px 6px\",\n  },\n  tightRight: {\n    textAlign: \"right\"\n  },\n});\n\n\n\nclass MediaCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mediaThroughputPerUnit: {},\n        altMediaThroughputPerUnit: {},\n        mediaThroughput: 0,\n        altMediaThroughput: 0,\n        rates: {all: {mediaRate: 0, altMediaRate: 0}},\n        activeUnits: []\n      };\n    this.onConnect = this.onConnect.bind(this);\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n  }\n\n  async getRecentRates() {\n    if (!this.props.experiment){\n      return\n    }\n\n     await fetch(\"/recent_media_rates/\" + this.props.experiment)\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      this.setState(prevState => ({...prevState, rates: data}))\n    });\n    return\n  }\n\n  componentDidUpdate(prevProps) {\n     if (prevProps.experiment !== this.props.experiment) {\n      this.getRecentRates()\n     }\n  }\n\n  componentDidMount() {\n    if (this.props.config.remote && this.props.config.remote.ws_url) {\n      this.client = new Client(\n        `ws://${this.props.config.remote.ws_url}/`,\n        \"webui_MediaCard\" + Math.random()\n      )}\n    else {\n      this.client = new Client(\n        `${this.props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_MediaCard\" + Math.random()\n      );\n    }\n\n    this.client.connect({timeout: 180, 'onSuccess': this.onConnect});\n    this.client.onMessageArrived = this.onMessageArrived;\n    this.setState({activeUnits: Object.entries(this.props.config['network.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0])})\n    this.getRecentRates()\n  }\n\n\n  onConnect() {\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"throughput_calculating\", \"alt_media_throughput\"].join(\"/\"))\n      this.client.subscribe([\"pioreactor\", \"+\", this.props.experiment, \"throughput_calculating\", \"media_throughput\"].join(\"/\"))\n  }\n\n  addOrUpdate(hash, object, value) {\n      if (Object.hasOwnProperty(hash)){\n        object[hash] = value + object[hash]\n      }\n      else{\n        object[hash] = value\n      }\n      return object\n  }\n\n  onMessageArrived(message) {\n    const topic = message.destinationName\n    const topicParts = topic.split(\"/\")\n    const payload = parseFloat(message.payloadString)\n    const unit = topicParts[1]\n    const objectRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughputPerUnit\"  : \"mediaThroughputPerUnit\"\n    const totalRef = (topicParts.slice(-1)[0] === \"alt_media_throughput\")  ? \"altMediaThroughput\"  : \"mediaThroughput\"\n\n    this.setState({\n      [objectRef]: this.addOrUpdate(unit, this.state[objectRef], payload)\n    });\n\n    var total = Object.values(this.state[objectRef]).reduce((a, b) => a + b, 0)\n\n    this.setState({\n      [totalRef]: total\n    })\n\n  }\n  render(){\n    return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h2\">\n          <Box fontWeight=\"fontWeightRegular\">\n            Dosing\n          </Box>\n        </Typography>\n       <TableContainer style={{ width: \"100%\"}}>\n          <Table size=\"small\" aria-label=\"media throughput\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{padding: \"6px 0px\"}}></TableCell>\n                <TableCell style={{padding: \"6px 0px\"}} align=\"right\">Media</TableCell>\n                <TableCell style={{padding: \"6px 0px\"}} align=\"right\">Alt. Media</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow key=\"all\">\n                <TableCell style={{padding: \"6px 0px\"}} component=\"th\" scope=\"row\">\n                  All Pioreactors\n                </TableCell>\n                <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{this.state.mediaThroughput.toFixed(1)}mL (~{this.state.rates.all.mediaRate.toFixed(1)}mL/h)</TableCell>\n                <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{this.state.altMediaThroughput.toFixed(1)}mL (~{this.state.rates.all.altMediaRate.toFixed(1)}mL/h)</TableCell>\n              </TableRow>\n\n              {this.state.activeUnits.map((unit) => (\n                <TableRow key={unit}>\n                  <TableCell style={{padding: \"6px 0px\"}} component=\"th\" scope=\"row\">\n                      <PioreactorIcon style={{ fontSize: 14, verticalAlign: \"middle\" }} color=\"inherit\"/> <span className={\"underlineSpan\"} title={unit}>{(this.props.config['ui.rename'] && this.props.config['ui.rename'][unit]) ? this.props.config['ui.rename'][unit] : unit}</span>\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{(this.state.mediaThroughputPerUnit[unit] || 0).toFixed(1)}mL (~{this.state.rates[unit] ? this.state.rates[unit].mediaRate.toFixed(1) : \"0.0\"}mL/h)</TableCell>\n                  <TableCell align=\"right\" style={{ fontSize: 13, padding: \"6px 0px\"}}>{(this.state.altMediaThroughputPerUnit[unit] || 0).toFixed(1)}mL (~{this.state.rates[unit] ? this.state.rates[unit].altMediaRate.toFixed(1): \"0.0\"}mL/h)</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  )}\n}\n\nexport default  withStyles(useStyles)(MediaCard);\n","import React from \"react\";\nimport { Client, Message } from \"paho-mqtt\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}))\n\n\nfunction ClearChartButton(props){\n  const classes = useStyles();\n\n\n  function onClick() {\n    if (props.config.remote && props.config.remote.ws_url) {\n      var client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_ClearChartButton\" + Math.random()\n      )}\n    else {\n      var client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_ClearChartButton\" + Math.random()\n      );\n    }\n    client.connect({timeout: 180, onSuccess: () => {\n      for (var jobName of ['od_raw', 'od_filtered', 'growth_rate', 'alt_media_fraction']) {\n        var message = new Message(\"\");\n\n        message.destinationName = [\n          \"pioreactor\",\n          props.config['network.topology']['leader_hostname'],\n          \"$experiment\",\n          `${jobName}_time_series_aggregating`,\n          \"aggregated_time_series\",\n          \"set\",\n        ].join(\"/\");\n\n        client.publish(message);\n      }\n\n      window.location.reload();\n      return false\n    }});\n  }\n\n  return (\n    <Button color=\"primary\" style={{textTransform: \"none\"}} onClick={onClick}><ClearIcon className={classes.textIcon}/> Clear charts </Button>\n)}\n\n\nexport default ClearChartButton;\n","import React from \"react\";\nimport { Client, Message } from \"paho-mqtt\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}))\n\n\nfunction ClearLogButton(props){\n  const classes = useStyles();\n\n\n  function onClick() {\n    if (props.config.remote && props.config.remote.ws_url) {\n      var client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_ClearLogButton\" + Math.random()\n      )}\n    else {\n      var client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_ClearLogButton\" + Math.random()\n      );\n    }\n    client.connect({timeout: 180, onSuccess: () => {\n      var message = new Message(\"\");\n      message.destinationName = [\n        \"pioreactor\",\n        props.config['network.topology']['leader_hostname'],\n        \"$experiment\",\n        \"log_aggregating\",\n        \"aggregated_log_table\",\n        \"set\",\n      ].join(\"/\");\n      client.publish(message);\n      window.location.reload();\n      return false\n    }});\n  }\n\n  return (\n    <Button color=\"primary\" style={{textTransform: \"none\"}} onClick={onClick}> <ClearIcon className={classes.textIcon}/>  Clear log table </Button>\n)}\n\n\nexport default ClearLogButton;\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Header from \"./components/Header\";\nimport LogTable from \"./components/LogTable\";\nimport ExperimentSummary from \"./components/ExperimentSummary\";\nimport Chart from \"./components/Chart\";\nimport MediaCard from \"./components/MediaCard\";\nimport ClearChartButton from \"./components/ClearChartButton\";\nimport ClearLogButton from \"./components/ClearLogButton\";\nimport PioreactorIcon from './components/PioreactorIcon';\nimport TactileButtonNotification from \"./components/TactileButtonNotification\";\n\n\nfunction Overview(props) {\n\n  const [experimentMetadata, setExperimentMetadata] = React.useState({})\n\n  React.useEffect(() => {\n    async function getLatestExperiment() {\n         await fetch(\"/get_latest_experiment\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperimentMetadata(data)\n        });\n      }\n    getLatestExperiment()\n  }, [])\n\n  return (\n      <React.Fragment>\n        <Grid container spacing={2} justify=\"space-between\">\n          <Grid item xs={12} style={{paddingRight: \"0px\"}}>\n            <Header />\n          </Grid>\n          <Grid item xs={1} md={12}/>\n          <Grid item xs={1} md={12}/>\n\n\n          <Grid item xs={12} md={1}/>\n          <Grid item xs={12} md={10}>\n            <ExperimentSummary experimentMetadata={experimentMetadata}/>\n          </Grid>\n          <Grid item xs={12} md={1}/>\n\n\n          <Grid item xs={12} md={1}/>\n          <Grid item xs={12} md={6} container spacing={2} justify=\"flex-start\" style={{paddingLeft: 0, height: \"100%\"}}>\n\n\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['implied_growth_rate'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                dataFile={\"./data/growth_rate_time_series_aggregating.json\"}\n                title=\"Implied growth rate\"\n                topic=\"growth_rate\"\n                yAxisLabel=\"Growth rate, h⁻¹\"\n                experiment={experimentMetadata.experiment}\n                interpolation=\"stepAfter\"\n              />\n            </Grid>\n            }\n\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['fraction_of_volume_that_is_alternative_media'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                domain={[0, 1]}\n                dataFile={\"./data/alt_media_fraction_time_series_aggregating.json\"}\n                interpolation=\"stepAfter\"\n                title=\"Fraction of volume that is alternative media\"\n                topic=\"alt_media_calculating/alt_media_fraction\"\n                yAxisLabel=\"Fraction\"\n                experiment={experimentMetadata.experiment}\n              />\n            </Grid>\n            }\n\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['normalized_optical_density'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                isODReading={true}\n                dataFile={\"./data/od_filtered_time_series_aggregating.json\"}\n                title=\"Normalized optical density\"\n                topic=\"od_filtered/+/+\"\n                yAxisLabel=\"Current OD / initial OD\"\n                experiment={experimentMetadata.experiment}\n                interpolation=\"stepAfter\"\n              />\n            </Grid>\n            }\n\n            {( props.config['ui.overview.charts'] && (props.config['ui.overview.charts']['raw_optical_density'] === \"1\")) &&\n            <Grid item xs={12}>\n              <Chart\n                config={props.config}\n                isODReading={true}\n                dataFile={\"./data/od_raw_time_series_aggregating.json\"}\n                title=\"Raw optical density\"\n                topic=\"od_raw/+/+\"\n                yAxisLabel=\"Voltage\"\n                experiment=\"+\"\n                interpolation=\"stepAfter\"\n              />\n            </Grid>\n           }\n            <Grid item xs={12}> <ClearChartButton config={props.config} experiment={experimentMetadata.experiment}/> </Grid>\n          </Grid>\n\n          <Grid item xs={12} md={4} container spacing={2} justify=\"flex-end\" style={{height: \"100%\"}}>\n\n\n            {( props.config['ui.overview.cards'] && (props.config['ui.overview.cards']['dosings'] === \"1\")) &&\n              <Grid item xs={12} style={{padding: \"10px 0px\"}}>\n                <MediaCard experiment={experimentMetadata.experiment} config={props.config}/>\n                <Button href=\"/pioreactors\" color=\"primary\" style={{textTransform: \"none\", verticalAlign: \"middle\", margin: \"0px 3px\"}}> <PioreactorIcon style={{ fontSize: 17 }} color=\"primary\"/> See all Pioreactor details </Button>\n              </Grid>\n            }\n\n\n            {( props.config['ui.overview.cards'] && (props.config['ui.overview.cards']['event_logs'] === \"1\")) &&\n              <Grid item xs={12} style={{padding: \"10px 0px\"}}>\n                <LogTable config={props.config}/>\n                <ClearLogButton config={props.config} />\n              </Grid>\n            }\n\n\n          </Grid>\n\n          <Grid item xs={1} md={1}/>\n        </Grid>\n        {props.config['ui.overview.rename'] ? <TactileButtonNotification config={props.config}/> : null}\n      </React.Fragment>\n  );\n}\nexport default Overview;\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Header from \"./components/Header\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  caption: {\n    marginLeft: \"30px\",\n    maxWidth: \"650px\"\n  }\n}));\n\n\n\nfunction ExperimentSelection(props) {\n  const classes = useStyles();\n\n  const [experiments, setExperiments] = React.useState([])\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_experiments\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperiments(data)\n          props.handleChange(data[0].experiment)\n        });\n      }\n      getData()\n  }, [])\n\n  const handleExperimentSelectionChange = (e) => {\n    props.handleChange(e.target.value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n\n      <FormLabel component=\"legend\">Experiment</FormLabel>\n        <Select\n          native\n          value={props.ExperimentSelection}\n          onChange={handleExperimentSelectionChange}\n          inputProps={{\n            name: 'experiment',\n            id: 'experiment',\n          }}\n        >\n          {experiments.map((v) => {\n            return <option value={v.experiment}>{v.experiment +  ` (started ${moment(v.timestamp).format(\"MMMM D, YYYY\")})`}</option>\n            }\n          )}\n        </Select>\n      </FormControl>\n\n    </div>\n  )\n}\n\n\n\nconst CheckboxesGroup = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Datasets</FormLabel>\n        <FormGroup>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.growth_rates} onChange={props.handleChange} name=\"growth_rates\" />}\n            label=\"Implied growth rate\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of the calculated (implied) growth rate. Same data as presented in the \"Implied growth rate\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_raw} onChange={props.handleChange} name=\"od_readings_raw\" />}\n            label=\"Raw optical density\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of raw voltages provided by the senors, the inputs for growth calculations and normalized optical densities. Same data as presented in the \"Raw optical density\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.od_readings_filtered} onChange={props.handleChange} name=\"od_readings_filtered\" />}\n            label=\"Normalized optical density\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The time series of normalized optical densities. Same data as presented in the \"Normalized optical density\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.experiments} onChange={props.handleChange} name=\"experiments\" />}\n            label=\"Experiment description\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The most recent description of the experiment.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.alt_media_fraction} onChange={props.handleChange} name=\"alt_media_fraction\" />}\n            label=\"Alternative media fraction\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A time series of how much alternative media is in each Pioreactor. Same data as presented in the \"Fraction of volume that is alternative media\" chart in the Experiment Overview.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_events} onChange={props.handleChange} name=\"dosing_events\" />}\n            label=\"Dosing event log\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A detailed log table of all dosing events, including the volume exchanged, and the source of who or what changed it.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.dosing_automation_settings} onChange={props.handleChange} name=\"dosing_automation_settings\" />}\n            label=\"Dosing automation changelog\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            Whenever a dosing automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the dosing automation states\n            from this dataset.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_events} onChange={props.handleChange} name=\"led_events\" />}\n            label=\"LED event log\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            A detailed log table of all LED events, including the channel, intensity, and the source of who or what changed it.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.led_automation_settings} onChange={props.handleChange} name=\"led_automation_settings\" />}\n            label=\"LED automation changelog\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            Whenever a LED automation is updated (new automation, new setting, etc.), a new row is recorded. You can reconstruct all the LED automation states\n            from this dataset.\n          </Typography>\n\n          <FormControlLabel\n            control={<Checkbox checked={props.isChecked.logs} onChange={props.handleChange} name=\"logs\" />}\n            label=\"Pioreactor logs\"\n          />\n          <Typography variant=\"caption\" className={classes.caption} gutterBottom>\n            The append-only collection of logs from all Pioreactors. A subset of the these logs are displayed in the Log Table in the Experiment Overview.\n            These are the logs that should be provided to get assistance when troubleshooting.\n          </Typography>\n\n        </FormGroup>\n      </FormControl>\n    </div>\n)}\n\n\nfunction DownloadDataFormContainer() {\n  const classes = useStyles();\n  const [isRunning, setIsRunning] = React.useState(false)\n  const [isError, setIsError] = React.useState(false)\n  const [errorMsg, setErrorMsg] = React.useState(\"\")\n  const [state, setState] = React.useState({\n    experimentSelection: \"\",\n    datasetCheckbox: {\n      growth_rates: false,\n      dosing_events: false,\n      led_events: false,\n      experiments: false,\n      od_readings_raw: false,\n      od_readings_filtered: false,\n      logs: false,\n      alt_media_fraction: false,\n      dosing_automation_settings: false,\n      led_automation_settings: false,\n    }\n  });\n\n  const onSubmit = (event) =>{\n    event.preventDefault()\n\n    if (!Object.values(state['datasetCheckbox']).some((e) => e)) {\n      setIsError(true)\n      setErrorMsg(\"At least one dataset must be selected.\")\n      return\n    }\n\n    setIsRunning(true)\n    fetch('query_datasets',{\n        method: \"POST\",\n        body: JSON.stringify(state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    }).then(res => res.json())\n      .then(res => {\n      var link = document.createElement(\"a\");\n      link.setAttribute('download', res['filename']);\n      link.href = \"/static/exports/\" + res['filename'];\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setIsRunning(false)\n    }).catch(e => {\n      setIsRunning(false)\n      setIsError(true)\n      setErrorMsg(\"Server error occurred. Check logs.\")\n    });\n  }\n\n  const handleCheckboxChange = (event) => {\n    setState(prevState => ({\n      ...prevState,\n      datasetCheckbox: {...state.datasetCheckbox, [event.target.name]: event.target.checked }\n    }));\n  };\n\n  function handleExperimentSelectionChange(value) {\n    setState(prevState => ({\n      ...prevState,\n      experimentSelection: value\n    }));\n  };\n\n  const runningFeedback = isRunning ? <CircularProgress color=\"white\" size={24}/> : \"Download\"\n  const errorFeedbackOrDefault = isError ? errorMsg : \"Querying large tables may take up to a minute or so.\"\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h1\">\n            <Box fontWeight=\"fontWeightBold\">\n              Download Experiment Data\n            </Box>\n          </Typography>\n        </div>\n\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <form>\n            <Grid container spacing={1}>\n              <Grid item xs={12} md={12}>\n                <ExperimentSelection\n                experimentSelection={state.experimentSelection}\n                handleChange={handleExperimentSelectionChange}\n                />\n              </Grid>\n              <Grid item xs={12} md={12}>\n                <CheckboxesGroup\n                isChecked={state.datasetCheckbox}\n                handleChange={handleCheckboxChange}\n                />\n              </Grid>\n\n              <Grid item xs={0}/>\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onSubmit}\n                  style={{width: \"120px\", marginLeft: 24}}\n                >\n                  {runningFeedback}\n                </Button>\n                <p style={{marginLeft: 24}}>{errorFeedbackOrDefault}</p>\n\n              </Grid>\n              <Grid item xs={12}/>\n            </Grid>\n          </form>\n        </CardContent>\n      </Card>\n  </React.Fragment>\n  )\n}\n\n\nfunction DownloadData() {\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12}><Header /></Grid>\n          <Grid item xs={12} />\n          <Grid item xs={12} />\n\n          <Grid item md={2} xs={1}/>\n          <Grid item md={8} xs={12}>\n            <DownloadDataFormContainer/>\n          </Grid>\n          <Grid item md={2} xs={1}/>\n        </Grid>\n    )\n}\n\nexport default DownloadData;\n\n","\nexport function parseINIString(data){\n    var regex = {\n        section: /^\\s*\\[\\s*([^\\]]*)\\s*\\]\\s*$/,\n        param: /^\\s*([^=]+?)\\s*=\\s*(.*?)\\s*$/,\n        comment: /^\\s*;.*$/\n    };\n    var value = {};\n    var lines = data.split(/[\\r\\n]+/);\n    var section = null;\n    lines.forEach(function(line){\n        if(regex.comment.test(line)){\n            return;\n        }else if(regex.param.test(line)){\n            var match = line.match(regex.param);\n            if(section){\n                value[section][match[1]] = match[2];\n            }else{\n                value[match[1]] = match[2];\n            }\n        }else if(regex.section.test(line)){\n            var match = line.match(regex.section);\n            value[match[1]] = {};\n            section = match[1];\n        }else if(line.length === 0 && section){\n            section = null;\n        };\n    });\n    return value;\n}","import React, { useState, useEffect } from \"react\";\n\nimport { Client, Message } from \"paho-mqtt\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PioreactorIcon from \"./PioreactorIcon\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldCompact: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n    width: \"30ch\",\n  },\n  formControl: {\n    marginTop: theme.spacing(2)\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n}));\n\nfunction SilentForm(props){\n  const classes = useStyles();\n  const defaults = {duration: 60}\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [])\n\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n\n  return (\n      <TextField\n        size=\"small\"\n        id=\"duration\"\n        label=\"Duration between events\"\n        defaultValue={defaults.duration}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n        }}\n        variant=\"outlined\"\n        onChange={onSettingsChange}\n        className={classes.textFieldCompact}\n      />\n)}\n\nfunction PIDTurbidostatForm(props){\n  const classes = useStyles();\n  const defaults = {duration: 30, volume: 0.75, target_od: 1.5}\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [])\n\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: parseFloat(e.target.value)})\n  }\n\n  return (\n      <div>\n        <TextField\n          size=\"small\"\n          id=\"duration\"\n          defaultValue={defaults.duration}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n          label=\"Duration between events\"\n        />\n        <TextField\n          size=\"small\"\n          id=\"volume\"\n          label=\"Max volume\"\n          defaultValue={defaults.volume}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n        <TextField\n          size=\"small\"\n          id=\"target_od\"\n          label=\"Target OD\"\n          defaultValue={defaults.target_od}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">AU</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n    </div>\n)}\n\nfunction PIDMorbidostatForm(props){\n  const classes = useStyles();\n  const defaults = {duration: 60, target_growth_rate: 0.1, target_od: 1.5}\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [])\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n\n  return (\n      <div>\n        <TextField\n          size=\"small\"\n          id=\"duration\"\n          label=\"Duration between events\"\n          defaultValue={defaults.duration}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n        <TextField\n          size=\"small\"\n          id=\"target_od\"\n          label=\"Target OD\"\n          defaultValue={defaults.target_od}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">AU</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n        <TextField\n          size=\"small\"\n          id=\"target_growth_rate\"\n          label=\"Target growth rate\"\n          defaultValue={defaults.target_growth_rate}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">h⁻¹</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n    </div>\n)}\n\n\nfunction ChemostatForm(props){\n  const classes = useStyles();\n  const defaults = {duration: 20, volume: 0.5}\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [])\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n\n  return (\n      <div>\n        <TextField\n          size=\"small\"\n          id=\"duration\"\n          label=\"Duration between events\"\n          defaultValue={defaults.duration}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n        <TextField\n          size=\"small\"\n          id=\"volume\"\n          label=\"Volume\"\n          defaultValue={defaults.volume}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n          }}\n          variant=\"outlined\"\n          onChange={onSettingsChange}\n          className={classes.textFieldCompact}\n        />\n    </div>\n)}\n\n\n\nfunction ButtonChangeDosingDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [algoSettings, setAlgoSettings] = useState({dosing_automation: \"silent\"})\n  const [isClicked, setIsClicked] = useState(false)\n  const [client, setClient] = useState(null)\n\n  const algos = [\n    {name: \"Silent\", key: \"silent\"},\n    {name: \"Chemostat\", key: \"chemostat\"},\n    {name: \"PID Morbidostat\",  key: \"pid_morbidostat\"},\n    {name: \"PID Turbidostat\",  key: \"pid_turbidostat\"},\n  ]\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    if (!props.config['network.topology']){\n      return\n    }\n\n    if (props.config.remote && props.config.remote.ws_url) {\n      var client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_ButtonChangeDosingDialog\" + Math.random()\n      )}\n    else {\n      var client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_ButtonChangeDosingDialog\" + Math.random()\n      );\n    }\n\n    client.connect({timeout: 180});\n    setClient(client)\n  },[props.config])\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAlgoSelectionChange = (e) => {\n    setAlgoSettings({dosing_automation: e.target.value})\n  }\n\n  const updateFromChild = (setting) => {\n    setAlgoSettings(prevState => ({...prevState, ...setting}))\n  }\n\n  const switchToForm = () => {\n    switch(algoSettings.dosing_automation) {\n      case \"silent\":\n        return <SilentForm updateParent={updateFromChild}/>\n      case \"pid_turbidostat\":\n        return <PIDTurbidostatForm updateParent={updateFromChild}/>\n      case \"pid_morbidostat\":\n        return <PIDMorbidostatForm updateParent={updateFromChild}/>\n      case \"chemostat\":\n        return <ChemostatForm updateParent={updateFromChild}/>\n    }\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setIsClicked(true)\n    var message = new Message(JSON.stringify(algoSettings));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      \"dosing_control\",\n      \"dosing_automation\",\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    try{\n      client.publish(message);\n    }\n    catch (e){\n      console.log(e)\n    }\n    setOpen(false);\n  }\n  return (\n    <div>\n    <Button\n      style={{marginTop: \"10px\"}}\n      size=\"small\"\n      color=\"primary\"\n      disabled={!props.currentDosingautomation}\n      onClick={handleClickOpen}\n    >\n      Change dosing automation\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {height: \"100%\"}}}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {props.title || ((props.config['ui.overview.rename'] && props.config['ui.overview.rename'][props.unit]) ? `${props.config['ui.overview.rename'][props.unit]} (${props.unit})` : `${props.unit}`)}\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          Dosing automation\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          Dosing automations control when and how much media to add to the Pioreactor. The settings below can be changed later. Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/Dosing-automations\">dosing automations</a>.\n        </Typography>\n\n        <form>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">automation</FormLabel>\n            <Select\n              native\n              value={algoSettings.mode}\n              onChange={handleAlgoSelectionChange}\n              style={{maxWidth: \"200px\"}}\n            >\n              {algos.map((v) => {\n                return <option id={v.key} value={v.key} key={\"change-io\" + v.key}>{v.name}</option>\n                }\n              )}\n            </Select>\n            {switchToForm()}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color={isClicked ? \"default\" : \"primary\" }\n              onClick={onSubmit}\n              style={{width: \"120px\", marginTop: \"20px\"}}\n            >\n              Submit\n            </Button>\n          </FormControl>\n        </form>\n\n\n      </DialogContent>\n    </Dialog>\n    </div>\n)}\n\n\nexport default ButtonChangeDosingDialog;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Client, Message } from \"paho-mqtt\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PioreactorIcon from \"./PioreactorIcon\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  textFieldCompact: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n    width: \"30ch\",\n  },\n  formControl: {\n    marginTop: theme.spacing(2)\n  },\n  unitTitle: {\n    fontSize: 17,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n}));\n\nfunction SilentForm(props){\n  const classes = useStyles();\n  const defaults = {duration: 60}\n\n  useEffect(() => {\n    props.updateParent(defaults)\n  }, [])\n\n\n  const onSettingsChange = (e) => {\n    props.updateParent({[e.target.id]: e.target.value})\n  }\n\n  return (\n      <TextField\n        size=\"small\"\n        id=\"duration\"\n        label=\"Duration between events\"\n        defaultValue={defaults.duration}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n        }}\n        variant=\"outlined\"\n        onChange={onSettingsChange}\n        className={classes.textFieldCompact}\n      />\n)}\n\n\nfunction ButtonChangeLEDDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [algoSettings, setAlgoSettings] = useState({led_automation: \"silent\"})\n  const [isClicked, setIsClicked] = useState(false)\n  const [client, setClient] = useState(null)\n\n  const algos = [\n    {name: \"Silent\", key: \"silent\"},\n  ]\n\n  useEffect(() => {\n    // MQTT - client ids should be unique\n    if (!props.config['network.topology']){\n      return\n    }\n\n    if (props.config.remote && props.config.remote.ws_url) {\n      var client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_ButtonChangeLEDDialog\" + Math.random()\n      )}\n    else {\n      var client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_ButtonChangeLEDDialog\" + Math.random()\n      );\n    }\n\n    client.connect({timeout: 180});\n    setClient(client)\n  },[props.config])\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAlgoSelectionChange = (e) => {\n    setAlgoSettings({led_automation: e.target.value})\n  }\n\n  const updateFromChild = (setting) => {\n    setAlgoSettings(prevState => ({...prevState, ...setting}))\n  }\n\n  const switchToForm = () => {\n    switch(algoSettings.led_automation) {\n      case \"silent\":\n        return <SilentForm updateParent={updateFromChild}/>\n    }\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setIsClicked(true)\n    var message = new Message(JSON.stringify(algoSettings));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      \"led_control\",\n      \"led_automation\",\n      \"set\",\n    ].join(\"/\");\n    message.qos = 2;\n    try{\n      client.publish(message);\n    }\n    catch (e){\n      console.log(e)\n    }\n    setOpen(false);\n  }\n  return (\n    <div>\n    <Button\n      style={{marginTop: \"10px\"}}\n      size=\"small\"\n      color=\"primary\"\n      disabled={!props.currentLEDautomation}\n      onClick={handleClickOpen}\n    >\n      Change LED automation\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" PaperProps={{style: {height: \"100%\"}}}>\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {props.title || ((props.config['ui.overview.rename'] && props.config['ui.overview.rename'][props.unit]) ? `${props.config['ui.overview.rename'][props.unit]} (${props.unit})` : `${props.unit}`)}\n        </Typography>\n        <Typography className={classes.unitTitleDialog}>\n          LED automation\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\n          LED automations control when and how much media to add to the Pioreactor. The settings below can be changed later. Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/LED-automations\">led automations</a>.\n        </Typography>\n\n        <form>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">automation</FormLabel>\n            <Select\n              native\n              value={algoSettings.mode}\n              onChange={handleAlgoSelectionChange}\n              style={{maxWidth: \"200px\"}}\n            >\n              {algos.map((v) => {\n                return <option id={v.key} value={v.key} key={\"change-io\" + v.key}>{v.name}</option>\n                }\n              )}\n            </Select>\n            {switchToForm()}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color={isClicked ? \"default\" : \"primary\" }\n              onClick={onSubmit}\n              style={{width: \"120px\", marginTop: \"20px\"}}\n            >\n              Submit\n            </Button>\n          </FormControl>\n        </form>\n\n\n      </DialogContent>\n    </Dialog>\n    </div>\n)}\n\n\nexport default ButtonChangeLEDDialog;\n","import React, {useState} from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n  },\n  actionForm: {\n    padding: \"20px 0px 0px 0px\",\n  }\n});\n\n\nconst actionToAct = {\n  \"remove_waste\": \"Removing waste\",\n  \"add_media\": \"Adding media\",\n  \"add_alt_media\": \"Adding alt. media\",\n\n}\n\nexport default function ActionPumpForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [mL, setML] = useState(EMPTYSTATE);\n  const [duration, setDuration] = useState(EMPTYSTATE);\n  const [isMLDisabled, setIsMLDisabled] = useState(false);\n  const [isDurationDisabled, setIsDurationDisabled] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (mL !== EMPTYSTATE || duration !== EMPTYSTATE) {\n      const params = mL !== \"\" ? { ml: mL, source_of_event: \"UI\"} : { duration: duration, source_of_event: \"UI\"};\n      fetch(\n        \"/run/\" +\n          props.action +\n          \"/\" +\n          props.unit +\n          \"?\" +\n          new URLSearchParams(params)\n      );\n      setOpenSnackbar(true);\n    }\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false );\n  };\n\n  function handleMLChange(e) {\n    setML(e.target.value);\n    setIsDurationDisabled(true);\n    if (e.target.value === EMPTYSTATE) {\n      setIsDurationDisabled(false);\n    }\n  }\n\n  function handleDurationChange(e) {\n    setDuration(e.target.value);\n    setIsMLDisabled(true);\n    if (e.target.value === EMPTYSTATE) {\n      setIsMLDisabled(false);\n    }\n  }\n\n  return (\n    <form id={props.action} className={classes.actionForm}>\n      <TextField\n        name=\"mL\"\n        value={mL}\n        size=\"small\"\n        id={props.action + \"_mL\"}\n        label=\"mL\"\n        variant=\"outlined\"\n        disabled={isMLDisabled}\n        onChange={handleMLChange}\n        className={classes.actionTextField}\n      />\n      <TextField\n        name=\"duration\"\n        value={duration}\n        size=\"small\"\n        id={props.action + \"_duration\"}\n        label=\"seconds\"\n        variant=\"outlined\"\n        disabled={isDurationDisabled}\n        onChange={handleDurationChange}\n        className={classes.actionTextField}\n      />\n      <br />\n      <br />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        onClick={onSubmit}\n      >\n        {props.action.replace(/_/g, \" \")}\n      </Button>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={actionToAct[props.action] + (duration !== EMPTYSTATE ? (\" for \" +  duration + \" seconds.\") : (\" until \" + mL + \"mL.\"))}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.action}\n      />\n    </form>\n  );\n}","import React, {useState} from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n\nconst useStyles = makeStyles({\n  actionTextField: {\n    padding: \"0px 10px 0px 0px\",\n  },\n  actionForm: {\n    padding: \"10px 0px 0px 0px\",\n  }\n});\n\n\n\nexport default function ActionLEDForm(props) {\n  const EMPTYSTATE = \"\";\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [intensity, setIntensity] = useState(EMPTYSTATE);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (intensity !== EMPTYSTATE) {\n      // TODO: this should also fire an mqtt event to set it in LEDAlgorithm, in case that is running\n      const params = { intensity: intensity, channel: props.channel, source_of_event: \"UI\"}\n      fetch(\n        \"/run/\" +\n          \"led_intensity\" +\n          \"/\" +\n          props.unit +\n          \"?\" +\n          new URLSearchParams(params)\n      );\n      setOpenSnackbar(true);\n    }\n  }\n\n\n  function handleChange(e) {\n    setIntensity(e.target.value);\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n\n  return (\n    <form id={props.action} className={classes.actionForm}>\n      <TextField\n        name=\"intensity\"\n        value={intensity}\n        size=\"small\"\n        id={props.channel + \"_intensity_edit\"}\n        label=\"new intensity\"\n        variant=\"outlined\"\n        onChange={handleChange}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n        }}\n        className={classes.actionTextField}\n      />\n      <br />\n      <br />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\"\n        color=\"primary\"\n        onClick={onSubmit}\n      >\n      Submit\n      </Button>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        onClose={handleSnackbarClose}\n        message={`Updating Channel ${props.channel} to ${intensity}%.`}\n        autoHideDuration={7000}\n        key={\"snackbar\" + props.unit + props.channel}\n      />\n    </form>\n  );\n}","import clsx from 'clsx';\nimport { Client, Message } from \"paho-mqtt\";\n\nimport React, {useState, useEffect} from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Header from \"./components/Header\"\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Slider from '@material-ui/core/Slider';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FlareIcon from '@material-ui/icons/Flare';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport {parseINIString} from \"./utilities\"\nimport ButtonChangeDosingDialog from \"./components/ButtonChangeDosingDialog\"\nimport ButtonChangeLEDDialog from \"./components/ButtonChangeLEDDialog\"\nimport ActionDosingForm from \"./components/ActionDosingForm\"\nimport ActionLEDForm from \"./components/ActionLEDForm\"\nimport PioreactorIcon from \"./components/PioreactorIcon\"\nimport TactileButtonNotification from \"./components/TactileButtonNotification\";\n\n\nconst readyGreen = \"#4caf50\"\nconst disconnectedGrey = \"grey\"\nconst errorRed = \"#DE3618\"\n\nconst useStyles = makeStyles((theme) => ({\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n  pioreactorCard: {\n    marginTop: \"0px\",\n    marginBottom: \"20px\",\n  },\n  cardContent: {\n    padding: \"10px 20px 20px 20px\"\n  },\n  unitTitle: {\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    fontWeight: 500,\n  },\n  unitTitleDialog :{\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\",\n  },\n  suptitle: {\n    fontSize: \"13px\",\n    color: \"rgba(0, 0, 0, 0.60)\",\n  },\n  disabledText: {\n    color: \"rgba(0, 0, 0, 0.38)\",\n  },\n  textbox:{\n    width: \"112px\",\n  },\n  textboxLabel:{\n    width: \"100px\",\n  },\n  footnote: {\n    marginBottom: 0,\n    fontSize: 12,\n  },\n  textField: {\n    marginTop: \"15px\",\n    maxWidth: \"180px\",\n  },\n  textFieldWide: {\n    marginTop: \"15px\",\n    maxWidth: \"220px\",\n  },\n  textFieldCompact: {\n    marginTop: theme.spacing(3),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n    width: \"30ch\",\n  },\n  slider: {\n    width: \"70%\",\n    margin: \"40px auto 0px auto\",\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 10,\n  },\n}));\n\nfunction TabPanel(props) {\n  // move me\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n          <div>{children}</div>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n\nfunction UnitSettingDisplay(props) {\n  const classes = useStyles();\n  const stateDisplay = {\n    \"init\":          {display: \"Starting\", color: readyGreen},\n    \"ready\":         {display: \"On\", color: readyGreen},\n    \"sleeping\":      {display: \"Paused\", color: disconnectedGrey},\n    \"disconnected\":  {display: \"Off\", color: disconnectedGrey},\n    \"lost\":          {display: \"Lost\", color: errorRed},\n    \"NA\":            {display: \"Not available\", color: disconnectedGrey},\n  }\n  const value = props.value || \"\"\n  if (props.isStateSetting) {\n    if (!props.isUnitActive) {\n      return <div className={clsx({[classes.disabledText]: !props.isUnitActive})}> {stateDisplay[value].display} </div>;\n    } else {\n      var displaySettings = stateDisplay[value]\n      return (\n        <div style={{ color: displaySettings.color, fontWeight: 500}}>\n          {displaySettings.display}\n        </div>\n    )}\n  } else if (props.isLEDIntensity) {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>;\n    } else {\n      const unpacked = JSON.parse(value)\n      return(\n        <div style={{fontSize: \"13px\"}}>\n          <span style={{display:\"block\"}}>A: {unpacked[\"A\"]}% B: {unpacked[\"B\"]}% </span>\n          <span style={{display:\"block\"}}>C: {unpacked[\"C\"]}% D: {unpacked[\"D\"]}% </span>\n        </div>\n      )\n    }\n  } else {\n    if (!props.isUnitActive || value === \"—\" || value === \"\") {\n      return <div style={{ color: disconnectedGrey, fontSize: \"13px\"}}> {props.default} </div>;\n    } else {\n      return (\n        <div style={{ fontSize: \"13px\"}}>\n          {(typeof value === \"string\"\n            ? value\n            : +value.toFixed(props.precision)) +\n            (props.measurementUnit ? props.measurementUnit : \"\")}\n        </div>\n      );\n    }\n  }\n}\n\n\n\nfunction ButtonConfirmStopProcessDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const onConfirm = () => {\n    fetch(\"/stop\")\n    handleClose()\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button style={{textTransform: 'none', marginRight: \"10px\", float: \"right\"}} color=\"secondary\" onClick={handleClickOpen}>\n        <ClearIcon className={classes.textIcon}/> Stop all activity\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Stop all Pioreactor activity?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will stop all activies (stirring, dosing, optical density reading, etc.) in <b>all</b> Pioreactor units. Do you wish to stop all activities?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onConfirm} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\n\nfunction AddNewPioreactor(props){\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [isRunning, setIsRunning] = React.useState(false)\n  const [errorMsg, setErrorMsg] = React.useState(\"\")\n  const [isError, setIsError] = React.useState(\"\")\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n  const handleNameChange = evt => {\n    setName(evt.target.value)\n  }\n\n  const onSubmit = (event) =>{\n    event.preventDefault()\n    if (!name) {\n      setIsError(true)\n      setErrorMsg(\"Fill in the new name.\")\n      return\n    }\n    setIsError(false)\n    setIsRunning(true)\n    fetch('add_new_pioreactor',{\n        method: \"POST\",\n        body: JSON.stringify({newPioreactorName: name}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n    })\n    .then(response => {\n        if(!response.ok){\n          throw new Error('Something went wrong.');\n        }\n    })\n    .catch(error => {\n      setIsError(true)\n      setErrorMsg(\"Unable to complete installation. Check server logs.\")\n      setIsRunning(false)\n    });\n  }\n\n  const runningFeedback = isRunning ? <CircularProgress color=\"inherit\" size={24}/> : \"Install and connect\"\n\n  return (\n    <React.Fragment>\n    <Button onClick={handleClickOpen} style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n      <AddIcon className={classes.textIcon}/> Add new Pioreactor\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        <Typography className={classes.unitTitleDialog}>\n        Add new Pioreactor\n        </Typography>\n      </DialogTitle>\n      <DialogContent>\n      <p> To add a new Pioreactor, you'll need the following: </p>\n      <ul>\n        <li>A RaspberryPi, with power cord</li>\n        <li>A microSD card</li>\n        <li>A computer with internet access that can read & write to the microSD card</li>\n        <li>The Pioreactor hardware hat</li>\n      </ul>\n      <p> With that all ready, let's begin: </p>\n      <ol>\n        <li>Flash the Raspberry Pi OS Lite onto the microSD card. Here's a <a href=\"https://www.youtube.com/watch?v=J024soVgEeM\">short video</a> on how.</li>\n        <li>Remove the microSD card, and put it <b>back in</b>.</li>\n        <li>Onto the microSD card, create an empty file named <code>ssh</code>.</li>\n        <li>Also onto the microSD card, create a file named <code>wpa_supplicant.conf</code>, with the following contents:</li>\n        <pre style={{border: \"1px #b9b9b9 solid\", padding: \"5px 10px\", maxWidth: \"85%\"}}>\n{`country=CA # Your 2-digit country code, ex: US, GB, CA\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nnetwork={\n    ssid=\"your network name\"\n    psk=\"your network password\"\n    key_mgmt=WPA-PSK\n}`}\n       </pre>\n        <li>Unmount the microSD, insert it into the RaspberryPi, and attach the Pioreactor hat to the RaspberryPi.</li>\n        <li>Turn on the RaspberryPi by inserting the power cord.</li>\n      </ol>\n\n      <p>We're pretty much done at this point. Below, provide a unique name for your new Pioreactor (letters and digits only), and\n      we'll automatically install the required software and connect it to the other Pioreactors.\n      </p>\n\n      <p>It may take up to 5 minutes to install the software. When finished, the new Pioreactor\n      will show up on on this page. You don't need to stay on this page while it's installing.</p>\n\n      {isRunning? <p><b>Installation is occuring in the background. You may navigate away from this page. </b></p> : <p></p>}\n      {isError? <p><b>{errorMsg}</b></p> : <p></p>}\n\n      <div >\n        <TextField\n          size=\"small\"\n          id=\"new-pioreactor-name\"\n          label=\"Provide a name\"\n          variant=\"outlined\"\n          className={classes.textFieldWide}\n          onChange={handleNameChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <PioreactorIcon style={{fontSize: \"1.1em\"}}/>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{marginTop: \"15px\"}}\n        onClick={onSubmit}\n        type=\"submit\"\n      >\n        {runningFeedback}\n      </Button>\n\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={\"Installing new Pioreactor\"}\n      autoHideDuration={7000}\n      key={\"snackbar-add-new\"}\n    />\n    </React.Fragment>\n)}\n\n\n\nfunction PioreactorHeader(props) {\n\n  return (\n    <div>\n      <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n        <Typography variant=\"h5\" component=\"h1\">\n          <Box fontWeight=\"fontWeightBold\">\n            Pioreactors\n          </Box>\n        </Typography>\n        <div >\n          <SettingsActionsDialogAll unit={'$broadcast'} config={props.config} experiment={props.experiment}/>\n          <AddNewPioreactor config={props.config}/>\n          <ButtonConfirmStopProcessDialog/>\n        </div>\n      </div>\n      <Divider/>\n    </div>\n  )\n}\n\n\n\nfunction PatientButton(props) {\n  const [buttonText, setButtonText] = useState(props.buttonText)\n\n  useEffect(\n    () => {\n      setButtonText(props.buttonText)\n    }\n  , [props.buttonText])\n\n  function wrappingOnClick() {\n    function f() {\n      setButtonText(<CircularProgress color=\"inherit\" size={22}/>)\n      props.onClick()\n    }\n    return f\n  }\n\n  return (\n    <Button\n      disableElevation\n      style={{width: \"70px\", marginTop: \"5px\"}}\n      color={props.color}\n      variant={props.variant}\n      size=\"small\"\n      onClick={wrappingOnClick()}\n    >\n      {buttonText}\n    </Button>\n  )\n}\n\n\n\nfunction SettingsActionsDialog(props) {\n  const classes = useStyles();\n  const [defaultStirring, setDefaultStirring] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [client, setClient] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetch(\"/get_config/config_\" + props.unit + \".ini\")\n        .then((response) => {\n            if (response.ok) {\n              return response.text();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((config) => {\n          config = parseINIString(config);\n          setDefaultStirring(\n            config[\"stirring\"][\"duty_cycle_\" + props.unit]\n          );\n        })\n        .catch((error) => {})\n    }\n    if (!props.disabled) {\n      fetchData();\n    }\n  }, [props.disabled, props.unit]);\n\n\n  function setPioreactorJobState(job, state) {\n    return function sendMessage() {\n      var message = new Message(String(state));\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        props.experiment,\n        job,\n        \"$state\",\n        \"set\",\n      ].join(\"/\");\n      message.qos = 1;\n      try{\n        props.client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 750)\n      }\n    };\n  }\n\n  function startPioreactorJob(job_attr){\n    return function() {\n      fetch(\"/run/\" + job_attr + \"/\" + props.unit).then(res => {\n      })\n    }\n  }\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 1;\n    try{\n      props.client.publish(message);\n    }\n    catch (e) {\n      console.log(e)\n      props.client.connect({onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n  function setPioreactorJobAttrOnEnter(e) {\n    if (e.key === \"Enter\") {\n      setPioreactorJobAttr(e.target.id, e.target.value);\n      setSnackbarMessage(`Updated to ${e.target.value}.`)\n      setSnackbarOpen(true)\n    }\n  }\n\n  function setPioreactorStirring(e, value) {\n    setPioreactorJobAttr(\"stirring/duty_cycle\", value);\n  }\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setTabValue(0)\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n\n  function createUserButtonsBasedOnState(jobState, job){\n\n    switch (jobState){\n      case \"lost\":\n        return (<div>\n          <PatientButton\n            color=\"secondary\"\n            variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n            buttonText=\"Start\"\n          />\n          <PatientButton\n            color=\"secondary\"\n            onClick={setPioreactorJobState(job, \"disconnected\")}\n            buttonText=\"Stop\"\n          />\n        </div>)\n      case \"disconnected\":\n       return (<div>\n               <PatientButton\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={startPioreactorJob(job)}\n                buttonText=\"Start\"\n               />\n              </div>)\n      case \"init\":\n      case \"ready\":\n        return (<div>\n          <PatientButton\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={setPioreactorJobState(job, \"sleeping\")}\n            buttonText=\"Pause\"\n          />\n          <PatientButton\n            color=\"secondary\"\n            onClick={setPioreactorJobState(job, \"disconnected\")}\n            buttonText=\"Stop\"\n          />\n        </div>)\n      case \"sleeping\":\n        return (\n          <div>\n            <PatientButton\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={setPioreactorJobState(job, \"ready\")}\n              buttonText=\"Resume\"\n            />\n            <PatientButton\n              color=\"secondary\"\n              onClick={setPioreactorJobState(job, \"disconnected\")}\n              buttonText=\"Stop\"\n            />\n          </div>\n          )\n      default:\n        return(<div></div>)\n    }\n   }\n\n  const stirringButtons = createUserButtonsBasedOnState(props.stirringJobState, \"stirring\")\n  const odButtons = createUserButtonsBasedOnState(props.ODReadingJobState, \"od_reading\")\n  const grButtons = createUserButtonsBasedOnState(props.growthRateJobState, \"growth_rate_calculating\")\n  const dosingButtons = createUserButtonsBasedOnState(props.dosingControlJobState, \"dosing_control\")\n  const ledButtons = createUserButtonsBasedOnState(props.ledControlJobState, \"led_control\")\n  const invertedLEDMap = Object.fromEntries(Object.entries(props.config['leds']).map(([k, v]) => [v, k]))\n\n  return (\n    <div>\n    <Button style={{textTransform: 'none', float: \"right\" }} disabled={props.disabled} onClick={handleClickOpen} color=\"primary\">\n      <EditIcon color={props.disabled ? \"disabled\" : \"primary\"} className={classes.textIcon}/> Edit\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          <PioreactorIcon style={{verticalAlign: \"middle\", fontSize: \"1.2em\"}}/> {(props.config['ui.rename'] &&  props.config['ui.rename'][props.unit]) ? `${props.config['ui.rename'][props.unit]} / ${props.unit}` : `${props.unit}`}\n        </Typography>\n      <Tabs\n        value={tabValue}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        >\n        <Tab label=\"Activities\"/>\n        <Tab label=\"Settings\"/>\n        <Tab label=\"Dosing\"/>\n        <Tab label=\"LEDs\"/>\n      </Tabs>\n      </DialogTitle>\n      <DialogContent>\n        <TabPanel value={tabValue} index={2}>\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the media pump{props.isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_media\" unit={props.unit} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the alternative media pump{props.isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set\n            volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_alt_media\" unit={props.unit} />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the waste pump{props.isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"remove_waste\" unit={props.unit} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={3}>\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(invertedLEDMap['A']) ? \"Channel A\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(invertedLEDMap['A']) ? (invertedLEDMap['A'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel A\" }\n          </Typography>\n          <ActionLEDForm channel=\"A\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(invertedLEDMap['B']) ? \"Channel B\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(invertedLEDMap['B']) ? (invertedLEDMap['B'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel B\" }\n          </Typography>\n          <ActionLEDForm channel=\"B\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(invertedLEDMap['C']) ? \"Channel C\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(invertedLEDMap['C']) ? (invertedLEDMap['C'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel C\" }\n          </Typography>\n\n          <ActionLEDForm channel=\"C\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(invertedLEDMap['D']) ? \"Channel D\" : \"\"}\n          </Typography>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            {(invertedLEDMap['D']) ? (invertedLEDMap['D'].replace(\"_\", \" \").replace(\"led\", \"LED\")) : \"Channel D\" }\n          </Typography>\n          <ActionLEDForm channel=\"D\" unit={props.unit} />\n\n          <Divider className={classes.divider} />\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <Typography  gutterBottom>\n            Stirring speed\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Modify the stirring speed (arbitrary units). This will effect the\n            optical density reading. Too low and the fan may completely stop.\n          </Typography>\n          <div className={classes.slider}>\n            <Slider\n              defaultValue={parseInt(props.stirringDC)}\n              aria-labelledby=\"discrete-slider-custom\"\n              step={1}\n              valueLabelDisplay=\"on\"\n              id={\"stirring/duty_cycle_\" + props.unit}\n              key={\"stirring/duty_cycle_\" + props.unit}\n              onChangeCommitted={setPioreactorStirring}\n              marks={[\n                { value: 0, label: \"0\", key: \"slider-0\" },\n                { value: defaultStirring, label: \"Default: \" + defaultStirring, key: \"slider-default\"},\n                { value: 100, label: \"100\", key: \"slider-100\" },\n              ]}\n            />\n          </div>\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Volume / dosing\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the volume per dilution. Typical values are between 0.0mL and\n            1.0mL.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"dosing_automation/volume\"\n            label=\"Volume / dosing\"\n            defaultValue={props.volume}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobAttrOnEnter}\n            className={classes.textFieldWide}\n          />\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Target OD\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the target optical density. Typical values are between 1.0 and\n            2.5 (arbitrary units)\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"dosing_automation/target_od\"\n            label=\"Target optical density\"\n            defaultValue={props.targetOD}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">AU</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobAttrOnEnter}\n            className={classes.textFieldWide}\n          />\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Duration between dosing events\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change how long to wait between dilutions. Typically between 5 and 90 minutes. Changing this will immediately trigger\n            a dosing event.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"dosing_automation/duration\"\n            label=\"Duration\"\n            defaultValue={props.duration}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobAttrOnEnter}\n            className={classes.textFieldWide}\n          />\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Target growth rate\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the target hourly growth rate - only applicable in{\" \"}\n            <code>morbidostat</code> mode. Typical values are between 0.05h⁻¹ and\n            0.4h⁻¹.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"dosing_automation/target_growth_rate\"\n            label=\"Target growth rate\"\n            defaultValue={props.targetGrowthRate}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">h⁻¹</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobAttrOnEnter}\n            className={classes.textFieldWide}\n          />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Dosing automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            {props.dosingControlJobState !== \"disconnected\" &&\n              <React.Fragment>\n              Currently running dosing automation <code>{props.dosingautomation}</code>.\n              Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/dosing-automations\">dosing automations</a>.\n              </React.Fragment>\n            }\n            {props.dosingControlJobState === \"disconnected\" &&\n\n              <React.Fragment>\n              You can change the dosing automation after starting the job.\n              </React.Fragment>\n            }\n          </Typography>\n\n          <ButtonChangeDosingDialog\n            unit={props.unit}\n            config={props.config}\n            experiment={props.experiment}\n            currentDosingautomation={props.dosingautomation}\n          />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            LED automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            {props.ledControlJobState !== \"disconnected\" &&\n              <React.Fragment>\n              Currently running LED automation <code>{props.ledautomation}</code>.\n              Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/led-automations\">LED automations</a>.\n              </React.Fragment>\n            }\n            {props.ledControlJobState === \"disconnected\" &&\n\n              <React.Fragment>\n              You can change the LED automation after starting the job.\n              </React.Fragment>\n            }\n          </Typography>\n\n          <ButtonChangeLEDDialog\n            unit={props.unit}\n            config={props.config}\n            experiment={props.experiment}\n            currentLEDautomation={props.ledautomation}\n          />\n          <Divider className={classes.divider} />\n        </TabPanel>\n        <TabPanel value={tabValue} index={0}>\n          <Typography gutterBottom>\n            Stirring\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Start, stop or pause the stirring on the Pioreactor. Stirring is needed for homogenous mixing.\n          </Typography>\n\n          {stirringButtons}\n\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Optical density\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Pausing the optical density readings will also pause\n            downstream activities that rely on optical density readings, like growth\n            rates.\n          </Typography>\n\n          {odButtons}\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Growth rate\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Pausing the growth rate calculating will also pause\n            downstream activities that rely on it, like dosing events.\n          </Typography>\n\n          {grButtons}\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Dosing control\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            {props.dosingControlJobState !== \"disconnected\" &&\n              <React.Fragment>\n              Currently running dosing automation <code>{props.dosingautomation}</code>.\n              Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/dosing-automations\">dosing automations</a>.\n              </React.Fragment>\n            }\n            {props.dosingControlJobState === \"disconnected\" &&\n\n              <React.Fragment>\n              Dosing events will initially start in <span className={\"underlineSpan\"} title=\"silent mode performs no dosing operations.\"><code>silent</code></span> mode, and can be changed after.\n              Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/dosing-automations\">dosing automations</a>.\n              </React.Fragment>\n            }\n          </Typography>\n\n            {dosingButtons}\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            LED control\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            {props.ledControlJobState !== \"disconnected\" &&\n              <React.Fragment>\n              Currently running LED automation <code>{props.dosingautomation}</code>.\n              Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/led-automations\">LED automations</a>.\n              </React.Fragment>\n            }\n            {props.ledControlJobState === \"disconnected\" &&\n\n              <React.Fragment>\n              LED controls will initially start in <span className={\"underlineSpan\"} title=\"silent mode performs no dosing operations.\"><code>silent</code></span> mode, and can be changed after.\n              Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/led-automations\">LED automations</a>.\n              </React.Fragment>\n            }\n          </Typography>\n\n            {ledButtons}\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Temperature controlling\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Us at Pioreactor are working on including per-reactor temperature control. Stay tuned!\n          </Typography>\n\n          <Divider className={classes.divider} />\n        </TabPanel>\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      key={\"snackbar\" + props.unit + \"settings\"}\n    />\n    </div>\n  );\n}\n\n\nfunction SettingsActionsDialogAll(props) {\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [client, setClient] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const hrJobs = {\n    \"od_reading\":  \"optical density reading\",\n    \"growth_rate_calculating\":  \"growth rate activity\",\n    \"stirring\":  \"stirring\",\n    \"dosing_automation\":  \"dosing control\",\n    \"dosing_control\":  \"dosing control\",\n    \"led_control\":  \"LED control\",\n    \"led_automation\":  \"LED control\",\n  }\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  useEffect(() => {\n    if (!props.config['network.topology']){\n      return\n    }\n    if (props.config.remote && props.config.remote.ws_url) {\n      var client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_SettingsActionsDialogAll\" + Math.random()\n      )}\n    else {\n      var client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_SettingsActionsDialogAll\" + Math.random()\n      );\n    }\n    client.connect({timeout: 180, reconnect: true});\n    setClient(client)\n  },[props.config])\n\n\n  function setPioreactorJobState(job, state) {\n    return function sendMessage() {\n      var message = new Message(String(state));\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        props.experiment,\n        job,\n        \"$state\",\n        \"set\",\n      ].join(\"/\");\n      message.qos = 1;\n      try{\n        client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 750)\n      }\n      finally {\n        const verbs = {\n          \"sleeping\":  \"Pausing\",\n          \"disconnected\":  \"Stopping\",\n          \"ready\":  \"Resuming\",\n        }\n        setSnackbarMessage(`${verbs[state]} ${hrJobs[job]} on all active Pioreactors`)\n        setSnackbarOpen(true)\n      }\n    };\n  }\n\n  function startPioreactorJob(job){\n    return function() {\n      setSnackbarMessage(`Starting ${hrJobs[job]} on all active Pioreactors`)\n      setSnackbarOpen(true)\n      fetch(\"/run/\" + job + \"/\" + props.unit)\n    }\n  }\n\n  function setPioreactorJobAttr(job_attr, value) {\n    var message = new Message(String(value));\n    message.destinationName = [\n      \"pioreactor\",\n      props.unit,\n      props.experiment,\n      job_attr,\n      \"set\",\n    ].join(\"/\");\n    message.qos = 1;\n    try{\n      setSnackbarOpen(true)\n    }\n    catch (e) {\n      console.log(e)\n      client.connect({onSuccess: () => setPioreactorJobAttr(job_attr, value)});\n    }\n  }\n\n  function setPioreactorJobAttrOnEnter(e) {\n    if (e.key === \"Enter\") {\n      setPioreactorJobAttr(e.target.id, e.target.value);\n      setSnackbarMessage(`Updated to ${e.target.value}.`)\n      setSnackbarOpen(true)\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setTabValue(0)\n    setOpen(false);\n  };\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false)\n  }\n\n\n  function createUserButtonsBasedOnState(job){\n    return (<div>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={startPioreactorJob(job)}\n        >\n          Start\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setPioreactorJobState(job, \"sleeping\")}\n        >\n          Pause\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"primary\"\n          onClick={setPioreactorJobState(job, \"ready\")}\n        >\n          Resume\n        </Button>\n        <Button\n          className={classes.jobButton}\n          disableElevation\n          color=\"secondary\"\n          onClick={setPioreactorJobState(job, \"disconnected\")}\n        >\n          Stop\n        </Button>\n      </div>\n  )}\n\n  const odButtons = createUserButtonsBasedOnState(\"od_reading\")\n  const grButtons = createUserButtonsBasedOnState(\"growth_rate_calculating\")\n  const dosingButtons = createUserButtonsBasedOnState(\"dosing_control\")\n  const ledButtons = createUserButtonsBasedOnState(\"led_control\")\n  const stirringButtons = createUserButtonsBasedOnState(\"stirring\")\n\n  return (\n    <React.Fragment>\n    <Button style={{textTransform: 'none', float: \"right\" }} onClick={handleClickOpen} color=\"primary\">\n      <EditIcon className={classes.textIcon}/> Edit all Pioreactors\n    </Button>\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>\n        <Typography className={classes.suptitle}>\n          All active Pioreactors\n        </Typography>\n      <Tabs\n        value={tabValue}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n      >\n        <Tab label=\"Activities\"/>\n        <Tab label=\"Settings\"/>\n        <Tab label=\"Dosing\"/>\n        <Tab label=\"LEDs\"/>\n      </Tabs>\n      </DialogTitle>\n      <DialogContent>\n\n        <TabPanel value={tabValue} index={3}>\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel A\n          </Typography>\n          <ActionLEDForm channel=\"A\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel B\n          </Typography>\n          <ActionLEDForm channel=\"B\" unit={props.unit} />\n          <Divider className={classes.divider} />\n\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel C\n          </Typography>\n          <ActionLEDForm channel=\"C\" unit={props.unit} />\n\n          <Divider className={classes.divider} />\n          <Typography style={{textTransform: \"capitalize\"}}>\n            Channel D\n          </Typography>\n          <ActionLEDForm channel=\"D\" unit={props.unit} />\n\n          <Divider className={classes.divider} />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          <Typography gutterBottom>\n            Volume / dosing\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the volume per dilution. Typical values are between 0.0mL and\n            1.0mL.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"dosing_automation/volume\"\n            label=\"Volume / dosing\"\n            defaultValue={props.volume}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">mL</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobAttrOnEnter}\n            className={classes.textFieldWide}\n          />\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Target OD\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the target optical density. Typical values are between 1.0 and\n            2.5 (arbitrary units)\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"dosing_automation/target_od\"\n            label=\"Target optical density\"\n            defaultValue={props.targetOD}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">AU</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobAttrOnEnter}\n            className={classes.textFieldWide}\n          />\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Duration between dosing events\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change how long to wait between dilutions. Typically between 15 and 90 minutes. Changing this will immediately trigger\n            a dosing event.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"dosing_automation/duration\"\n            label=\"Duration\"\n            defaultValue={props.duration}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobAttrOnEnter}\n            className={classes.textFieldWide}\n          />\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Target growth rate\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Change the target hourly growth rate - only applicable in{\" \"}\n            <code>morbidostat</code> mode. Typical values are between 0.05h⁻¹ and\n            0.4h⁻¹.\n          </Typography>\n          <TextField\n            size=\"small\"\n            id=\"dosing_automation/target_growth_rate\"\n            label=\"Target growth rate\"\n            defaultValue={props.targetGrowthRate}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">h⁻¹</InputAdornment>,\n            }}\n            variant=\"outlined\"\n            onKeyPress={setPioreactorJobAttrOnEnter}\n            className={classes.textFieldWide}\n          />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Dosing automation\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n              Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/.ex/dosing-automations\">dosing automations</a>.\n          </Typography>\n\n          <ButtonChangeDosingDialog\n            unit={props.unit}\n            config={props.config}\n            experiment={props.experiment}\n            currentDosingautomation={true}\n            title=\"All active Pioreactors\"\n          />\n          <Divider className={classes.divider} />\n\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={0}>\n          <Typography gutterBottom>\n            Stirring\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Start, stop or pause the stirring on all the Pioreactors. Stirring is needed for homogenous mixing.\n          </Typography>\n\n          {stirringButtons}\n\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Optical density\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Pausing the optical density readings will also pause\n            downstream activities that rely on optical density readings, like growth\n            rates.\n          </Typography>\n\n          {odButtons}\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Growth rate\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Pausing the growth rate calculating will also pause\n            downstream activities that rely on it, like dosing events.\n          </Typography>\n\n          {grButtons}\n\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Dosing control\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            Dosing events will initially start in <span className={\"underlineSpan\"} title=\"silent mode performs no IO operations.\"><code>silent</code></span> mode, and can be changed after.\n            Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/dosing-automations\">dosing automations</a>.\n          </Typography>\n\n            {dosingButtons}\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            LED control\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            LED control will initially start in <span className={\"underlineSpan\"} title=\"silent mode performs no IO operations.\"><code>silent</code></span> mode, and can be changed after.\n            Learn more about <a target=\"_blank\" href=\"https://github.com/Pioreactor/pioreactor/wiki/led-automations\">LED automations</a>.\n          </Typography>\n\n            {ledButtons}\n          <Divider className={classes.divider} />\n        </TabPanel>\n        <TabPanel value={tabValue} index={2}>\n          <Typography  gutterBottom>\n            Add media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the media pump{props.isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_media\" unit={props.unit} />\n          <Divider className={classes.divider} />\n          <Typography gutterBottom>\n            Add alternative media\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the alternative media pump{props.isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set\n            volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"add_alt_media\" unit={props.unit} />\n          <Divider className={classes.divider} />\n          <Typography  gutterBottom>\n            Remove waste\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\">\n            Run the waste pump{props.isPlural ? \"s\" : \"\"} for a set duration (seconds), or a set volume (mL).\n          </Typography>\n          <ActionDosingForm action=\"remove_waste\" unit={props.unit} />\n          <Divider className={classes.divider} />\n        </TabPanel>\n      </DialogContent>\n    </Dialog>\n    <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={snackbarOpen}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      key={\"snackbar\" + props.unit + \"settings\"}\n    />\n    </React.Fragment>\n  );\n}\n\n\nfunction ActiveUnits(props){\n  return (\n  <React.Fragment>\n    <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\", marginTop: \"15px\"}}>\n      <Typography variant=\"h5\" component=\"h2\">\n        <Box fontWeight=\"fontWeightRegular\">\n          Active Pioreactors\n        </Box>\n      </Typography>\n      <div >\n\n      </div>\n    </div>\n    {props.units.map(unit =>\n      <PioreactorCard isUnitActive={true} key={unit} unit={unit} config={props.config} experiment={props.experiment}/>\n  )}\n  </React.Fragment>\n)}\n\n\nfunction FlashLEDButton(props){\n  const classes = useStyles();\n\n  const [flashing, setFlashing] = useState(false)\n\n\n  const onClick = () => {\n    setFlashing(true)\n\n    const sendMessage = () => {\n      var message = new Message(\"1\");\n      message.destinationName = [\n        \"pioreactor\",\n        props.unit,\n        \"$experiment\",\n        \"monitor\",\n        \"flicker_led\",\n      ].join(\"/\");\n      message.qos = 0;\n      try{\n        props.client.publish(message);\n      }\n      catch (e){\n        console.log(e)\n        setTimeout(() => {sendMessage()}, 1000)\n      }\n    }\n\n    sendMessage()\n    setTimeout(() => {setFlashing(false)}, 3600 ) // .9 * 4\n  }\n\n  return (\n    <Button style={{textTransform: 'none', float: \"right\"}} className={clsx({[\"blink-led\"]: flashing})} disabled={props.disabled} onClick={onClick} color=\"primary\">\n      <FlareIcon color={props.disabled ? \"disabled\" : \"primary\"} className={classes.textIcon}/> <span >  Blink  </span>\n    </Button>\n)}\n\n\nfunction PioreactorCard(props){\n  const classes = useStyles();\n  const unit = props.unit\n  const isUnitActive = props.isUnitActive\n  const experiment = props.experiment\n\n  const [client, setClient] = useState(null)\n\n  const [stirringJobState, setStirringJobState] = useState(\"disconnected\");\n  const [ODReadingJobState, setODReadingJobState] = useState(\"disconnected\");\n  const [growthRateJobState, setGrowthRateJobState] = useState(\"disconnected\");\n  const [dosingControlJobState, setSosingControlJobState] = useState(\"disconnected\");\n  const [monitorJobState, setMonitorJobState] = useState(\"disconnected\");\n  const [temperatureControllingJobState, setTemperatureControllingJobState] = useState(\"disconnected\");\n  const [ledControlJobState, setLEDControllingJobState] = useState(\"disconnected\");\n  const [stirringDC, setStirringDC] = useState(0);\n  const [targetOD, setTargetOD] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [targetGrowthRate, setTargetGrowthRate] = useState(0);\n  const [volume, setVolume] = useState(0);\n  const [dosingautomation, setDosingautomation] = useState(null);\n  const [ledautomation, setLedautomation] = useState(null);\n  const [ledIntensity, setLEDIntensity] = useState(\"\");\n\n  const topicsToCallback = {\n    [[\"pioreactor\", unit, experiment, \"led_control/$state\"                  ].join(\"/\")]: setLEDControllingJobState,\n    [[\"pioreactor\", unit, experiment, \"stirring/$state\"                     ].join(\"/\")]: setStirringJobState,\n    [[\"pioreactor\", unit, experiment, \"od_reading/$state\"                   ].join(\"/\")]: setODReadingJobState,\n    [[\"pioreactor\", unit, experiment, \"dosing_control/$state\"               ].join(\"/\")]: setSosingControlJobState,\n    [[\"pioreactor\", unit, experiment, \"growth_rate_calculating/$state\"      ].join(\"/\")]: setGrowthRateJobState,\n    [[\"pioreactor\", unit, experiment, \"temperature_control/$state\"          ].join(\"/\")]: setTemperatureControllingJobState,\n    [[\"pioreactor\", unit, \"$experiment\", \"monitor/$state\"                   ].join(\"/\")]: setMonitorJobState,\n    [[\"pioreactor\", unit, experiment, \"stirring/duty_cycle\"                 ].join(\"/\")]: setStirringDC,\n    [[\"pioreactor\", unit, experiment, \"dosing_automation/target_od\"         ].join(\"/\")]: setTargetOD,\n    [[\"pioreactor\", unit, experiment, \"dosing_automation/duration\"          ].join(\"/\")]: setDuration,\n    [[\"pioreactor\", unit, experiment, \"dosing_automation/target_growth_rate\"].join(\"/\")]: setTargetGrowthRate,\n    [[\"pioreactor\", unit, experiment, \"dosing_automation/volume\"            ].join(\"/\")]: setVolume,\n    [[\"pioreactor\", unit, experiment, \"dosing_control/dosing_automation\"    ].join(\"/\")]: setDosingautomation,\n    [[\"pioreactor\", unit, experiment, \"led_control/led_automation\"          ].join(\"/\")]: setLedautomation,\n    [[\"pioreactor\", unit, experiment, \"leds/intensity\"                      ].join(\"/\")]: setLEDIntensity,\n  }\n\n\n  useEffect(() => {\n    const onConnect = () => {\n      for (const topic of Object.keys(topicsToCallback)) {\n        client.subscribe(topic);\n      }\n    }\n\n    const onMessageArrived = (message) => {\n      var parsedFloat = parseFloat(message.payloadString); // try to parse it as a float first\n      var payload = isNaN(parsedFloat) ? message.payloadString : parsedFloat\n      topicsToCallback[message.topic](payload)\n    }\n\n    if (!props.config['network.topology']){\n      return\n    }\n\n    if (!isUnitActive){\n      return\n    }\n\n    if (!experiment){\n      return\n    }\n\n    if (props.config.remote && props.config.remote.ws_url) {\n      var client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui\" + Math.random()\n      )}\n    else {\n      var client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui\" + Math.random()\n      );\n    }\n    client.onMessageArrived = onMessageArrived\n    client.connect({onSuccess: onConnect, reconnect: true});\n    setClient(client)\n  },[props.config, props.experiment])\n\n  const indicatorDotColor = (monitorJobState === \"disconnected\") ? disconnectedGrey : ((monitorJobState == \"lost\") ? errorRed : readyGreen)\n  const indicatorDotShadow = (monitorJobState === \"disconnected\") ? 0 : 6\n  const indicatorLabel = (monitorJobState === \"disconnected\") ? (isUnitActive ? \"Offline, need to power up\" : \"Offline, change inventory status in config.ini\") : ((monitorJobState == \"lost\") ? \"Lost, something went wrong...\" : \"Online\")\n\n  return (\n    <Card className={classes.pioreactorCard} id={unit}>\n\n      <CardContent className={classes.cardContent}>\n        <div className={\"fixme\"}>\n          <Typography className={clsx(classes.suptitle)} color=\"textSecondary\">\n            {(props.config['ui.rename'] && props.config['ui.rename'][unit]) ? unit : \"\"}\n          </Typography>\n          <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n            <div style={{display: \"flex\", justifyContent: \"left\"}}>\n              <Typography className={clsx(classes.unitTitle, {[classes.disabledText]: !isUnitActive})} gutterBottom>\n                <PioreactorIcon color={isUnitActive ? \"inherit\" : \"disabled\"} style={{verticalAlign: \"middle\"}}/>\n                {(props.config['ui.rename'] && props.config['ui.rename'][unit]) ? props.config['ui.rename'][unit] : unit }\n              </Typography>\n              <Tooltip title={indicatorLabel} placement=\"right\">\n                <div>\n                <div aria-label={indicatorLabel} class=\"indicator-dot\" style={{boxShadow: `0 0 ${indicatorDotShadow}px ${indicatorDotColor}, inset 0 0 12px  ${indicatorDotColor}`}}/>\n                </div>\n              </Tooltip>\n            </div>\n            <div style={{display: \"flex\", justifyContent: \"right\"}}>\n              <div>\n                <Button style={{textTransform: 'none', float: \"right\" }} disabled={!isUnitActive} color=\"primary\">\n                  <SettingsIcon color={!isUnitActive ? \"disabled\" : \"primary\"} className={classes.textIcon}/> Calibrate\n                </Button>\n              </div>\n              <div>\n                <FlashLEDButton client={client} disabled={!isUnitActive} config={props.config} unit={unit}/>\n              </div>\n              <SettingsActionsDialog\n                config={props.config}\n                client={client}\n                stirringJobState={stirringJobState}\n                ODReadingJobState={ODReadingJobState}\n                growthRateJobState={growthRateJobState}\n                dosingControlJobState={dosingControlJobState}\n                ledControlJobState={ledControlJobState}\n                temperatureControllingJobState={temperatureControllingJobState}\n                stirringDC={stirringDC}\n                targetGrowthRate={targetGrowthRate}\n                volume={volume}\n                duration={duration}\n                targetOD={targetOD}\n                dosingautomation={dosingautomation}\n                ledautomation={ledautomation}\n                experiment={experiment}\n                unit={unit}\n                disabled={!isUnitActive}\n              />\n            </div>\n          </div>\n        </div>\n\n\n      <div style={{display: \"flex\", margin: \"15px 20px 20px 0px\"}}>\n        <div className={classes.textboxLabel}>\n          <Typography variant=\"body2\" component=\"body1\">\n            <Box fontWeight=\"fontWeightBold\" className={clsx({[classes.disabledText]: !isUnitActive})}>\n              Activities:\n            </Box>\n          </Typography>\n        </div>\n\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Stirring\n          </Typography>\n          <UnitSettingDisplay\n            value={stirringJobState}\n            isUnitActive={isUnitActive}\n            default=\"disconnected\"\n            isStateSetting\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Optical density\n          </Typography>\n          <UnitSettingDisplay\n            value={ODReadingJobState}\n            isUnitActive={isUnitActive}\n            default=\"disconnected\"\n            isStateSetting\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Growth rate\n          </Typography>\n          <UnitSettingDisplay\n            value={growthRateJobState}\n            isUnitActive={isUnitActive}\n            default=\"disconnected\"\n            isStateSetting\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Dosing control\n          </Typography>\n          <UnitSettingDisplay\n            value={dosingControlJobState}\n            isUnitActive={isUnitActive}\n            default=\"disconnected\"\n            isStateSetting\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            LED control\n          </Typography>\n          <UnitSettingDisplay\n            value={ledControlJobState}\n            isUnitActive={isUnitActive}\n            default=\"disconnected\"\n            isStateSetting\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Temperature control\n          </Typography>\n          <UnitSettingDisplay\n            value={temperatureControllingJobState}\n            isUnitActive={isUnitActive}\n            default=\"NA\"\n            isStateSetting\n          />\n        </div>\n      </div>\n      <Divider/>\n\n\n      <div style={{display: \"flex\", margin: \"20px 20px 20px 0px\"}}>\n        <div className={classes.textboxLabel}>\n          <Typography variant=\"body2\" component=\"body1\">\n            <Box fontWeight=\"fontWeightBold\"  className={clsx({[classes.disabledText]: !isUnitActive})}>\n              Settings:\n            </Box>\n          </Typography>\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Stirring speed\n          </Typography>\n          <UnitSettingDisplay\n            value={stirringDC}\n            isUnitActive={isUnitActive}\n            default=\"—\"\n            className={classes.alignRight}\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Volume / dosing\n          </Typography>\n          <UnitSettingDisplay\n            precision={2}\n            measurementUnit=\"mL\"\n            value={volume}\n            isUnitActive={isUnitActive}\n            default=\"—\"\n            className={classes.alignRight}\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Target OD\n          </Typography>\n          <UnitSettingDisplay\n            precision={2}\n            value={targetOD}\n            isUnitActive={isUnitActive}\n            default={\"—\"}\n            className={classes.alignRight}\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Target growth rate\n          </Typography>\n          <UnitSettingDisplay\n            precision={2}\n            measurementUnit=\"h⁻¹\"\n            value={targetGrowthRate}\n            isUnitActive={isUnitActive}\n            default=\"—\"\n            className={classes.alignRight}\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Dosing automation\n          </Typography>\n          <UnitSettingDisplay\n            value={dosingautomation}\n            isUnitActive={isUnitActive}\n            default=\"—\"\n            className={classes.alignRight}\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            LED automation\n          </Typography>\n          <UnitSettingDisplay\n            value={ledautomation}\n            isUnitActive={isUnitActive}\n            default=\"—\"\n            className={classes.alignRight}\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            Time between dosing events\n          </Typography>\n          <UnitSettingDisplay\n            precision={0}\n            measurementUnit=\"m\"\n            value={duration}\n            isUnitActive={isUnitActive}\n            default=\"—\"\n            className={classes.alignRight}\n          />\n        </div>\n        <div className={classes.textbox}>\n          <Typography variant=\"body2\" style={{fontSize: \"0.85rem\"}} className={clsx({[classes.disabledText]: !isUnitActive})}>\n            LED intensity\n          </Typography>\n          <UnitSettingDisplay\n            value={ledIntensity}\n            isUnitActive={isUnitActive}\n            default=\"—\"\n            className={classes.alignRight}\n            isLEDIntensity\n          />\n        </div>\n      </div>\n\n\n      </CardContent>\n    </Card>\n)}\n\n\nfunction InactiveUnits(props){\n\n  return (\n  <React.Fragment>\n    <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"10px\", marginTop: \"15px\"}}>\n      <Typography variant=\"h5\" component=\"h2\">\n        <Box fontWeight=\"fontWeightRegular\">\n          Inactive Pioreactors\n        </Box>\n      </Typography>\n    </div>\n    {props.units.map(unit =>\n      <PioreactorCard isUnitActive={false} key={unit} unit={unit} config={props.config} experiment={props.experiment}/>\n  )}\n    </React.Fragment>\n)}\n\nfunction Pioreactors(props) {\n    const [experimentMetadata, setExperimentMetadata] = React.useState({})\n\n    React.useEffect(() => {\n      async function getLatestExperiment() {\n           await fetch(\"/get_latest_experiment\")\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            setExperimentMetadata(data)\n          });\n        }\n      getLatestExperiment()\n    }, [])\n\n    const entries = (a) => Object.entries(a)\n\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12}><Header /></Grid>\n          <Grid item xs={12} />\n          <Grid item xs={12} />\n\n          <Grid item md={1} xs={1}/>\n          <Grid item md={10} xs={12}>\n            <PioreactorHeader config={props.config} experiment={experimentMetadata.experiment}/>\n            <ActiveUnits experiment={experimentMetadata.experiment} config={props.config} units={props.config['network.inventory'] ? entries(props.config['network.inventory']).filter((v) => v[1] === \"1\").map((v) => v[0]) : [] }/>\n            <InactiveUnits experiment={experimentMetadata.experiment} config={props.config} units={props.config['network.inventory'] ? entries(props.config['network.inventory']).filter((v) => v[1] === \"0\").map((v) => v[0]) : [] }/>\n          </Grid>\n          <Grid item md={1} xs={1}/>\n          {props.config['ui.rename'] ? <TactileButtonNotification config={props.config}/> : null}\n        </Grid>\n    )\n}\n\nexport default Pioreactors;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  divInstructions: {\n    marginBottom: theme.spacing(3),\n  }\n}));\n\n\n\nfunction CycleLiquid(props) {\n  const classes = useStyles();\n  const liquid = props.liquid\n  const [isClicked, setIsClicked] = React.useState(false)\n\n  const onSubmit = () => {\n    fetch(\"/run/remove_waste/$broadcast?\" + new URLSearchParams({duration: 90, duty_cycle: 100}));\n    fetch(\"/run/add_media/$broadcast?\" + new URLSearchParams({duration: 50, duty_cycle: 25}));\n    fetch(\"/run/add_alt_media/$broadcast?\" + new URLSearchParams({duration: 50, duty_cycle: 25}));\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p>{props.additionalMsg}</p>\n      <p>Add <b>{liquid}</b> to the non-waste containers. We will cycle this solution through our system. Click the button below once the {liquid} is in place.</p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Cycle {liquid}</Button>\n    </div>\n    )\n}\n\n\nfunction MediaFlush(props) {\n  const classes = useStyles();\n  const isAlt = props.altMedia\n  const [isClicked, setIsClicked] = React.useState(false)\n\n  const onSubmit = () => {\n    fetch(\"/run/remove_waste/$broadcast?\" + new URLSearchParams({duration: 60, duty_cycle: 100}));\n    if (isAlt){\n      fetch(\"/run/add_alt_media/$broadcast?\" + new URLSearchParams({duration: 15, duty_cycle: 25}));\n    } else {\n      fetch(\"/run/add_media/$broadcast?\" + new URLSearchParams({duration: 15, duty_cycle: 25}));\n    }\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p>Next, we will prime the {isAlt ? \"alt-\" : \"\"}media tubes with our {isAlt ? \"alt-\" : \"\"}media.</p>\n      <p>Replace the container attached to the {isAlt ? \"alt-\" : \"\"}media outflow tubes with the sterlized {isAlt ? \"alt-\" : \"\"}media container. Remember to use proper sanitation techniques!</p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Run {isAlt ? \"alt-\" : \"\"}media and waste pumps</Button>\n    </div>\n    )\n}\n\nfunction AddFinalVolumeOfMedia(props) {\n  const classes = useStyles();\n  const [isClicked, setIsClicked] = React.useState(false)\n\n\n  const onSubmit = () => {\n    fetch(\"/run/add_media/$broadcast?\" + new URLSearchParams({ml: 12}));\n    setIsClicked(true)\n  }\n\n  return (\n    <div className={classes.divInstructions}>\n      <p> Finally, we will add fresh media to our vials </p>\n      <Button className={classes.button} variant=\"contained\" color={isClicked ? \"default\" : \"primary\" } onClick={onSubmit}>Add 12mL of media</Button>\n    </div>\n    )\n}\n\n\nfunction getSteps() {\n  return [\n    'Setup inflow and outflow tubes',\n    '10% bleach cycling',\n    '70% alcohol cycling',\n    'Distilled water cycling',\n    'Media preparation',\n    'Alt media preparation',\n    'Replace vials',\n    'Add initial media to vials'];\n}\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return `For each pioreactor unit, connect the media inflow, alt-media inflow, and waste out flow tubes to an empty\n      vial with hat. Connect the all the media outflow tubes to a single empty container, all the alt-media outflow tubes to a single empty container, and\n      all the waste inflow tubes to a single, empty, large container.`;\n    case 1:\n      return <CycleLiquid liquid={\"10% bleach solution\"}/>;\n    case 2:\n      return <CycleLiquid additionalMsg={\"Remove any excess bleach from the containers, and empty the waste container. Bleach and alcohol should not mix.\"} liquid={\"70% alcohol\"}/>;\n    case 3:\n      return <CycleLiquid liquid={\"distilled water\"}/>;\n    case 4:\n      return <MediaFlush />;\n    case 5:\n      return <MediaFlush altMedia={true}/>;\n    case 6:\n      return `Using proper sanitation techniques, replace the pioreactor vials - now full of water and media - with the empty-but-innocculated vials`;\n    case 7:\n      return <AddFinalVolumeOfMedia/>;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function VerticalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>All cleaning and preparation steps completed!</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}","import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Chart from \"./Chart\";\n\n\n\nfunction StartStirringButton(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const onClick = (e) => {\n    setIsClicked(true)\n    fetch(\"/run/stirring/$broadcast\").then(res => {\n      if (res.status === 200){\n        setOpenSnackbar(true);\n      }\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p> To get an accurate reading, we need to start start the stirring. This also provides gas transfer and keeps the cells in suspension.</p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start stirring </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={\"Stirring starting\"}\n      autoHideDuration={7000}\n      key={\"snackbarStirring\"}\n    />\n  </div>\n  )\n}\n\n\nfunction StartODReading(props){\n\n  const [isClicked, setIsClicked] = React.useState(false)\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const onClick = (e) => {\n    setIsClicked(true)\n    fetch(\"/run/od_reading/$broadcast\").then(res => {\n      if (res.status === 200){\n        setOpenSnackbar(true);\n      }\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p> Next, we will turn on the optical density reading. We also call this <em>OD readings</em>. This will provide us with a measure of cell density. After a minute or so, you should see the data in the chart below. </p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start OD readings </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={\"OD reading starting\"}\n      autoHideDuration={7000}\n      key={\"snackbarOD\"}\n    />\n  </div>\n  )\n}\n\n\nfunction StartSensors(props){\n\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={2}/>\n      <Grid item xs={10}><StartStirringButton/></Grid>\n      <Grid item xs={10}><StartODReading/></Grid>\n      <Grid item xs={12}>\n        <Chart\n          config={props.config}\n          isODReading={true}\n          fontScale={1.0}\n          interpolation=\"stepAfter\"\n          title=\"Raw 135° optical density\"\n          topic=\"od_raw/135/+\"\n          yAxisLabel=\"Voltage\"\n          experiment=\"+\"\n        />\n      </Grid>\n      <Grid item xs={2}/>\n    </Grid>\n)}\n\n\nexport default StartSensors;\n","\nimport React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Chart from \"./Chart\";\n\n\n\nfunction StartGrowthRate(props){\n\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\n  const [isClicked, setIsClicked] = React.useState(false);\n\n  const onClick = (e) => {\n    fetch(\"/run/growth_rate_calculating/$broadcast\").then(r => {\n      setSnackbarMessage(\"Growth rate calculating starting\")\n      setOpenSnackbar(true)\n      setIsClicked(true)\n    })\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return(\n    <div>\n      <p>Because of the varying strength & quality of the electronics, not all readings look the same - even for the same density of cells. So we compute a baseline measurement from the OD readings, and measure all growth against that baseline. </p>\n      <p>From the (normalized) OD readings, we can calculate the <em>implied hourly growth rate</em>, which is our measure of growth. </p>\n      <p>Let's start the growth rate calculations. This first computes the normalization constants, <b>which can take up to two minutes to complete</b>. After that, the graph below should start to populate.</p>\n      <Button variant=\"contained\"  color=\"primary\" disabled={isClicked ? true : false } onClick={onClick}> Start growth rate calculations </Button>\n      <Snackbar\n      anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n      open={openSnackbar}\n      onClose={handleSnackbarClose}\n      message={snackbarMessage}\n      autoHideDuration={7000}\n      key={\"snackbarGR\"}\n      />\n  </div>\n  )\n}\n\n\n\n\nfunction StartCalculations(props){\n  const [experiment, setExperiment] = React.useState(\"null_exp\")\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_latest_experiment\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setExperiment(data.experiment)\n        });\n      }\n      getData()\n  }, [])\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid item xs={2}/>\n      <Grid item xs={10}><StartGrowthRate experiment={experiment}/></Grid>\n      <Grid item xs={12}>\n      <Chart\n        config={props.config}\n        interpolation=\"stepAfter\"\n        fontScale={1}\n        title=\"Implied growth rate\"\n        topic=\"growth_rate\"\n        yAxisLabel=\"Growth rate, h⁻¹\"\n        experiment={experiment}\n      />\n      </Grid>\n      <Grid item xs={2}/>\n    </Grid>\n)}\n\n\nexport default StartCalculations;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Client, Message } from \"paho-mqtt\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport {Typography} from '@material-ui/core';\nimport Button from \"@material-ui/core/Button\";\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Header from \"./components/Header\"\nimport CleaningScript from \"./components/CleaningScript\"\nimport StartSensors from \"./components/StartSensors\"\nimport StartCalculations from \"./components/StartCalculations\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"60%\"\n  },\n  textField:{\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  halfTextField: {\n    width: \"95%\"\n  },\n}));\n\n\n\n\nfunction ExperimentSummaryForm(props) {\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [formError, setFormError] = React.useState(false);\n  const [expName, setExpName] = React.useState(\"\");\n  const [timestamp, setTimestamp] = React.useState(moment().format(\"YYYY-MM-DDTHH:mm:ss\"));\n  const [description, setDescription] = React.useState(\"\");\n\n\n  function publishExpNameToMQTT(){\n\n    function onConnect() {\n      var message = new Message(expName);\n      message.destinationName = \"pioreactor/latest_experiment\"\n      message.qos = 1;\n      message.retained = true;\n      client.publish(message);\n    }\n\n    if (props.config.remote && props.config.remote.ws_url) {\n      var client = new Client(\n        `ws://${props.config.remote.ws_url}/`,\n        \"webui_publishExpNameToMQTT\" + Math.random()\n      )}\n    else {\n      var client = new Client(\n        `${props.config['network.topology']['leader_address']}`, 9001,\n        \"webui_publishExpNameToMQTT\" + Math.random()\n      );\n    }\n    client.connect({ onSuccess: onConnect, timeout: 180});\n\n  }\n\n  function killExistingJobs(){\n     fetch('/stop')\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    if (expName === \"\"){\n      setFormError(true)\n      return\n    }\n    fetch('create_experiment',{\n        method: \"POST\",\n        body: JSON.stringify({experiment : expName, timestamp: timestamp, description: description}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200){\n          setFormError(false);\n          setOpenSnackbar(true);\n          killExistingJobs()\n          publishExpNameToMQTT()\n        }\n        else{\n          setFormError(true);\n        }\n      }\n     )\n  }\n\n  const onExpNameChange = (e) => {\n    setExpName(e.target.value)\n  }\n  const onDescChange = (e) => {\n    setDescription(e.target.value)\n  }\n  const onTimestampChange = (e) => {\n    setTimestamp(e.target.value)\n  }\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <div className={classes.root}>\n        <FormGroup>\n        <Grid container spacing={1}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              error={formError}\n              id=\"expName\"\n              label=\"Experiment name\"\n              required className={`${classes.halfTextField} ${classes.textField}`}\n              onChange={onExpNameChange}\n              />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <TextField\n              id=\"datetime\"\n              label=\"Start time\"\n              type=\"datetime-local\"\n              defaultValue={timestamp}\n              className={`${classes.halfTextField} ${classes.textField}`}\n              onChange={onTimestampChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <TextField\n              label=\"Description\"\n              rowsMax={4}\n              placeholder={\"Add a description: what microbe are you using? What is the media composition? This description can always be changed later.\"}\n              multiline\n              className={classes.textField}\n              onChange={onDescChange}\n              fullWidth={true}\n            />\n          </Grid>\n          <Grid item xs={12} md={10}/>\n          <Grid item xs={12} md={2}>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}> Create </Button>\n            <Snackbar\n              anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n              open={openSnackbar}\n              onClose={handleSnackbarClose}\n              message={\"Created new experiment\"}\n              autoHideDuration={7000}\n              key={\"snackbar\" + props.unit + props.action}\n            />\n          </Grid>\n        </Grid>\n        </FormGroup>\n    </div>\n  )\n}\n\n\n\nfunction getSteps(config) {\n  return [\n    {title: 'Experiment summary', content: <ExperimentSummaryForm config={config} />, optional: true},\n    {title: 'Cleaning and preparation', content: <CleaningScript config={config}/>, optional: true},\n    {title: 'Start sensors', content: <StartSensors config={config}/>, optional: true},\n    {title: 'Start calculations', content: <StartCalculations config={config}/>, optional: false},\n  ];\n}\n\n\n\nfunction StartNewExperimentContainer(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps(props.config);\n\n  const getStepContent = (index) => {\n    return steps[index].content\n  }\n  const isStepOptional = (index) => {\n    return steps[index].optional\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    if (activeStep === steps.length - 1){\n      window.location.href = \"/overview\";\n    } else {\n\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(activeStep);\n      }\n\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      setSkipped(newSkipped);\n      window.scrollTo({top: 0})\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h5\" component=\"h1\">\n          Start a new experiment\n        </Typography>\n        <Stepper activeStep={activeStep}>\n          {steps.map((step, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (step.optional) {\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={step.title} {...stepProps}>\n                <StepLabel {...labelProps}>{step.title}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n              <div>\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n                {isStepOptional(activeStep) && (\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleSkip}\n                    className={classes.button}\n                  >\n                    Skip\n                  </Button>\n                )}\n\n                <Button\n                  variant=\"contained\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >\n                  {activeStep === steps.length - 1 ? 'Go to overview' : 'Next'}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n\n\nfunction StartNewExperiment(props) {\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12}><Header /></Grid>\n\n          <Grid item xs={1}/>\n          <Grid item xs={10}>\n            <div><StartNewExperimentContainer config={props.config}/></div>\n          </Grid>\n          <Grid item xs={1}/>\n        </Grid>\n    )\n}\n\nexport default StartNewExperiment;\n\n","import React from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport {Typography} from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Select from '@material-ui/core/Select';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { CodeFlaskReact } from \"react-codeflask\"\n\nimport Header from \"./components/Header\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"15px\"\n  },\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n}));\n\nclass EditableCodeDiv extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"\",\n      openSnackbar: false,\n      filename: \"config.ini\",\n      snackbarMsg: \"\",\n      isRunning: false,\n      availableConfigs: [\n        {name: \"shared config.ini\", filename: \"config.ini\"},\n      ]\n    };\n    this.saveCurrentCode = this.saveCurrentCode.bind(this);\n  }\n\n  async getConfig(filename) {\n    await fetch(\"/get_config/\" + filename)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        this.setState({code: text});\n      })\n  }\n\n  async getListOfConfigFiles(filename) {\n    await fetch(\"/get_configs\")\n      .then(response => {\n        return response.json();\n      })\n      .then(json => {\n        this.setState(prevState => ({\n          availableConfigs: [...prevState.availableConfigs, ...json.filter(e => (e !== 'config.ini')).map(e => ({name: e, filename: e}))]\n        }));\n      })\n  }\n\n  saveCurrentCode() {\n    this.setState({isRunning: true})\n    fetch('/save_new_config',{\n        method: \"POST\",\n        body: JSON.stringify({code :this.state.code, filename: this.state.filename}),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n    .then(res => {\n      if (res.ok) {\n        this.setState({snackbarMsg: this.state.filename + \" saved and synced.\"})\n      } else {\n        this.setState({snackbarMsg: \"Hm. Something when wrong saving or syncing...\"})\n      }\n      this.setState({openSnackbar: true, isRunning: false});\n    })\n  }\n\n  componentDidMount() {\n    this.getConfig(this.state.filename)\n    this.getListOfConfigFiles()\n  }\n\n  onSelectionChange = (e) => {\n    this.setState({filename: e.target.value})\n    this.getConfig(e.target.value)\n  }\n\n  getCodeFlaskRef = (codeFlask) => {\n    this.codeFlask = codeFlask\n  }\n\n  onTextChange = (code) => {\n    this.setState({code: code})\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({openSnackbar: false});\n  };\n\n  render() {\n    const runningFeedback = this.state.isRunning ? <CircularProgress color=\"inherit\" size={24}/> : \"Save\"\n    return (\n      <React.Fragment>\n        <Select\n          style={{margin: \"10px 10px 10px 10px\"}}\n          native\n          value={this.state.filename}\n          onChange={this.onSelectionChange}\n          inputProps={{\n            name: 'config',\n            id: 'config',\n          }}\n        >\n          {this.state.availableConfigs.map((v) => {\n            return <option key={v.filename} value={v.filename}>{v.name}</option>\n            }\n          )}\n        </Select>\n\n        <div style={{letterSpacing: \"0em\", margin: \"10px auto 10px auto\", position: \"relative\", width: \"98%\", height: \"300px\", border: \"1px solid #ccc\"}}>\n          <CodeFlaskReact\n            code={this.state.code}\n            onChange={this.onTextChange}\n            editorRef={this.getCodeFlaskRef}\n            language={\"python\"}\n          />\n        </div>\n        <Button\n          style={{margin: \"5px 10px 5px 10px\"}}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={this.saveCurrentCode}\n          disabled={false}>\n          {runningFeedback}\n        </Button>\n        <Snackbar\n          anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n          open={this.state.openSnackbar}\n          onClose={this.handleSnackbarClose}\n          message={this.state.snackbarMsg}\n          autoHideDuration={2000}\n          key={\"edit-config-snackbar\"}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\n\n\n\nfunction EditConfigContainer(){\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <div>\n        <div>\n          <Typography variant=\"h5\" component=\"h2\">\n            <Box fontWeight=\"fontWeightBold\">\n              Edit config.ini\n            </Box>\n          </Typography>\n        </div>\n      </div>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <p>Update the <code>config.ini</code> files. The shared <code>config.ini</code> will be deployed to <em>all</em> Pioreactors, but can be overwritten with a specific Pioreactor's <code>config.ini</code>. <a href=\"https://github.com/Pioreactor/pioreactor/wiki/Configuration-via-config.ini\" target=\"_blank\">Learn more about Pioreactor configuration</a>.</p>\n          <EditableCodeDiv/>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction EditConfig() {\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12}><Header /></Grid>\n          <Grid item md={12} xs={1}/>\n          <Grid item md={12} xs={1}/>\n\n          <Grid item md={1} xs={1}/>\n          <Grid item md={10} xs={12}>\n             <EditConfigContainer/>\n          </Grid>\n          <Grid item md={1} xs={1}/>\n        </Grid>\n    )\n}\n\nexport default EditConfig;\n\n","import React from \"react\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport {Typography} from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Link from '@material-ui/core/Link';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Divider from '@material-ui/core/Divider';\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nimport Header from \"./components/Header\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: 14,\n  },\n  cardContent: {\n    padding: \"10px\"\n  },\n  pos: {\n    marginBottom: 0,\n  },\n  textIcon: {\n    fontSize: 15,\n    verticalAlign: \"middle\",\n    margin: \"0px 3px\"\n  },\n}));\n\n\nfunction ConfirmDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openSnackbar, setOpenSnackbar] = React.useState(false)\n\n  const updateVersion = () => {\n    setOpen(false)\n    setOpenSnackbar(true)\n    fetch(\"/update_app\", {method: \"POST\"})\n    .then(res => {\n      if (res.ok) {\n        window.location.reload();\n        return false\n      }\n    })\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleClickOpen} style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n        <UpdateIcon className={classes.textIcon}/> Update to latest release\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirm update to latest release\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Updating will not stop or change currently running activities or experiments.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={updateVersion} color=\"primary\">\n            Update now\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n        open={openSnackbar}\n        message={\"Updating in the background - you may leave this page\"}\n        autoHideDuration={20000}\n        key={\"snackbar-update\"}\n      />\n    </React.Fragment>\n  );\n}\n\n\nfunction PageHeader(props) {\n  const classes = useStyles();\n  const [version, setVersion] = React.useState(\"\")\n  const [latestVersion, setLatestVersion] = React.useState(\"\")\n\n\n  React.useEffect(() => {\n    async function getCurrentApp() {\n         await fetch(\"/get_app_version\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setVersion(data)\n        });\n      }\n\n    async function getLatestVersion() {\n         await fetch(\"https://api.github.com/repos/pioreactor/pioreactor/releases/latest\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setLatestVersion(data['name'])\n        });\n      }\n\n      getCurrentApp()\n      getLatestVersion()\n  }, [])\n\n  return (\n    <React.Fragment>\n    <div>\n      <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n        <Typography variant=\"h5\" component=\"h1\">\n          <Box fontWeight=\"fontWeightBold\">\n            Updates\n          </Box>\n        </Typography>\n        <div >\n          <ConfirmDialog/>\n          <Link color=\"inherit\" underline=\"none\" href=\"https://github.com/Pioreactor/pioreactor/releases\" target=\"_blank\" rel=\"noopener\">\n            <Button style={{textTransform: 'none', float: \"right\", marginRight: \"0px\"}} color=\"primary\">\n              <ExitToAppIcon className={classes.textIcon}/> View latest release\n            </Button>\n          </Link>\n        </div>\n      </div>\n      <Divider/>\n      <Typography variant=\"subtitle2\">\n        <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n          <SystemUpdateAltIcon style={{ fontSize: 14, verticalAlign: \"middle\" }}/> Version installed:\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n          {version}\n        </Box>\n        <Box fontWeight=\"fontWeightBold\" style={{margin: \"10px 2px 10px 2px\", display:\"inline-block\"}}>\n          <UpdateIcon style={{ fontSize: 14, verticalAlign: \"middle\" }}/> Latest version available:\n        </Box>\n        <Box fontWeight=\"fontWeightRegular\" style={{marginRight: \"20px\", display:\"inline-block\"}}>\n          {latestVersion}\n        </Box>\n      </Typography>\n    </div>\n    </React.Fragment>\n  )\n}\n\n\n\nfunction ChangelogContainer(){\n  const classes = useStyles();\n\n  const [changelog, setChangelog] = React.useState(\"\")\n\n  React.useEffect(() => {\n    async function getData() {\n         await fetch(\"/get_changelog\")\n        .then((response) => {\n          return response.text();\n        })\n        .then((data) => {\n          setChangelog(data)\n        });\n      }\n      getData()\n  }, [])\n\n\n  return(\n    <React.Fragment>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n        <Typography variant=\"h6\" component=\"h6\">\n            Change log\n        </Typography>\n          <div dangerouslySetInnerHTML={{ __html: changelog }} />\n        </CardContent>\n      </Card>\n    </React.Fragment>\n)}\n\n\nfunction Updates() {\n    return (\n        <Grid container spacing={2} >\n          <Grid item xs={12}><Header /></Grid>\n          <Grid item md={12} xs={1}/>\n          <Grid item md={12} xs={1}/>\n\n          <Grid item md={1} xs={1}/>\n          <Grid item md={10} xs={12}>\n            <PageHeader/>\n            <ChangelogContainer/>\n          </Grid>\n          <Grid item md={1} xs={1}/>\n        </Grid>\n    )\n}\n\nexport default Updates;\n\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport TactileButtonNotification from \"./components/TactileButtonNotification\";\nimport ExperimentOverview from \"./ExperimentOverview\";\nimport DownloadData from \"./DownloadData\";\nimport Pioreactors from \"./Pioreactors\";\nimport StartNewExperiment from \"./StartNewExperiment\";\nimport EditConfig from \"./EditConfig\";\nimport Updates from \"./Updates\";\n\nimport \"fontsource-roboto/300-normal.css\"\nimport \"fontsource-roboto/400-normal.css\"\nimport \"fontsource-roboto/500-normal.css\"\nimport \"fontsource-roboto/700-normal.css\"\nimport './styles.css';\nimport {parseINIString} from \"./utilities\"\n\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#f6f6f7\",\n    },\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#5331CA',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n  },\n});\n\n\n\nfunction App() {\n\n  const [config, setConfig] = React.useState({})\n\n  React.useEffect(() => {\n\n    async function getConfig() {\n      await fetch(\"/get_config/config.ini\")\n        .then((response) => {\n            if (response.ok) {\n              return response.text();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          })\n        .then((config) => {\n          setConfig(parseINIString(config)); // TODO: parse on server side and send a json object\n        })\n        .catch((error) => {})\n    }\n    getConfig();\n  }, [])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <div className=\"pageContainer\">\n          <Switch>\n            <Route path=\"/download-data\">\n              <DownloadData config={config}/>\n              <TactileButtonNotification config={config}/>\n            </Route>\n            <Route path=\"/start-new-experiment\">\n              <StartNewExperiment config={config}/>\n              <TactileButtonNotification config={config}/>\n            </Route>\n            <Route path=\"/overview\">\n              <ExperimentOverview config={config}/>\n            </Route>\n            <Route path=\"/edit-config\">\n              <EditConfig config={config}/>\n              <TactileButtonNotification config={config}/>\n            </Route>\n            <Route path=\"/pioreactors\">\n              <Pioreactors config={config}/>\n            </Route>\n            <Route path=\"/Updates\">\n              <Updates config={config}/>\n              <TactileButtonNotification config={config}/>\n            </Route>\n            <Route path=\"/\">\n              <ExperimentOverview config={config}/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}